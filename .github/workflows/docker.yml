---
name: Docker Build and Publish

on:  # yamllint disable-line rule:truthy
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

  # Run manually
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Build and publish Docker image'

env:
  IMAGE_NAME: cowrie

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: tox

    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for cosign OIDC

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: python -m pip install -q --upgrade pip setuptools setuptools-scm wheel

      - name: Generate version file
        run: echo "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_COWRIE=$(python -m setuptools_scm --force-write-version-files)" >> $GITHUB_ENV

      - name: Set SOURCE_DATE_EPOCH
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.10.0
        if: ${{ (github.event_name != 'pull_request') && (github.repository == 'cowrie/cowrie') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cowrie/cowrie

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        if: ${{ (github.event_name != 'pull_request') && (github.repository == 'cowrie/cowrie') }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Container Image
        id: build
        uses: docker/build-push-action@v6
        with:
          push: false
          load: true
          # use context to access src/cowrie/_version.py we created earlier
          context: .
          tags: cowrie:test
          file: docker/Dockerfile

      - name: Test
        run: |
          docker run -d --rm cowrie:test

      - name: Push Container Image
        id: push
        if: ${{ (github.event_name != 'pull_request') && (github.repository == 'cowrie/cowrie') }}
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          # use context to access src/cowrie/_version.py we created earlier
          context: .
          push: true
          load: false
          sbom: true
          provenance: true
          tags: cowrie/cowrie:latest

      - name: Sign the images with GitHub OIDC Token
        if: ${{ (github.event_name != 'pull_request') && (github.repository == 'cowrie/cowrie') }}
        env:
          DIGEST: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign -y cowrie/cowrie@${DIGEST}
          cosign verify cowrie/cowrie --certificate-oidc-issuer-regexp 'https://token.actions.githubusercontent.com' --certificate-identity 'https://github.com/cowrie/cowrie/.github/workflows/docker.yml@refs/heads/main'
